/* [project]/node_modules/.pnpm/geist@1.4.2_next@15.4.6_react-dom@19.1.0_react@19.1.0__react@19.1.0_/node_modules/geist/dist/geistsans_81192321.module.css [app-client] (css) */
@font-face {
  font-family: GeistSans;
  src: url("../media/Geist_Variable-s.p.f406b17f.woff2") format("woff2");
  font-display: swap;
  font-weight: 100 900;
}

@font-face {
  font-family: GeistSans Fallback;
  src: local(Arial);
  ascent-override: 85.83%;
  descent-override: 20.53%;
  line-gap-override: 9.33%;
  size-adjust: 107.19%;
}

.geistsans_81192321-module__-uvsbq__className {
  font-family: GeistSans, GeistSans Fallback;
}

.geistsans_81192321-module__-uvsbq__variable {
  --font-geist-sans: "GeistSans", "GeistSans Fallback";
}

/* [project]/app/globals.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: rgba(0, 0, 0, 0);
      --tw-gradient-via: rgba(0, 0, 0, 0);
      --tw-gradient-to: rgba(0, 0, 0, 0);
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }

    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: rgba(0, 0, 0, 0);
      --tw-gradient-via: rgba(0, 0, 0, 0);
      --tw-gradient-to: rgba(0, 0, 0, 0);
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}

@layer theme {
  :root, :host {
    --color-red-50: #fef2f2;
    --color-red-100: #ffe2e2;
    --color-red-200: #ffcaca;
    --color-red-300: #ffa3a3;
    --color-red-400: #ff6568;
    --color-red-500: #fb2c36;
    --color-red-600: #e40014;
    --color-red-700: #bf000f;
    --color-red-800: #9f0712;
    --color-red-900: #82181a;
    --color-red-950: #460809;
    --color-orange-50: #fff7ed;
    --color-orange-100: #ffedd5;
    --color-orange-200: #ffd7a8;
    --color-orange-400: #ff8b1a;
    --color-orange-500: #fe6e00;
    --color-orange-600: #f05100;
    --color-orange-800: #9f2d00;
    --color-orange-900: #7e2a0c;
    --color-orange-950: #441306;
    --color-amber-50: #fffbeb;
    --color-amber-100: #fef3c6;
    --color-amber-200: #fee685;
    --color-amber-300: #ffd236;
    --color-amber-400: #fcbb00;
    --color-amber-500: #f99c00;
    --color-amber-600: #dd7400;
    --color-amber-700: #b75000;
    --color-amber-800: #953d00;
    --color-amber-900: #7b3306;
    --color-amber-950: #461901;
    --color-yellow-50: #fefce8;
    --color-yellow-100: #fef9c2;
    --color-yellow-200: #fff085;
    --color-yellow-500: #edb200;
    --color-yellow-600: #cd8900;
    --color-yellow-700: #a36100;
    --color-yellow-800: #874b00;
    --color-yellow-900: #733e0a;
    --color-yellow-950: #432004;
    --color-lime-500: #80cd00;
    --color-lime-600: #62a400;
    --color-green-50: #f0fdf4;
    --color-green-100: #dcfce7;
    --color-green-200: #b9f8cf;
    --color-green-300: #7bf1a8;
    --color-green-400: #05df72;
    --color-green-500: #00c758;
    --color-green-600: #00a544;
    --color-green-700: #008138;
    --color-green-800: #016630;
    --color-green-900: #0d542b;
    --color-green-950: #032e15;
    --color-emerald-50: #ecfdf5;
    --color-emerald-100: #d0fae5;
    --color-emerald-200: #a4f4cf;
    --color-emerald-300: #5ee9b5;
    --color-emerald-400: #00d294;
    --color-emerald-500: #00bb7f;
    --color-emerald-600: #009767;
    --color-emerald-700: #007956;
    --color-emerald-800: #005f46;
    --color-emerald-900: #004e3b;
    --color-emerald-950: #002c22;
    --color-teal-50: #f0fdfa;
    --color-teal-400: #00d3bd;
    --color-teal-500: #00baa7;
    --color-teal-600: #009588;
    --color-teal-700: #00776e;
    --color-cyan-50: #ecfeff;
    --color-cyan-100: #cefafe;
    --color-cyan-200: #a2f4fd;
    --color-cyan-500: #00b7d7;
    --color-cyan-600: #0092b5;
    --color-cyan-700: #007492;
    --color-cyan-800: #005f78;
    --color-cyan-900: #104e64;
    --color-cyan-950: #053345;
    --color-sky-50: #f0f9ff;
    --color-sky-100: #dff2fe;
    --color-sky-200: #b8e6fe;
    --color-sky-300: #77d4ff;
    --color-sky-400: #00bcfe;
    --color-sky-500: #00a5ef;
    --color-sky-600: #0084cc;
    --color-sky-700: #0069a4;
    --color-sky-800: #005986;
    --color-sky-900: #024a70;
    --color-sky-950: #052f4a;
    --color-blue-50: #eff6ff;
    --color-blue-100: #dbeafe;
    --color-blue-200: #bedbff;
    --color-blue-400: #54a2ff;
    --color-blue-500: #3080ff;
    --color-blue-600: #155dfc;
    --color-blue-700: #1447e6;
    --color-blue-800: #193cb8;
    --color-blue-900: #1c398e;
    --color-blue-950: #162456;
    --color-indigo-50: #eef2ff;
    --color-indigo-100: #e0e7ff;
    --color-indigo-400: #7d87ff;
    --color-indigo-500: #625fff;
    --color-indigo-600: #4f39f6;
    --color-indigo-800: #372aac;
    --color-indigo-900: #312c85;
    --color-indigo-950: #1e1a4d;
    --color-violet-500: #8d54ff;
    --color-purple-100: #f3e8ff;
    --color-purple-200: #e9d5ff;
    --color-purple-400: #c07eff;
    --color-purple-500: #ac4bff;
    --color-purple-600: #9810fa;
    --color-purple-800: #6e11b0;
    --color-purple-900: #59168b;
    --color-fuchsia-500: #e12afb;
    --color-pink-400: #fb64b6;
    --color-pink-500: #f6339a;
    --color-pink-600: #e30076;
    --color-pink-700: #c4005c;
    --color-pink-950: #510424;
    --color-rose-50: #fff1f2;
    --color-rose-100: #ffe4e6;
    --color-rose-200: #ffccd3;
    --color-rose-400: #ff667f;
    --color-rose-500: #ff2357;
    --color-rose-600: #e70044;
    --color-rose-700: #c20039;
    --color-rose-800: #a30037;
    --color-rose-900: #8b0836;
    --color-rose-950: #4d0218;
    --color-slate-50: #f8fafc;
    --color-slate-100: #f1f5f9;
    --color-slate-200: #e2e8f0;
    --color-slate-300: #cad5e2;
    --color-slate-400: #90a1b9;
    --color-slate-500: #62748e;
    --color-slate-600: #45556c;
    --color-slate-700: #314158;
    --color-slate-800: #1d293d;
    --color-slate-900: #0f172b;
    --color-gray-50: #f9fafb;
    --color-gray-100: #f3f4f6;
    --color-gray-200: #e5e7eb;
    --color-gray-300: #d1d5dc;
    --color-gray-400: #99a1af;
    --color-gray-500: #6a7282;
    --color-gray-600: #4a5565;
    --color-gray-700: #364153;
    --color-gray-800: #1e2939;
    --color-gray-900: #101828;
    --color-gray-950: #030712;
    --color-neutral-50: #fafafa;
    --color-neutral-100: #f5f5f5;
    --color-neutral-200: #e5e5e5;
    --color-neutral-300: #d4d4d4;
    --color-neutral-400: #a1a1a1;
    --color-neutral-500: #737373;
    --color-neutral-600: #525252;
    --color-neutral-700: #404040;
    --color-neutral-800: #262626;
    --color-neutral-900: #171717;
    --color-neutral-950: #0a0a0a;
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -.025em;
    --tracking-wider: .05em;
    --tracking-widest: .1em;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: .125rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(.4, 0, .2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --blur-sm: 8px;
    --blur-xl: 24px;
    --blur-3xl: 64px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-geist-sans);
    --default-mono-font-family: var(--font-geist-mono);
  }

  @supports (color: color(display-p3 0 0 0)) {
    :root, :host {
      --color-red-50: color(display-p3 .988669 .951204 .950419);
      --color-red-100: color(display-p3 .980386 .889727 .887779);
      --color-red-200: color(display-p3 .969562 .798149 .794299);
      --color-red-300: color(display-p3 .956922 .651886 .645122);
      --color-red-400: color(display-p3 .933534 .431676 .423491);
      --color-red-500: color(display-p3 .903738 .262579 .253307);
      --color-red-600: color(display-p3 .830323 .140383 .133196);
      --color-red-700: color(display-p3 .692737 .116232 .104679);
      --color-red-800: color(display-p3 .569606 .121069 .108493);
      --color-red-900: color(display-p3 .466906 .133198 .12139);
      --color-red-950: color(display-p3 .25064 .0550983 .0468818);
      --color-orange-50: color(display-p3 .99533 .970132 .933499);
      --color-orange-100: color(display-p3 .988762 .931393 .843273);
      --color-orange-200: color(display-p3 .974647 .84705 .680111);
      --color-orange-400: color(display-p3 .950192 .561807 .211017);
      --color-orange-500: color(display-p3 .946589 .449788 .0757345);
      --color-orange-600: color(display-p3 .887467 .341665 .0219962);
      --color-orange-800: color(display-p3 .575591 .21198 .082665);
      --color-orange-900: color(display-p3 .457137 .188093 .0897628);
      --color-orange-950: color(display-p3 .244276 .0875626 .0387614);
      --color-amber-50: color(display-p3 .997804 .985047 .926312);
      --color-amber-100: color(display-p3 .989391 .954583 .796328);
      --color-amber-200: color(display-p3 .979824 .904554 .57325);
      --color-amber-300: color(display-p3 .974327 .83063 .33298);
      --color-amber-400: color(display-p3 .959186 .738519 .118268);
      --color-amber-500: color(display-p3 .93994 .620584 .0585367);
      --color-amber-600: color(display-p3 .827144 .467166 .0336006);
      --color-amber-700: color(display-p3 .67989 .32771 .0520514);
      --color-amber-800: color(display-p3 .547533 .256058 .0728326);
      --color-amber-900: color(display-p3 .445958 .216422 .0823321);
      --color-amber-950: color(display-p3 .252662 .109091 .026881);
      --color-yellow-50: color(display-p3 .994197 .988062 .917538);
      --color-yellow-100: color(display-p3 .993436 .977463 .782913);
      --color-yellow-200: color(display-p3 .988789 .943116 .579188);
      --color-yellow-500: color(display-p3 .903651 .703062 .0745389);
      --color-yellow-600: color(display-p3 .776342 .542492 .041709);
      --color-yellow-700: color(display-p3 .613146 .386658 .0579687);
      --color-yellow-800: color(display-p3 .503181 .30478 .075537);
      --color-yellow-900: color(display-p3 .422485 .252729 .095052);
      --color-yellow-950: color(display-p3 .243647 .131076 .0413888);
      --color-lime-500: color(display-p3 .5627 .801803 .131231);
      --color-lime-600: color(display-p3 .435354 .640614 .0909333);
      --color-green-50: color(display-p3 .950677 .990571 .959366);
      --color-green-100: color(display-p3 .885269 .984329 .910368);
      --color-green-200: color(display-p3 .776442 .964383 .823412);
      --color-green-300: color(display-p3 .600292 .935514 .68114);
      --color-green-400: color(display-p3 .399536 .862346 .49324);
      --color-green-500: color(display-p3 .308734 .774754 .374307);
      --color-green-600: color(display-p3 .243882 .640824 .294808);
      --color-green-700: color(display-p3 .198355 .501799 .245335);
      --color-green-800: color(display-p3 .168568 .395123 .211217);
      --color-green-900: color(display-p3 .147288 .323577 .185694);
      --color-green-950: color(display-p3 .0670178 .177818 .0930111);
      --color-emerald-50: color(display-p3 .936818 .989882 .961937);
      --color-emerald-100: color(display-p3 .848335 .975974 .901691);
      --color-emerald-200: color(display-p3 .713164 .947563 .822283);
      --color-emerald-300: color(display-p3 .524941 .903425 .722352);
      --color-emerald-400: color(display-p3 .334701 .819603 .591575);
      --color-emerald-500: color(display-p3 .267113 .726847 .508397);
      --color-emerald-600: color(display-p3 .206557 .589057 .413962);
      --color-emerald-700: color(display-p3 .164041 .470229 .343508);
      --color-emerald-800: color(display-p3 .135396 .371401 .277561);
      --color-emerald-900: color(display-p3 .117821 .302975 .234501);
      --color-emerald-950: color(display-p3 .0549113 .170434 .13484);
      --color-teal-50: color(display-p3 .951444 .990904 .98112);
      --color-teal-400: color(display-p3 .322787 .822056 .744388);
      --color-teal-500: color(display-p3 .266569 .721518 .655462);
      --color-teal-600: color(display-p3 .207114 .579584 .53668);
      --color-teal-700: color(display-p3 .174094 .461318 .433866);
      --color-cyan-50: color(display-p3 .938135 .993772 .998465);
      --color-cyan-100: color(display-p3 .843085 .97553 .992573);
      --color-cyan-200: color(display-p3 .707418 .947027 .984826);
      --color-cyan-500: color(display-p3 .246703 .710032 .841444);
      --color-cyan-600: color(display-p3 .193249 .564651 .707197);
      --color-cyan-700: color(display-p3 .164124 .451431 .570574);
      --color-cyan-800: color(display-p3 .151437 .365208 .461053);
      --color-cyan-900: color(display-p3 .142586 .302008 .385094);
      --color-cyan-950: color(display-p3 .0805271 .197254 .263206);
      --color-sky-50: color(display-p3 .946501 .975402 .998336);
      --color-sky-100: color(display-p3 .889195 .946622 .992447);
      --color-sky-200: color(display-p3 .758153 .897447 .986665);
      --color-sky-300: color(display-p3 .546356 .822561 .990576);
      --color-sky-400: color(display-p3 .305975 .725011 .980173);
      --color-sky-500: color(display-p3 .219113 .639027 .931479);
      --color-sky-600: color(display-p3 .162505 .509376 .796082);
      --color-sky-700: color(display-p3 .130314 .404568 .640847);
      --color-sky-800: color(display-p3 .120719 .343083 .524405);
      --color-sky-900: color(display-p3 .115471 .285486 .428673);
      --color-sky-950: color(display-p3 .0726429 .180783 .28188);
      --color-blue-50: color(display-p3 .941826 .963151 .995385);
      --color-blue-100: color(display-p3 .869214 .915931 .989622);
      --color-blue-200: color(display-p3 .76688 .855207 .987483);
      --color-blue-400: color(display-p3 .397443 .62813 .992116);
      --color-blue-500: color(display-p3 .266422 .491219 .988624);
      --color-blue-600: color(display-p3 .174493 .358974 .950247);
      --color-blue-700: color(display-p3 .1379 .274983 .867624);
      --color-blue-800: color(display-p3 .134023 .230646 .695537);
      --color-blue-900: color(display-p3 .136395 .219428 .537145);
      --color-blue-950: color(display-p3 .0993202 .141621 .323413);
      --color-indigo-50: color(display-p3 .936215 .948621 .995621);
      --color-indigo-100: color(display-p3 .883035 .90499 .993138);
      --color-indigo-400: color(display-p3 .494992 .525291 .985107);
      --color-indigo-500: color(display-p3 .380374 .372235 .971707);
      --color-indigo-600: color(display-p3 .297656 .227891 .929242);
      --color-indigo-800: color(display-p3 .207204 .165242 .647584);
      --color-indigo-900: color(display-p3 .188425 .173312 .503066);
      --color-indigo-950: color(display-p3 .114685 .103142 .289065);
      --color-violet-500: color(display-p3 .523372 .329605 .990884);
      --color-purple-100: color(display-p3 .945034 .910569 .992972);
      --color-purple-200: color(display-p3 .901181 .835978 .992237);
      --color-purple-400: color(display-p3 .719919 .492497 .995173);
      --color-purple-500: color(display-p3 .629519 .30089 .990817);
      --color-purple-600: color(display-p3 .546729 .130167 .94439);
      --color-purple-800: color(display-p3 .393513 .10339 .664476);
      --color-purple-900: color(display-p3 .321698 .107597 .524563);
      --color-fuchsia-500: color(display-p3 .81268 .241966 .951571);
      --color-pink-400: color(display-p3 .915485 .430491 .70271);
      --color-pink-500: color(display-p3 .88894 .276457 .595049);
      --color-pink-600: color(display-p3 .825649 .141205 .459338);
      --color-pink-700: color(display-p3 .711537 .101006 .358209);
      --color-pink-950: color(display-p3 .289266 .0492215 .139542);
      --color-rose-50: color(display-p3 .989671 .946597 .949215);
      --color-rose-100: color(display-p3 .982241 .897232 .902568);
      --color-rose-200: color(display-p3 .96875 .808776 .827317);
      --color-rose-400: color(display-p3 .942928 .430764 .503101);
      --color-rose-500: color(display-p3 .921824 .240748 .355666);
      --color-rose-600: color(display-p3 .848792 .102011 .269259);
      --color-rose-700: color(display-p3 .711801 .0770816 .226777);
      --color-rose-800: color(display-p3 .591248 .0929065 .220097);
      --color-rose-900: color(display-p3 .498064 .104884 .214595);
      --color-rose-950: color(display-p3 .275407 .0406065 .0990695);
      --color-slate-50: color(display-p3 .974377 .979815 .986207);
      --color-slate-100: color(display-p3 .947345 .959969 .97483);
      --color-slate-200: color(display-p3 .890322 .909405 .939294);
      --color-slate-300: color(display-p3 .800294 .834432 .882803);
      --color-slate-400: color(display-p3 .577446 .629622 .716602);
      --color-slate-500: color(display-p3 .397645 .452653 .547642);
      --color-slate-600: color(display-p3 .283418 .332214 .416355);
      --color-slate-700: color(display-p3 .205992 .253487 .336039);
      --color-slate-800: color(display-p3 .121994 .158688 .232363);
      --color-slate-900: color(display-p3 .0639692 .0891152 .163036);
      --color-gray-50: color(display-p3 .977213 .98084 .985102);
      --color-gray-100: color(display-p3 .953567 .956796 .964321);
      --color-gray-200: color(display-p3 .899787 .906171 .92106);
      --color-gray-300: color(display-p3 .822033 .835264 .858521);
      --color-gray-400: color(display-p3 .605734 .630385 .680158);
      --color-gray-500: color(display-p3 .421287 .446085 .504784);
      --color-gray-600: color(display-p3 .297358 .332176 .39043);
      --color-gray-700: color(display-p3 .219968 .253721 .318679);
      --color-gray-800: color(display-p3 .125854 .159497 .216835);
      --color-gray-900: color(display-p3 .070423 .0928982 .151928);
      --color-gray-950: color(display-p3 .0144294 .0270755 .068534);
      --color-neutral-50: color(display-p3 .980256 .980256 .980256);
      --color-neutral-100: color(display-p3 .960587 .960587 .960587);
      --color-neutral-200: color(display-p3 .898161 .898161 .898161);
      --color-neutral-300: color(display-p3 .831444 .831444 .831444);
      --color-neutral-400: color(display-p3 .630163 .630163 .630163);
      --color-neutral-500: color(display-p3 .451519 .451519 .451519);
      --color-neutral-600: color(display-p3 .321993 .321993 .321993);
      --color-neutral-700: color(display-p3 .250471 .250471 .250471);
      --color-neutral-800: color(display-p3 .149382 .149382 .149382);
      --color-neutral-900: color(display-p3 .0905274 .0905274 .0905274);
      --color-neutral-950: color(display-p3 .0393882 .0393882 .0393882);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :root, :host {
      --color-red-50: lab(96.5005% 4.18508 1.52328);
      --color-red-100: lab(92.243% 10.2865 3.83865);
      --color-red-200: lab(86.017% 19.8815 7.75869);
      --color-red-300: lab(76.5514% 36.422 15.5335);
      --color-red-400: lab(63.7053% 60.745 31.3109);
      --color-red-500: lab(55.4814% 75.0732 48.8528);
      --color-red-600: lab(48.4493% 77.4328 61.5452);
      --color-red-700: lab(40.4273% 67.2623 53.7441);
      --color-red-800: lab(33.7174% 55.8993 41.0293);
      --color-red-900: lab(28.5139% 44.5539 29.0463);
      --color-red-950: lab(13.003% 29.04 16.7519);
      --color-orange-50: lab(97.7008% 1.53735 5.90649);
      --color-orange-100: lab(94.7127% 3.58394 14.3151);
      --color-orange-200: lab(88.4871% 9.94918 28.8378);
      --color-orange-400: lab(70.0429% 42.5156 75.8207);
      --color-orange-500: lab(64.272% 57.1788 90.3583);
      --color-orange-600: lab(57.1026% 64.2584 89.8886);
      --color-orange-800: lab(37.1566% 46.6433 50.5562);
      --color-orange-900: lab(30.2951% 36.0434 37.671);
      --color-orange-950: lab(14.1747% 23.4515 19.4461);
      --color-amber-50: lab(98.6252% -.635922 8.42309);
      --color-amber-100: lab(95.916% -1.21653 23.111);
      --color-amber-200: lab(91.7203% -.505269 49.9084);
      --color-amber-300: lab(86.4156% 6.13147 78.3961);
      --color-amber-400: lab(80.1641% 16.6016 99.2089);
      --color-amber-500: lab(72.7183% 31.8672 97.9407);
      --color-amber-600: lab(60.3514% 40.5624 87.1228);
      --color-amber-700: lab(47.2709% 42.9082 69.2966);
      --color-amber-800: lab(37.8822% 37.1699 52.2718);
      --color-amber-900: lab(31.2288% 30.2627 40.0378);
      --color-amber-950: lab(15.8111% 20.9107 23.3752);
      --color-yellow-50: lab(98.6846% -1.79055 9.7766);
      --color-yellow-100: lab(97.3564% -4.51407 27.344);
      --color-yellow-200: lab(94.3433% -5.00429 52.9663);
      --color-yellow-500: lab(76.3898% 14.5258 98.4589);
      --color-yellow-600: lab(62.7799% 22.4197 86.1544);
      --color-yellow-700: lab(47.8202% 25.2426 66.5015);
      --color-yellow-800: lab(38.7484% 23.5833 51.4916);
      --color-yellow-900: lab(32.3865% 21.1273 38.5959);
      --color-yellow-950: lab(16.8146% 15.7422 23.1133);
      --color-lime-500: lab(75.3197% -46.6547 86.1778);
      --color-lime-600: lab(61.1055% -41.0235 73.1483);
      --color-green-50: lab(98.1563% -5.60117 2.75915);
      --color-green-100: lab(96.1861% -13.8464 6.52365);
      --color-green-200: lab(92.4222% -26.4702 12.9427);
      --color-green-300: lab(86.9953% -47.2691 25.0054);
      --color-green-400: lab(78.503% -64.9265 39.7492);
      --color-green-500: lab(70.5521% -66.5147 45.8073);
      --color-green-600: lab(59.0978% -58.6621 41.2579);
      --color-green-700: lab(47.0329% -47.0239 31.4788);
      --color-green-800: lab(37.4616% -36.7971 22.9692);
      --color-green-900: lab(30.797% -29.6927 17.382);
      --color-green-950: lab(15.6845% -20.4225 11.7249);
      --color-emerald-50: lab(97.8462% -6.94966 1.85487);
      --color-emerald-100: lab(94.9004% -17.0769 5.63836);
      --color-emerald-200: lab(90.2247% -31.039 9.47084);
      --color-emerald-300: lab(83.9203% -48.7124 13.8849);
      --color-emerald-400: lab(75.0771% -60.7313 19.4147);
      --color-emerald-500: lab(66.9756% -58.27 19.5419);
      --color-emerald-600: lab(55.0481% -49.9246 15.93);
      --color-emerald-700: lab(44.4871% -41.0396 11.0361);
      --color-emerald-800: lab(35.3675% -33.1188 8.04002);
      --color-emerald-900: lab(28.8637% -26.9249 5.45986);
      --color-emerald-950: lab(15.0582% -17.9507 2.38369);
      --color-teal-50: lab(98.3189% -4.74921 -.111711);
      --color-teal-400: lab(76.0109% -53.3483 -2.27906);
      --color-teal-500: lab(67.3859% -49.0983 -2.63511);
      --color-teal-600: lab(55.0223% -41.0774 -3.90277);
      --color-teal-700: lab(44.4134% -33.1436 -4.22149);
      --color-cyan-50: lab(98.3304% -5.97432 -2.62108);
      --color-cyan-100: lab(95.3146% -13.8285 -6.84732);
      --color-cyan-200: lab(91.0821% -24.0435 -12.8306);
      --color-cyan-500: lab(67.805% -35.3952 -30.2018);
      --color-cyan-600: lab(55.1767% -26.7496 -30.5139);
      --color-cyan-700: lab(44.7267% -21.5987 -26.118);
      --color-cyan-800: lab(36.5114% -17.1989 -21.6292);
      --color-cyan-900: lab(30.372% -13.1853 -18.7887);
      --color-cyan-950: lab(19.1528% -9.68757 -15.5267);
      --color-sky-50: lab(97.3623% -2.33802 -4.13098);
      --color-sky-100: lab(94.3709% -4.56053 -8.23453);
      --color-sky-200: lab(88.6983% -11.3978 -16.8488);
      --color-sky-300: lab(80.3307% -20.2945 -31.385);
      --color-sky-400: lab(70.687% -23.6078 -45.9483);
      --color-sky-500: lab(63.3038% -18.433 -51.0407);
      --color-sky-600: lab(51.7754% -11.4712 -49.8349);
      --color-sky-700: lab(41.6013% -9.10804 -42.5647);
      --color-sky-800: lab(35.164% -9.57692 -34.4068);
      --color-sky-900: lab(29.1959% -8.34689 -28.2453);
      --color-sky-950: lab(17.8299% -5.31271 -21.1584);
      --color-blue-50: lab(96.492% -1.14644 -5.11479);
      --color-blue-100: lab(92.0301% -2.24757 -11.6453);
      --color-blue-200: lab(86.15% -4.04379 -21.0797);
      --color-blue-400: lab(65.0361% -1.42065 -56.9802);
      --color-blue-500: lab(54.1736% 13.3369 -74.6839);
      --color-blue-600: lab(44.0605% 29.0279 -86.0352);
      --color-blue-700: lab(36.9089% 35.0961 -85.6872);
      --color-blue-800: lab(30.2514% 27.7853 -70.2699);
      --color-blue-900: lab(26.1542% 15.7545 -51.5504);
      --color-blue-950: lab(15.6723% 8.86232 -32.2945);
      --color-indigo-50: lab(95.4818% .411302 -6.78529);
      --color-indigo-100: lab(91.6577% 1.04591 -12.7199);
      --color-indigo-400: lab(59.866% 22.4834 -64.4485);
      --color-indigo-500: lab(48.295% 38.3129 -81.9673);
      --color-indigo-600: lab(38.4009% 52.6132 -92.3857);
      --color-indigo-800: lab(26.6645% 37.9804 -68.6402);
      --color-indigo-900: lab(23.3911% 24.6978 -50.4718);
      --color-indigo-950: lab(12.4853% 14.9672 -31.3418);
      --color-violet-500: lab(49.9355% 55.1776 -81.8963);
      --color-purple-100: lab(93.3333% 6.97437 -9.83434);
      --color-purple-200: lab(87.8405% 13.4282 -18.7159);
      --color-purple-400: lab(63.6946% 47.6127 -59.2066);
      --color-purple-500: lab(52.0183% 66.11 -78.2316);
      --color-purple-600: lab(43.0295% 75.21 -86.5669);
      --color-purple-800: lab(30.6017% 56.7637 -64.4751);
      --color-purple-900: lab(24.9401% 45.2703 -51.2728);
      --color-fuchsia-500: lab(56.4256% 83.132 -64.639);
      --color-pink-400: lab(64.5597% 64.3615 -12.7988);
      --color-pink-500: lab(56.9303% 76.8162 -8.07021);
      --color-pink-600: lab(49.5493% 79.8381 2.31768);
      --color-pink-700: lab(42.1737% 71.8009 7.42233);
      --color-pink-950: lab(15.6116% 35.2166 3.53979);
      --color-rose-50: lab(96.2369% 4.94155 1.28011);
      --color-rose-100: lab(92.8221% 9.86832 2.60075);
      --color-rose-200: lab(86.806% 19.1909 4.07754);
      --color-rose-400: lab(64.4125% 63.0291 19.2068);
      --color-rose-500: lab(56.101% 79.4328 31.4532);
      --color-rose-600: lab(49.1882% 81.577 36.0311);
      --color-rose-700: lab(41.1651% 71.6251 30.3087);
      --color-rose-800: lab(34.6481% 60.802 20.1957);
      --color-rose-900: lab(29.7104% 51.514 12.6253);
      --color-rose-950: lab(14.2323% 34.0086 9.80922);
      --color-slate-50: lab(98.1434% -.369519 -1.05966);
      --color-slate-100: lab(96.286% -.852436 -2.46847);
      --color-slate-200: lab(91.7353% -.998765 -4.76968);
      --color-slate-300: lab(84.7652% -1.94535 -7.93337);
      --color-slate-400: lab(65.5349% -2.25151 -14.5072);
      --color-slate-500: lab(48.0876% -2.03595 -16.5814);
      --color-slate-600: lab(35.5623% -1.74978 -15.4316);
      --color-slate-700: lab(26.9569% -1.47016 -15.6993);
      --color-slate-800: lab(16.132% -.318035 -14.6672);
      --color-slate-900: lab(7.78673% 1.82345 -15.0537);
      --color-gray-50: lab(98.2596% -.247031 -.706708);
      --color-gray-100: lab(96.1596% -.0823438 -1.13575);
      --color-gray-200: lab(91.6229% -.159115 -2.26791);
      --color-gray-300: lab(85.1236% -.612259 -3.7138);
      --color-gray-400: lab(65.9269% -.832707 -8.17473);
      --color-gray-500: lab(47.7841% -.393182 -10.0268);
      --color-gray-600: lab(35.6337% -1.58697 -10.8425);
      --color-gray-700: lab(27.1134% -.956401 -12.3224);
      --color-gray-800: lab(16.1051% -1.18239 -11.7533);
      --color-gray-900: lab(8.11897% .811279 -12.254);
      --color-gray-950: lab(1.90334% .278696 -5.48866);
      --color-neutral-50: lab(98.26% 0 0);
      --color-neutral-100: lab(96.52% -.0000298023 .0000119209);
      --color-neutral-200: lab(90.952% 0 -.0000119209);
      --color-neutral-300: lab(84.92% 0 -.0000119209);
      --color-neutral-400: lab(66.128% -.0000298023 .0000119209);
      --color-neutral-500: lab(48.496% 0 0);
      --color-neutral-600: lab(34.924% 0 0);
      --color-neutral-700: lab(27.036% 0 0);
      --color-neutral-800: lab(15.204% 0 -.00000596046);
      --color-neutral-900: lab(7.78201% -.0000149012 0);
      --color-neutral-950: lab(2.75381% 0 0);
    }
  }
}

@layer base {
  *, :after, :before {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::-webkit-file-upload-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  ::-webkit-file-upload-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:-moz-any([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup option:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:-moz-any([multiple], [size])) optgroup option:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:is([multiple], [size])) optgroup option:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup option:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :where(select:-moz-any([multiple], [size])) optgroup option:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :where(select:is([multiple], [size])) optgroup option:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::-webkit-file-upload-button {
    margin-right: 4px;
  }

  :not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::file-selector-button {
    margin-right: 4px;
  }

  :not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::file-selector-button {
    margin-right: 4px;
  }

  :-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::-webkit-file-upload-button {
    margin-left: 4px;
  }

  :-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::file-selector-button {
    margin-left: 4px;
  }

  :is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::file-selector-button {
    margin-left: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  input:where([type="button"], [type="reset"], [type="submit"]) {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::file-selector-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  [type="text"], [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    --tw-shadow: 0 0 rgba(0, 0, 0, 0);
    background-color: #fff;
    border-width: 1px;
    border-color: #6a7282;
    border-color: color(display-p3 .421287 .446085 .504784);
    border-color: lab(47.7841% -.393182 -10.0268);
    border-radius: 0;
    padding: .5rem .75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }

  input:where(:not([type])) {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    --tw-shadow: 0 0 rgba(0, 0, 0, 0);
    background-color: #fff;
    border-width: 1px;
    border-color: #6a7282;
    border-color: color(display-p3 .421287 .446085 .504784);
    border-color: lab(47.7841% -.393182 -10.0268);
    border-radius: 0;
    padding: .5rem .75rem;
    font-size: 1rem;
    line-height: 1.5rem;
  }

  input:where(:not([type])):focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty, );
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: #155dfc;
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    border-color: #155dfc;
    border-color: color(display-p3 .174493 .358974 .950247);
    border-color: lab(44.0605% 29.0279 -86.0352);
    outline: 2px solid rgba(0, 0, 0, 0);
  }

  @supports (color: color(display-p3 0 0 0)) {
    input:where(:not([type])):focus {
      --tw-ring-color: color(display-p3 .174493 .358974 .950247);
    }
  }

  @supports (color: lab(0% 0 0)) {
    input:where(:not([type])):focus {
      --tw-ring-color: lab(44.0605% 29.0279 -86.0352);
    }
  }

  :is([type="text"], [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select):focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty, );
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: #155dfc;
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    border-color: #155dfc;
    border-color: color(display-p3 .174493 .358974 .950247);
    border-color: lab(44.0605% 29.0279 -86.0352);
    outline: 2px solid rgba(0, 0, 0, 0);
  }

  @supports (color: color(display-p3 0 0 0)) {
    :is([type="text"], [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select):focus {
      --tw-ring-color: color(display-p3 .174493 .358974 .950247);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :is([type="text"], [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select):focus {
      --tw-ring-color: lab(44.0605% 29.0279 -86.0352);
    }
  }

  input::placeholder, textarea::placeholder {
    color: #6a7282;
    color: color(display-p3 .421287 .446085 .504784);
    color: lab(47.7841% -.393182 -10.0268);
    opacity: 1;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-date-and-time-value {
    min-height: 1.5em;
  }

  ::-webkit-date-and-time-value {
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  select {
    print-color-adjust: exact;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right .5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
  }

  [multiple] {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    print-color-adjust: unset;
    padding-right: .75rem;
  }

  [size]:where(select:not([size="1"])) {
    background-image: initial;
    background-position: initial;
    background-repeat: unset;
    background-size: initial;
    print-color-adjust: unset;
    padding-right: .75rem;
  }

  [type="checkbox"], [type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    print-color-adjust: exact;
    vertical-align: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    color: #155dfc;
    color: color(display-p3 .174493 .358974 .950247);
    color: lab(44.0605% 29.0279 -86.0352);
    --tw-shadow: 0 0 rgba(0, 0, 0, 0);
    background-color: #fff;
    background-origin: border-box;
    border-width: 1px;
    border-color: #6a7282;
    border-color: color(display-p3 .421287 .446085 .504784);
    border-color: lab(47.7841% -.393182 -10.0268);
    flex-shrink: 0;
    width: 1rem;
    height: 1rem;
    padding: 0;
    display: inline-block;
  }

  [type="checkbox"] {
    border-radius: 0;
  }

  [type="radio"] {
    border-radius: 100%;
  }

  [type="checkbox"]:focus, [type="radio"]:focus {
    outline-offset: 2px;
    --tw-ring-inset: var(--tw-empty, );
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: #155dfc;
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline: 2px solid rgba(0, 0, 0, 0);
  }

  @supports (color: color(display-p3 0 0 0)) {
    [type="checkbox"]:focus, [type="radio"]:focus {
      --tw-ring-color: color(display-p3 .174493 .358974 .950247);
    }
  }

  @supports (color: lab(0% 0 0)) {
    [type="checkbox"]:focus, [type="radio"]:focus {
      --tw-ring-color: lab(44.0605% 29.0279 -86.0352);
    }
  }

  [type="checkbox"]:checked, [type="radio"]:checked {
    background-color: currentColor;
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: rgba(0, 0, 0, 0);
  }

  [type="checkbox"]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
  }

  @media (forced-colors: active) {
    [type="checkbox"]:checked {
      -webkit-appearance: auto;
      -moz-appearance: auto;
      appearance: auto;
    }
  }

  [type="radio"]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
  }

  @media (forced-colors: active) {
    [type="radio"]:checked {
      -webkit-appearance: auto;
      -moz-appearance: auto;
      appearance: auto;
    }
  }

  [type="checkbox"]:checked:hover, [type="checkbox"]:checked:focus, [type="radio"]:checked:hover, [type="radio"]:checked:focus {
    background-color: currentColor;
    border-color: rgba(0, 0, 0, 0);
  }

  [type="checkbox"]:indeterminate {
    background-color: currentColor;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-color: rgba(0, 0, 0, 0);
  }

  @media (forced-colors: active) {
    [type="checkbox"]:indeterminate {
      -webkit-appearance: auto;
      -moz-appearance: auto;
      appearance: auto;
    }
  }

  [type="checkbox"]:indeterminate:hover, [type="checkbox"]:indeterminate:focus {
    background-color: currentColor;
    border-color: rgba(0, 0, 0, 0);
  }

  [type="file"] {
    background: unset;
    border-color: inherit;
    font-size: unset;
    line-height: inherit;
    border-width: 0;
    border-radius: 0;
    padding: 0;
  }

  [type="file"]:focus {
    outline: 1px solid buttontext;
    outline: 1px auto -webkit-focus-ring-color;
  }
}

@layer components {
  .tremor-AreaChart .recharts-area:first-child {
    fill: #ef4444 !important;
    stroke: #ef4444 !important;
  }

  .tremor-AreaChart .recharts-area:nth-child(2) {
    fill: #3b82f6 !important;
    stroke: #3b82f6 !important;
  }

  body .tremor-BarChart .recharts-bar:first-child, html .tremor-BarChart .recharts-bar:first-child, #__next .tremor-BarChart .recharts-bar:first-child {
    fill: var(--category-color-1, #0ea5e9) !important;
  }

  body .tremor-BarChart .recharts-bar:nth-child(2), html .tremor-BarChart .recharts-bar:nth-child(2), #__next .tremor-BarChart .recharts-bar:nth-child(2) {
    fill: var(--category-color-2, #ef4444) !important;
  }

  body .tremor-BarChart .recharts-bar:nth-child(3), html .tremor-BarChart .recharts-bar:nth-child(3), #__next .tremor-BarChart .recharts-bar:nth-child(3) {
    fill: var(--category-color-3, #10b981) !important;
  }

  body .tremor-BarChart .recharts-bar:nth-child(4), html .tremor-BarChart .recharts-bar:nth-child(4), #__next .tremor-BarChart .recharts-bar:nth-child(4) {
    fill: var(--category-color-4, #f59e0b) !important;
  }

  body .tremor-BarChart .recharts-bar:nth-child(5), html .tremor-BarChart .recharts-bar:nth-child(5), #__next .tremor-BarChart .recharts-bar:nth-child(5) {
    fill: var(--category-color-5, #8b5cf6) !important;
  }

  body .tremor-BarChart .recharts-bar:nth-child(6), html .tremor-BarChart .recharts-bar:nth-child(6), #__next .tremor-BarChart .recharts-bar:nth-child(6) {
    fill: var(--category-color-6, #ec4899) !important;
  }

  .tremor-BarChart .recharts-bar[fill] {
    fill: inherit !important;
  }

  [data-testid="budget-vs-actual-chart"] .tremor-BarChart .recharts-bar:first-child {
    fill: var(--category-color-1, #0ea5e9) !important;
  }

  [data-testid="budget-vs-actual-chart"] .tremor-BarChart .recharts-bar:nth-child(2) {
    fill: var(--category-color-2, #ef4444) !important;
  }

  [data-testid="budget-vs-actual-chart"] .tremor-BarChart .recharts-bar:nth-child(3) {
    fill: var(--category-color-3, #10b981) !important;
  }

  [data-testid="budget-vs-actual-chart"] .tremor-BarChart .recharts-bar:nth-child(4) {
    fill: var(--category-color-4, #f59e0b) !important;
  }

  [data-testid="budget-vs-actual-chart"] .tremor-BarChart .recharts-bar:nth-child(5) {
    fill: var(--category-color-5, #8b5cf6) !important;
  }

  [data-testid="budget-vs-actual-chart"] .tremor-BarChart .recharts-bar:nth-child(6) {
    fill: var(--category-color-6, #ec4899) !important;
  }

  .tremor-LineChart .recharts-line {
    stroke: #3b82f6 !important;
  }

  .tremor-LineChart .recharts-dot {
    fill: #3b82f6 !important;
  }

  .tremor-AreaChart .recharts-area {
    fill-opacity: .2;
    stroke-width: 2px;
  }

  .tremor-BarChart .recharts-bar {
    fill-opacity: .8;
  }

  .tremor-BarChart .recharts-xAxis .recharts-cartesian-axis-tick {
    transform-origin: center;
    text-anchor: end;
    dominant-baseline: hanging;
    transform: rotate(-45deg);
  }

  .tremor-BarChart .recharts-xAxis .recharts-cartesian-axis-tick text {
    fill: currentColor;
    font-size: 12px;
  }

  .tremor-BarChart .recharts-xAxis {
    height: 80px;
  }

  .tremor-DonutChart .recharts-sector {
    fill-opacity: .8;
  }

  .tremor-LineChart .recharts-line {
    stroke-width: 3px;
  }

  .tremor-LineChart .recharts-yAxis .recharts-cartesian-axis-tick, .tremor-LineChart .recharts-yAxis .recharts-cartesian-axis-tick text, .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick, .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick text {
    font-size: 11px !important;
    line-height: 1 !important;
  }

  .tremor-LineChart .recharts-yAxis .recharts-cartesian-axis-tick {
    transform: translate(-3px);
    margin: 0 !important;
    padding: 0 !important;
  }

  .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick {
    transform: translate(0, 6px);
    opacity: 1 !important;
    display: block !important;
  }

  .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick:nth-child(odd), .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick:nth-child(2n), .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick[style*="display: none"], .tremor-LineChart .recharts-xAxis .recharts-cartesian-axis-tick[style*="opacity: 0"] {
    opacity: 1 !important;
    display: block !important;
  }

  .tremor-LineChart .recharts-yAxis {
    margin: 0 !important;
    padding: 0 !important;
  }

  .tremor-LineChart .recharts-cartesian-grid-horizontal line {
    stroke-dasharray: 2 2;
  }
}

@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .invisible {
    visibility: hidden;
  }

  .visible {
    visibility: visible;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }

  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }

  .-top-6 {
    top: calc(var(--spacing) * -6);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\.5 {
    top: calc(var(--spacing) * 1.5);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-3 {
    top: calc(var(--spacing) * 3);
  }

  .top-3\.5 {
    top: calc(var(--spacing) * 3.5);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-20 {
    top: calc(var(--spacing) * 20);
  }

  .top-\[50\%\] {
    top: 50%;
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-1 {
    right: calc(var(--spacing) * 1);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-3 {
    right: calc(var(--spacing) * 3);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-6 {
    right: calc(var(--spacing) * 6);
  }

  .right-10 {
    right: calc(var(--spacing) * 10);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }

  .bottom-20 {
    bottom: calc(var(--spacing) * 20);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1 {
    left: calc(var(--spacing) * 1);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .left-3 {
    left: calc(var(--spacing) * 3);
  }

  .left-10 {
    left: calc(var(--spacing) * 10);
  }

  .left-\[50\%\] {
    left: 50%;
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-50 {
    z-index: 50;
  }

  .z-\[100\] {
    z-index: 100;
  }

  .col-span-1 {
    grid-column: span 1 / span 1;
  }

  .col-span-3 {
    grid-column: span 3 / span 3;
  }

  .col-span-4 {
    grid-column: span 4 / span 4;
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-3\.5 {
    margin-inline: calc(var(--spacing) * 3.5);
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .-mt-4 {
    margin-top: calc(var(--spacing) * -4);
  }

  .mt-0\.5 {
    margin-top: calc(var(--spacing) * .5);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-2\.5 {
    margin-top: calc(var(--spacing) * 2.5);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }

  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }

  .mt-auto {
    margin-top: auto;
  }

  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }

  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }

  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * .5);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .-ml-1 {
    margin-left: calc(var(--spacing) * -1);
  }

  .-ml-1\.5 {
    margin-left: calc(var(--spacing) * -1.5);
  }

  .ml-0 {
    margin-left: calc(var(--spacing) * 0);
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-auto {
    margin-left: auto;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .table-caption {
    display: table-caption;
  }

  .table-cell {
    display: table-cell;
  }

  .table-row {
    display: table-row;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }

  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-7 {
    height: calc(var(--spacing) * 7);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-14 {
    height: calc(var(--spacing) * 14);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-25 {
    height: calc(var(--spacing) * 25);
  }

  .h-26 {
    height: calc(var(--spacing) * 26);
  }

  .h-28 {
    height: calc(var(--spacing) * 28);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-34 {
    height: calc(var(--spacing) * 34);
  }

  .h-40 {
    height: calc(var(--spacing) * 40);
  }

  .h-45 {
    height: calc(var(--spacing) * 45);
  }

  .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .h-80 {
    height: calc(var(--spacing) * 80);
  }

  .h-\[1\.2rem\] {
    height: 1.2rem;
  }

  .h-\[5px\] {
    height: 5px;
  }

  .h-\[32px\] {
    height: 32px;
  }

  .h-\[80vh\] {
    height: 80vh;
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .h-screen {
    height: 100vh;
  }

  .h-svh {
    height: 100svh;
  }

  .\!max-h-\[60vh\] {
    max-height: 60vh !important;
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {
    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .max-h-0 {
    max-height: calc(var(--spacing) * 0);
  }

  .max-h-32 {
    max-height: calc(var(--spacing) * 32);
  }

  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[28vh\] {
    max-height: 28vh;
  }

  .max-h-\[32vh\] {
    max-height: 32vh;
  }

  .max-h-\[50vh\] {
    max-height: 50vh;
  }

  .max-h-\[90vh\] {
    max-height: 90vh;
  }

  .max-h-\[150px\] {
    max-height: 150px;
  }

  .max-h-\[250px\] {
    max-height: 250px;
  }

  .max-h-\[280px\] {
    max-height: 280px;
  }

  .max-h-\[400px\] {
    max-height: 400px;
  }

  .max-h-\[410px\] {
    max-height: 410px;
  }

  .max-h-\[1000px\] {
    max-height: 1000px;
  }

  .max-h-screen {
    max-height: 100vh;
  }

  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }

  .min-h-\[1\.5rem\] {
    min-height: 1.5rem;
  }

  .min-h-\[80px\] {
    min-height: 80px;
  }

  .min-h-\[200px\] {
    min-height: 200px;
  }

  .min-h-\[250px\] {
    min-height: 250px;
  }

  .min-h-\[300px\] {
    min-height: 300px;
  }

  .min-h-\[400px\] {
    min-height: 400px;
  }

  .min-h-svh {
    min-height: 100svh;
  }

  .\!w-full {
    width: 100% !important;
  }

  .w-\(--sidebar-width\) {
    width: var(--sidebar-width);
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-1\/3 {
    width: 33.3333%;
  }

  .w-1\/4 {
    width: 25%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }

  .w-3\/4 {
    width: 75%;
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-7 {
    width: calc(var(--spacing) * 7);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-9 {
    width: calc(var(--spacing) * 9);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-28 {
    width: calc(var(--spacing) * 28);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-36 {
    width: calc(var(--spacing) * 36);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-44 {
    width: calc(var(--spacing) * 44);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-52 {
    width: calc(var(--spacing) * 52);
  }

  .w-56 {
    width: calc(var(--spacing) * 56);
  }

  .w-60 {
    width: calc(var(--spacing) * 60);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-72 {
    width: calc(var(--spacing) * 72);
  }

  .w-80 {
    width: calc(var(--spacing) * 80);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-\[1\.2rem\] {
    width: 1.2rem;
  }

  .w-\[5px\] {
    width: 5px;
  }

  .w-\[32px\] {
    width: 32px;
  }

  .w-\[150px\] {
    width: 150px;
  }

  .w-auto {
    width: auto;
  }

  .w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .max-w-\(--skeleton-width\) {
    max-width: var(--skeleton-width);
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-5xl {
    max-width: var(--container-5xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[70vw\] {
    max-width: 70vw;
  }

  .max-w-\[170px\] {
    max-width: 170px;
  }

  .max-w-\[175px\] {
    max-width: 175px;
  }

  .max-w-\[610px\] {
    max-width: 610px;
  }

  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-none {
    max-width: none;
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .max-w-xs {
    max-width: var(--container-xs);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-5 {
    min-width: calc(var(--spacing) * 5);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[100px\] {
    min-width: 100px;
  }

  .min-w-\[120px\] {
    min-width: 120px;
  }

  .min-w-\[200px\] {
    min-width: 200px;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .caption-bottom {
    caption-side: bottom;
  }

  .border-collapse {
    border-collapse: collapse;
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {
    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-tooltip-content-transform-origin\) {
    transform-origin: var(--radix-tooltip-content-transform-origin);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-px {
    --tw-translate-x: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-px {
    --tw-translate-x: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[calc\(-50\%_-_2px\)\] {
    --tw-translate-y: calc(-50% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-90 {
    --tw-scale-x: 90%;
    --tw-scale-y: 90%;
    --tw-scale-z: 90%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .transform {
    transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .list-none {
    list-style-type: none;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  .grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .justify-items-center {
    justify-items: center;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-7 {
    gap: calc(var(--spacing) * 7);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  :where(.space-y-0 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-1\.5 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.space-x-1 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.space-x-2 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.space-x-3 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.space-x-4 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.space-x-6 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.space-x-8 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-scroll {
    overflow: scroll;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }

  .rounded-\[2px\] {
    border-radius: 2px;
  }

  .rounded-\[4px\] {
    border-radius: 4px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-sm {
    border-radius: calc(var(--radius)  - 4px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .rounded-t-lg {
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
  }

  .rounded-r-lg {
    border-top-right-radius: var(--radius);
    border-bottom-right-radius: var(--radius);
  }

  .border, .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }

  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .border-amber-200 {
    border-color: var(--color-amber-200);
  }

  .border-blue-200 {
    border-color: var(--color-blue-200);
  }

  .border-border {
    border-color: var(--border);
  }

  .border-current {
    border-color: currentColor;
  }

  .border-cyan-200 {
    border-color: var(--color-cyan-200);
  }

  .border-destructive {
    border-color: var(--destructive);
  }

  .border-emerald-200 {
    border-color: var(--color-emerald-200);
  }

  .border-emerald-300\/30 {
    border-color: rgba(94, 233, 181, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-emerald-300\/30 {
      border-color: color-mix(in oklab, var(--color-emerald-300) 30%, transparent);
    }
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-green-200 {
    border-color: var(--color-green-200);
  }

  .border-input {
    border-color: var(--input);
  }

  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }

  .border-orange-200 {
    border-color: var(--color-orange-200);
  }

  .border-red-200 {
    border-color: var(--color-red-200);
  }

  .border-red-300\/30 {
    border-color: rgba(255, 163, 163, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-300\/30 {
      border-color: color-mix(in oklab, var(--color-red-300) 30%, transparent);
    }
  }

  .border-red-500 {
    border-color: var(--color-red-500);
  }

  .border-rose-200 {
    border-color: var(--color-rose-200);
  }

  .border-sidebar-border {
    border-color: var(--sidebar-border);
  }

  .border-sky-200 {
    border-color: var(--color-sky-200);
  }

  .border-sky-300 {
    border-color: var(--color-sky-300);
  }

  .border-sky-300\/30 {
    border-color: rgba(119, 212, 255, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-sky-300\/30 {
      border-color: color-mix(in oklab, var(--color-sky-300) 30%, transparent);
    }
  }

  .border-sky-400 {
    border-color: var(--color-sky-400);
  }

  .border-sky-500 {
    border-color: var(--color-sky-500);
  }

  .border-sky-600 {
    border-color: var(--color-sky-600);
  }

  .border-slate-200 {
    border-color: var(--color-slate-200);
  }

  .border-transparent {
    border-color: rgba(0, 0, 0, 0);
  }

  .border-white\/20 {
    border-color: rgba(255, 255, 255, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .border-yellow-200 {
    border-color: var(--color-yellow-200);
  }

  .border-t-transparent {
    border-top-color: rgba(0, 0, 0, 0);
  }

  .border-l-amber-500 {
    border-left-color: var(--color-amber-500);
  }

  .border-l-emerald-700 {
    border-left-color: var(--color-emerald-700);
  }

  .border-l-green-500 {
    border-left-color: var(--color-green-500);
  }

  .border-l-red-500 {
    border-left-color: var(--color-red-500);
  }

  .border-l-red-700 {
    border-left-color: var(--color-red-700);
  }

  .border-l-sky-500 {
    border-left-color: var(--color-sky-500);
  }

  .border-l-sky-700 {
    border-left-color: var(--color-sky-700);
  }

  .\!bg-white {
    background-color: var(--color-white) !important;
  }

  .bg-accent {
    background-color: var(--accent);
  }

  .bg-amber-50 {
    background-color: var(--color-amber-50);
  }

  .bg-amber-100 {
    background-color: var(--color-amber-100);
  }

  .bg-amber-500 {
    background-color: var(--color-amber-500);
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-background\/80 {
    background-color: var(--background);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/80 {
      background-color: color-mix(in oklab, var(--background) 80%, transparent);
    }
  }

  .bg-background\/95 {
    background-color: var(--background);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-background\/95 {
      background-color: color-mix(in oklab, var(--background) 95%, transparent);
    }
  }

  .bg-black\/50 {
    background-color: rgba(0, 0, 0, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-cyan-100 {
    background-color: var(--color-cyan-100);
  }

  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-emerald-50 {
    background-color: var(--color-emerald-50);
  }

  .bg-emerald-100 {
    background-color: var(--color-emerald-100);
  }

  .bg-emerald-500 {
    background-color: var(--color-emerald-500);
  }

  .bg-emerald-700 {
    background-color: var(--color-emerald-700);
  }

  .bg-fuchsia-500 {
    background-color: var(--color-fuchsia-500);
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }

  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }

  .bg-green-50 {
    background-color: var(--color-green-50);
  }

  .bg-green-100 {
    background-color: var(--color-green-100);
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-green-600 {
    background-color: var(--color-green-600);
  }

  .bg-indigo-100 {
    background-color: var(--color-indigo-100);
  }

  .bg-indigo-500 {
    background-color: var(--color-indigo-500);
  }

  .bg-lime-500 {
    background-color: var(--color-lime-500);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-muted\/50 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/50 {
      background-color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }

  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }

  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }

  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }

  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }

  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }

  .bg-orange-600 {
    background-color: var(--color-orange-600);
  }

  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-primary\/20 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/20 {
      background-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .bg-purple-100 {
    background-color: var(--color-purple-100);
  }

  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }

  .bg-red-50 {
    background-color: var(--color-red-50);
  }

  .bg-red-100 {
    background-color: var(--color-red-100);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-red-600 {
    background-color: var(--color-red-600);
  }

  .bg-red-600\/20 {
    background-color: rgba(228, 0, 20, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-600\/20 {
      background-color: color-mix(in oklab, var(--color-red-600) 20%, transparent);
    }
  }

  .bg-red-700 {
    background-color: var(--color-red-700);
  }

  .bg-rose-50 {
    background-color: var(--color-rose-50);
  }

  .bg-rose-100 {
    background-color: var(--color-rose-100);
  }

  .bg-rose-500 {
    background-color: var(--color-rose-500);
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-sidebar {
    background-color: var(--sidebar);
  }

  .bg-sidebar-border {
    background-color: var(--sidebar-border);
  }

  .bg-sky-50 {
    background-color: var(--color-sky-50);
  }

  .bg-sky-100 {
    background-color: var(--color-sky-100);
  }

  .bg-sky-200 {
    background-color: var(--color-sky-200);
  }

  .bg-sky-200\/40 {
    background-color: rgba(184, 230, 254, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sky-200\/40 {
      background-color: color-mix(in oklab, var(--color-sky-200) 40%, transparent);
    }
  }

  .bg-sky-300 {
    background-color: var(--color-sky-300);
  }

  .bg-sky-300\/50 {
    background-color: rgba(119, 212, 255, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sky-300\/50 {
      background-color: color-mix(in oklab, var(--color-sky-300) 50%, transparent);
    }
  }

  .bg-sky-300\/60 {
    background-color: rgba(119, 212, 255, .6);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sky-300\/60 {
      background-color: color-mix(in oklab, var(--color-sky-300) 60%, transparent);
    }
  }

  .bg-sky-400 {
    background-color: var(--color-sky-400);
  }

  .bg-sky-400\/70 {
    background-color: rgba(0, 188, 254, .7);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sky-400\/70 {
      background-color: color-mix(in oklab, var(--color-sky-400) 70%, transparent);
    }
  }

  .bg-sky-500 {
    background-color: var(--color-sky-500);
  }

  .bg-sky-500\/60 {
    background-color: rgba(0, 165, 239, .6);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-sky-500\/60 {
      background-color: color-mix(in oklab, var(--color-sky-500) 60%, transparent);
    }
  }

  .bg-sky-600 {
    background-color: var(--color-sky-600);
  }

  .bg-sky-700 {
    background-color: var(--color-sky-700);
  }

  .bg-sky-800 {
    background-color: var(--color-sky-800);
  }

  .bg-sky-900 {
    background-color: var(--color-sky-900);
  }

  .bg-sky-950 {
    background-color: var(--color-sky-950);
  }

  .bg-slate-50 {
    background-color: var(--color-slate-50);
  }

  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }

  .bg-slate-500\/10 {
    background-color: rgba(98, 116, 142, .1);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-slate-500\/10 {
      background-color: color-mix(in oklab, var(--color-slate-500) 10%, transparent);
    }
  }

  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }

  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }

  .bg-transparent {
    background-color: rgba(0, 0, 0, 0);
  }

  .bg-violet-500 {
    background-color: var(--color-violet-500);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-white\/85 {
    background-color: rgba(255, 255, 255, .85);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/85 {
      background-color: color-mix(in oklab, var(--color-white) 85%, transparent);
    }
  }

  .bg-white\/95 {
    background-color: rgba(255, 255, 255, .95);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/95 {
      background-color: color-mix(in oklab, var(--color-white) 95%, transparent);
    }
  }

  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }

  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-yellow-600 {
    background-color: var(--color-yellow-600);
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-tl {
    --tw-gradient-position: to top left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-tr {
    --tw-gradient-position: to top right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-amber-50 {
    --tw-gradient-from: var(--color-amber-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-amber-400 {
    --tw-gradient-from: var(--color-amber-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-400\/30 {
    --tw-gradient-from: rgba(84, 162, 255, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-400\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-blue-400) 30%, transparent);
    }
  }

  .from-blue-400\/30 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-50 {
    --tw-gradient-from: var(--color-cyan-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-50 {
    --tw-gradient-from: var(--color-emerald-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-50\/90 {
    --tw-gradient-from: rgba(236, 253, 245, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-emerald-50\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-50) 90%, transparent);
    }
  }

  .from-emerald-50\/90 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-500 {
    --tw-gradient-from: var(--color-emerald-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-50 {
    --tw-gradient-from: var(--color-gray-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-100 {
    --tw-gradient-from: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-gray-900 {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-50 {
    --tw-gradient-from: var(--color-green-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-50 {
    --tw-gradient-from: var(--color-red-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-50\/90 {
    --tw-gradient-from: rgba(254, 242, 242, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-red-50\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-50) 90%, transparent);
    }
  }

  .from-red-50\/90 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-500 {
    --tw-gradient-from: var(--color-red-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-50 {
    --tw-gradient-from: var(--color-sky-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-50\/90 {
    --tw-gradient-from: rgba(240, 249, 255, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-sky-50\/90 {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-50) 90%, transparent);
    }
  }

  .from-sky-50\/90 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-100 {
    --tw-gradient-from: var(--color-sky-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-400\/30 {
    --tw-gradient-from: rgba(0, 188, 254, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-sky-400\/30 {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-400) 30%, transparent);
    }
  }

  .from-sky-400\/30 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-500 {
    --tw-gradient-from: var(--color-sky-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-sky-900 {
    --tw-gradient-from: var(--color-sky-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-slate-700 {
    --tw-gradient-from: var(--color-slate-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-sky-500 {
    --tw-gradient-via: var(--color-sky-500);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-sky-600 {
    --tw-gradient-via: var(--color-sky-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-sky-800 {
    --tw-gradient-via: var(--color-sky-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-blue-50 {
    --tw-gradient-to: var(--color-blue-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-500\/30 {
    --tw-gradient-to: rgba(48, 128, 255, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-500\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
    }
  }

  .to-blue-500\/30 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-600 {
    --tw-gradient-to: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-900 {
    --tw-gradient-to: var(--color-blue-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-50 {
    --tw-gradient-to: var(--color-cyan-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-50\/90 {
    --tw-gradient-to: rgba(236, 254, 255, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-50\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-50) 90%, transparent);
    }
  }

  .to-cyan-50\/90 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-emerald-50 {
    --tw-gradient-to: var(--color-emerald-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-100 {
    --tw-gradient-to: var(--color-gray-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-200 {
    --tw-gradient-to: var(--color-gray-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-800 {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-900 {
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-50 {
    --tw-gradient-to: var(--color-green-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-50 {
    --tw-gradient-to: var(--color-indigo-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-500\/30 {
    --tw-gradient-to: rgba(98, 95, 255, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-indigo-500\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-500) 30%, transparent);
    }
  }

  .to-indigo-500\/30 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-50 {
    --tw-gradient-to: var(--color-orange-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-500 {
    --tw-gradient-to: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-pink-600 {
    --tw-gradient-to: var(--color-pink-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-rose-50 {
    --tw-gradient-to: var(--color-rose-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-rose-50\/90 {
    --tw-gradient-to: rgba(255, 241, 242, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-rose-50\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-50) 90%, transparent);
    }
  }

  .to-rose-50\/90 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-sky-100 {
    --tw-gradient-to: var(--color-sky-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-sky-200 {
    --tw-gradient-to: var(--color-sky-200);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-sky-600 {
    --tw-gradient-to: var(--color-sky-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-50\/90 {
    --tw-gradient-to: rgba(240, 253, 250, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-teal-50\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--color-teal-50) 90%, transparent);
    }
  }

  .to-teal-50\/90 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-600 {
    --tw-gradient-to: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-50 {
    --tw-gradient-to: var(--color-yellow-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .fill-amber-500 {
    fill: var(--color-amber-500);
  }

  .fill-blue-500 {
    fill: var(--color-blue-500);
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-cyan-500 {
    fill: var(--color-cyan-500);
  }

  .fill-emerald-500 {
    fill: var(--color-emerald-500);
  }

  .fill-fuchsia-500 {
    fill: var(--color-fuchsia-500);
  }

  .fill-gray-500 {
    fill: var(--color-gray-500);
  }

  .fill-green-500 {
    fill: var(--color-green-500);
  }

  .fill-indigo-500 {
    fill: var(--color-indigo-500);
  }

  .fill-lime-500 {
    fill: var(--color-lime-500);
  }

  .fill-orange-500 {
    fill: var(--color-orange-500);
  }

  .fill-pink-500 {
    fill: var(--color-pink-500);
  }

  .fill-primary {
    fill: var(--primary);
  }

  .fill-purple-500 {
    fill: var(--color-purple-500);
  }

  .fill-red-500 {
    fill: var(--color-red-500);
  }

  .fill-rose-500 {
    fill: var(--color-rose-500);
  }

  .fill-sky-50 {
    fill: var(--color-sky-50);
  }

  .fill-sky-100 {
    fill: var(--color-sky-100);
  }

  .fill-sky-200 {
    fill: var(--color-sky-200);
  }

  .fill-sky-300 {
    fill: var(--color-sky-300);
  }

  .fill-sky-400 {
    fill: var(--color-sky-400);
  }

  .fill-sky-500 {
    fill: var(--color-sky-500);
  }

  .fill-sky-600 {
    fill: var(--color-sky-600);
  }

  .fill-sky-700 {
    fill: var(--color-sky-700);
  }

  .fill-sky-800 {
    fill: var(--color-sky-800);
  }

  .fill-sky-900 {
    fill: var(--color-sky-900);
  }

  .fill-sky-950 {
    fill: var(--color-sky-950);
  }

  .fill-teal-500 {
    fill: var(--color-teal-500);
  }

  .fill-violet-500 {
    fill: var(--color-violet-500);
  }

  .fill-yellow-500 {
    fill: var(--color-yellow-500);
  }

  .stroke-amber-500 {
    stroke: var(--color-amber-500);
  }

  .stroke-blue-500 {
    stroke: var(--color-blue-500);
  }

  .stroke-cyan-500 {
    stroke: var(--color-cyan-500);
  }

  .stroke-emerald-500 {
    stroke: var(--color-emerald-500);
  }

  .stroke-fuchsia-500 {
    stroke: var(--color-fuchsia-500);
  }

  .stroke-gray-500 {
    stroke: var(--color-gray-500);
  }

  .stroke-green-500 {
    stroke: var(--color-green-500);
  }

  .stroke-indigo-500 {
    stroke: var(--color-indigo-500);
  }

  .stroke-lime-500 {
    stroke: var(--color-lime-500);
  }

  .stroke-orange-500 {
    stroke: var(--color-orange-500);
  }

  .stroke-pink-500 {
    stroke: var(--color-pink-500);
  }

  .stroke-purple-500 {
    stroke: var(--color-purple-500);
  }

  .stroke-red-500 {
    stroke: var(--color-red-500);
  }

  .stroke-rose-500 {
    stroke: var(--color-rose-500);
  }

  .stroke-sky-50 {
    stroke: var(--color-sky-50);
  }

  .stroke-sky-100 {
    stroke: var(--color-sky-100);
  }

  .stroke-sky-200 {
    stroke: var(--color-sky-200);
  }

  .stroke-sky-300 {
    stroke: var(--color-sky-300);
  }

  .stroke-sky-400 {
    stroke: var(--color-sky-400);
  }

  .stroke-sky-500 {
    stroke: var(--color-sky-500);
  }

  .stroke-sky-600 {
    stroke: var(--color-sky-600);
  }

  .stroke-sky-700 {
    stroke: var(--color-sky-700);
  }

  .stroke-sky-800 {
    stroke: var(--color-sky-800);
  }

  .stroke-sky-900 {
    stroke: var(--color-sky-900);
  }

  .stroke-sky-950 {
    stroke: var(--color-sky-950);
  }

  .stroke-teal-500 {
    stroke: var(--color-teal-500);
  }

  .stroke-violet-500 {
    stroke: var(--color-violet-500);
  }

  .stroke-yellow-500 {
    stroke: var(--color-yellow-500);
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-0\.5 {
    padding: calc(var(--spacing) * .5);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .\!pt-5 {
    padding-top: calc(var(--spacing) * 5) !important;
  }

  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }

  .pt-0\.5 {
    padding-top: calc(var(--spacing) * .5);
  }

  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }

  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }

  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }

  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .text-right {
    text-align: right;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-mono {
    font-family: var(--font-geist-mono);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[0\.8rem\] {
    font-size: .8rem;
  }

  .leading-loose {
    --tw-leading: var(--leading-loose);
    line-height: var(--leading-loose);
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }

  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .text-balance {
    text-wrap: balance;
  }

  .break-words {
    overflow-wrap: break-word;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-accent-foreground {
    color: var(--accent-foreground);
  }

  .text-amber-500 {
    color: var(--color-amber-500);
  }

  .text-amber-600 {
    color: var(--color-amber-600);
  }

  .text-amber-700 {
    color: var(--color-amber-700);
  }

  .text-amber-800 {
    color: var(--color-amber-800);
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-blue-600 {
    color: var(--color-blue-600);
  }

  .text-blue-800 {
    color: var(--color-blue-800);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-current {
    color: currentColor;
  }

  .text-cyan-500 {
    color: var(--color-cyan-500);
  }

  .text-cyan-600 {
    color: var(--color-cyan-600);
  }

  .text-cyan-800 {
    color: var(--color-cyan-800);
  }

  .text-cyan-900 {
    color: var(--color-cyan-900);
  }

  .text-emerald-500 {
    color: var(--color-emerald-500);
  }

  .text-emerald-600 {
    color: var(--color-emerald-600);
  }

  .text-emerald-700 {
    color: var(--color-emerald-700);
  }

  .text-emerald-800 {
    color: var(--color-emerald-800);
  }

  .text-emerald-900 {
    color: var(--color-emerald-900);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-foreground\/50 {
    color: var(--foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-foreground\/50 {
      color: color-mix(in oklab, var(--foreground) 50%, transparent);
    }
  }

  .text-fuchsia-500 {
    color: var(--color-fuchsia-500);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-green-700 {
    color: var(--color-green-700);
  }

  .text-green-800 {
    color: var(--color-green-800);
  }

  .text-indigo-500 {
    color: var(--color-indigo-500);
  }

  .text-indigo-600 {
    color: var(--color-indigo-600);
  }

  .text-indigo-800 {
    color: var(--color-indigo-800);
  }

  .text-lime-500 {
    color: var(--color-lime-500);
  }

  .text-lime-600 {
    color: var(--color-lime-600);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-neutral-500 {
    color: var(--color-neutral-500);
  }

  .text-neutral-600 {
    color: var(--color-neutral-600);
  }

  .text-neutral-700 {
    color: var(--color-neutral-700);
  }

  .text-neutral-900 {
    color: var(--color-neutral-900);
  }

  .text-orange-500 {
    color: var(--color-orange-500);
  }

  .text-orange-600 {
    color: var(--color-orange-600);
  }

  .text-orange-800 {
    color: var(--color-orange-800);
  }

  .text-pink-500 {
    color: var(--color-pink-500);
  }

  .text-pink-600 {
    color: var(--color-pink-600);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-purple-500 {
    color: var(--color-purple-500);
  }

  .text-purple-600 {
    color: var(--color-purple-600);
  }

  .text-purple-800 {
    color: var(--color-purple-800);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-red-600 {
    color: var(--color-red-600);
  }

  .text-red-700 {
    color: var(--color-red-700);
  }

  .text-red-800 {
    color: var(--color-red-800);
  }

  .text-rose-500 {
    color: var(--color-rose-500);
  }

  .text-rose-600 {
    color: var(--color-rose-600);
  }

  .text-rose-700 {
    color: var(--color-rose-700);
  }

  .text-rose-800 {
    color: var(--color-rose-800);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-sidebar-foreground {
    color: var(--sidebar-foreground);
  }

  .text-sidebar-foreground\/70 {
    color: var(--sidebar-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-sidebar-foreground\/70 {
      color: color-mix(in oklab, var(--sidebar-foreground) 70%, transparent);
    }
  }

  .text-sky-50 {
    color: var(--color-sky-50);
  }

  .text-sky-100 {
    color: var(--color-sky-100);
  }

  .text-sky-200 {
    color: var(--color-sky-200);
  }

  .text-sky-300 {
    color: var(--color-sky-300);
  }

  .text-sky-400 {
    color: var(--color-sky-400);
  }

  .text-sky-500 {
    color: var(--color-sky-500);
  }

  .text-sky-600 {
    color: var(--color-sky-600);
  }

  .text-sky-700 {
    color: var(--color-sky-700);
  }

  .text-sky-800 {
    color: var(--color-sky-800);
  }

  .text-sky-900 {
    color: var(--color-sky-900);
  }

  .text-sky-950 {
    color: var(--color-sky-950);
  }

  .text-slate-400 {
    color: var(--color-slate-400);
  }

  .text-slate-600 {
    color: var(--color-slate-600);
  }

  .text-slate-700 {
    color: var(--color-slate-700);
  }

  .text-slate-800 {
    color: var(--color-slate-800);
  }

  .text-teal-500 {
    color: var(--color-teal-500);
  }

  .text-teal-600 {
    color: var(--color-teal-600);
  }

  .text-violet-500 {
    color: var(--color-violet-500);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-white\/70 {
    color: rgba(255, 255, 255, .7);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/70 {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }

  .text-yellow-500 {
    color: var(--color-yellow-500);
  }

  .text-yellow-600 {
    color: var(--color-yellow-600);
  }

  .text-yellow-700 {
    color: var(--color-yellow-700);
  }

  .text-yellow-800 {
    color: var(--color-yellow-800);
  }

  .capitalize {
    text-transform: capitalize;
  }

  .uppercase {
    text-transform: uppercase;
  }

  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-70 {
    opacity: .7;
  }

  .opacity-80 {
    opacity: .8;
  }

  .opacity-90 {
    opacity: .9;
  }

  .opacity-100 {
    opacity: 1;
  }

  .\!shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgba(0, 0, 0, .25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\] {
    --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-border)));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-\[0_8px_32px_0_rgba\(31\,38\,135\,0\.07\)\] {
    --tw-shadow: 0 8px 32px 0 var(--tw-shadow-color, rgba(31, 38, 135, .07));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-none {
    --tw-shadow: 0 0 rgba(0, 0, 0, 0);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 8px 10px -6px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgba(0, 0, 0, .05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-red-200 {
    --tw-ring-color: var(--color-red-200);
  }

  .ring-sidebar-ring {
    --tw-ring-color: var(--sidebar-ring);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .outline-0 {
    outline-style: var(--tw-outline-style);
    outline-width: 0;
  }

  .outline-offset-2 {
    outline-offset: 2px;
  }

  .outline-blue-500 {
    outline-color: var(--color-blue-500);
  }

  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[left\,right\,width\] {
    transition-property: left, right, width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[margin\,opacity\] {
    transition-property: margin, opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[width\,height\,padding\] {
    transition-property: width, height, padding;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[width\] {
    transition-property: width;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-none {
    transition-property: none;
  }

  .delay-300 {
    transition-delay: .3s;
  }

  .delay-600 {
    transition-delay: .6s;
  }

  .delay-900 {
    transition-delay: .9s;
  }

  .delay-1200 {
    transition-delay: 1.2s;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }

  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
  }

  .group-focus-within\/menu-item\:opacity-100:is(:where(.group\/menu-item):focus-within *) {
    opacity: 1;
  }

  @media (hover: hover) {
    .group-hover\:bg-sky-50:is(:where(.group):hover *) {
      background-color: var(--color-sky-50);
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-sky-200:is(:where(.group):hover *) {
      background-color: var(--color-sky-200);
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-slate-50:is(:where(.group):hover *) {
      background-color: var(--color-slate-50);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-sky-600:is(:where(.group):hover *) {
      color: var(--color-sky-600);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .group-hover\:shadow-xl:is(:where(.group):hover *) {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 8px 10px -6px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .group-hover\/menu-item\:opacity-100:is(:where(.group\/menu-item):hover *) {
      opacity: 1;
    }
  }

  .group-has-data-\[sidebar\=menu-action\]\/menu-item\:pr-8:is(:where(.group\/menu-item):has([data-sidebar="menu-action"]) *) {
    padding-right: calc(var(--spacing) * 8);
  }

  .group-data-\[collapsible\=icon\]\:-mt-8:is(:where(.group)[data-collapsible="icon"] *) {
    margin-top: calc(var(--spacing) * -8);
  }

  .group-data-\[collapsible\=icon\]\:hidden:is(:where(.group)[data-collapsible="icon"] *) {
    display: none;
  }

  .group-data-\[collapsible\=icon\]\:size-8\!:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--spacing) * 8) !important;
    height: calc(var(--spacing) * 8) !important;
  }

  .group-data-\[collapsible\=icon\]\:w-\(--sidebar-width-icon\):is(:where(.group)[data-collapsible="icon"] *) {
    width: var(--sidebar-width-icon);
  }

  .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)\+\(--spacing\(4\)\)\)\]:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--sidebar-width-icon)  + (calc(var(--spacing) * 4)));
  }

  .group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)\+\(--spacing\(4\)\)\+2px\)\]:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--sidebar-width-icon)  + (calc(var(--spacing) * 4))  + 2px);
  }

  .group-data-\[collapsible\=icon\]\:overflow-hidden:is(:where(.group)[data-collapsible="icon"] *) {
    overflow: hidden;
  }

  .group-data-\[collapsible\=icon\]\:p-0\!:is(:where(.group)[data-collapsible="icon"] *) {
    padding: calc(var(--spacing) * 0) !important;
  }

  .group-data-\[collapsible\=icon\]\:p-2\!:is(:where(.group)[data-collapsible="icon"] *) {
    padding: calc(var(--spacing) * 2) !important;
  }

  .group-data-\[collapsible\=icon\]\:opacity-0:is(:where(.group)[data-collapsible="icon"] *) {
    opacity: 0;
  }

  .group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\]:is(:where(.group)[data-collapsible="offcanvas"] *) {
    right: calc(var(--sidebar-width) * -1);
  }

  .group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\]:is(:where(.group)[data-collapsible="offcanvas"] *) {
    left: calc(var(--sidebar-width) * -1);
  }

  .group-data-\[collapsible\=offcanvas\]\:w-0:is(:where(.group)[data-collapsible="offcanvas"] *) {
    width: calc(var(--spacing) * 0);
  }

  .group-data-\[collapsible\=offcanvas\]\:translate-x-0:is(:where(.group)[data-collapsible="offcanvas"] *) {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }

  .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
    opacity: .5;
  }

  .group-data-\[side\=left\]\:-right-4:is(:where(.group)[data-side="left"] *) {
    right: calc(var(--spacing) * -4);
  }

  .group-data-\[side\=left\]\:border-r:is(:where(.group)[data-side="left"] *) {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .group-data-\[side\=right\]\:left-0:is(:where(.group)[data-side="right"] *) {
    left: calc(var(--spacing) * 0);
  }

  .group-data-\[side\=right\]\:rotate-180:is(:where(.group)[data-side="right"] *) {
    rotate: 180deg;
  }

  .group-data-\[side\=right\]\:border-l:is(:where(.group)[data-side="right"] *) {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .group-data-\[state\=open\]\/collapsible\:rotate-90:is(:where(.group\/collapsible)[data-state="open"] *) {
    rotate: 90deg;
  }

  .group-data-\[variant\=floating\]\:rounded-lg:is(:where(.group)[data-variant="floating"] *) {
    border-radius: var(--radius);
  }

  .group-data-\[variant\=floating\]\:border:is(:where(.group)[data-variant="floating"] *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .group-data-\[variant\=floating\]\:border-sidebar-border:is(:where(.group)[data-variant="floating"] *) {
    border-color: var(--sidebar-border);
  }

  .group-data-\[variant\=floating\]\:shadow-sm:is(:where(.group)[data-variant="floating"] *) {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .group-\[\.destructive\]\:border-muted\/40:is(:where(.group).destructive *) {
    border-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .group-\[\.destructive\]\:border-muted\/40:is(:where(.group).destructive *) {
      border-color: color-mix(in oklab, var(--muted) 40%, transparent);
    }
  }

  .group-\[\.destructive\]\:text-red-300:is(:where(.group).destructive *) {
    color: var(--color-red-300);
  }

  @media (hover: hover) {
    .peer-hover\/menu-button\:text-sidebar-accent-foreground:is(:where(.peer\/menu-button):hover ~ *) {
      color: var(--sidebar-accent-foreground);
    }
  }

  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }

  .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
    opacity: .5;
  }

  .peer-data-\[active\=true\]\/menu-button\:text-sidebar-accent-foreground:is(:where(.peer\/menu-button)[data-active="true"] ~ *) {
    color: var(--sidebar-accent-foreground);
  }

  .peer-data-\[size\=default\]\/menu-button\:top-1\.5:is(:where(.peer\/menu-button)[data-size="default"] ~ *) {
    top: calc(var(--spacing) * 1.5);
  }

  .peer-data-\[size\=lg\]\/menu-button\:top-2\.5:is(:where(.peer\/menu-button)[data-size="lg"] ~ *) {
    top: calc(var(--spacing) * 2.5);
  }

  .peer-data-\[size\=sm\]\/menu-button\:top-1:is(:where(.peer\/menu-button)[data-size="sm"] ~ *) {
    top: calc(var(--spacing) * 1);
  }

  .selection\:bg-primary ::selection {
    background-color: var(--primary);
  }

  .selection\:bg-primary::selection {
    background-color: var(--primary);
  }

  .selection\:text-primary-foreground ::selection {
    color: var(--primary-foreground);
  }

  .selection\:text-primary-foreground::selection {
    color: var(--primary-foreground);
  }

  .file\:inline-flex::-webkit-file-upload-button {
    display: inline-flex;
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::-webkit-file-upload-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:border-0::-webkit-file-upload-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::-webkit-file-upload-button {
    background-color: rgba(0, 0, 0, 0);
  }

  .file\:bg-transparent::file-selector-button {
    background-color: rgba(0, 0, 0, 0);
  }

  .file\:text-sm::-webkit-file-upload-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::-webkit-file-upload-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::-webkit-file-upload-button {
    color: var(--foreground);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  .after\:absolute:after {
    content: var(--tw-content);
    position: absolute;
  }

  .after\:-inset-2:after {
    content: var(--tw-content);
    inset: calc(var(--spacing) * -2);
  }

  .after\:inset-y-0:after {
    content: var(--tw-content);
    inset-block: calc(var(--spacing) * 0);
  }

  .after\:left-1\/2:after {
    content: var(--tw-content);
    left: 50%;
  }

  .after\:w-\[2px\]:after {
    content: var(--tw-content);
    width: 2px;
  }

  .group-data-\[collapsible\=offcanvas\]\:after\:left-full:is(:where(.group)[data-collapsible="offcanvas"] *):after {
    content: var(--tw-content);
    left: 100%;
  }

  .last\:border-b-0:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0;
  }

  .focus-within\:relative:focus-within {
    position: relative;
  }

  .focus-within\:z-20:focus-within {
    z-index: 20;
  }

  @media (hover: hover) {
    .hover\:-translate-y-1:hover {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-103:hover {
      --tw-scale-x: 103%;
      --tw-scale-y: 103%;
      --tw-scale-z: 103%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:cursor-pointer:hover {
      cursor: pointer;
    }
  }

  @media (hover: hover) {
    .hover\:border-sky-300:hover {
      border-color: var(--color-sky-300);
    }
  }

  @media (hover: hover) {
    .hover\:border-sky-600:hover {
      border-color: var(--color-sky-600);
    }
  }

  @media (hover: hover) {
    .hover\:border-sky-700:hover {
      border-color: var(--color-sky-700);
    }
  }

  @media (hover: hover) {
    .hover\:\!bg-red-500\/50:hover {
      background-color: rgba(251, 44, 54, .5) !important;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:\!bg-red-500\/50:hover {
        background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent) !important;
      }
    }
  }

  @media (hover: hover) {
    .hover\:\!bg-white:hover {
      background-color: var(--color-white) !important;
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent\/50:hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-accent\/50:hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-100:hover {
      background-color: var(--color-blue-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-200:hover {
      background-color: var(--color-blue-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-700:hover {
      background-color: var(--color-blue-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/80:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/80:hover {
        background-color: color-mix(in oklab, var(--destructive) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-200:hover {
      background-color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-100:hover {
      background-color: var(--color-green-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-200:hover {
      background-color: var(--color-green-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/50:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/50:hover {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-neutral-50:hover {
      background-color: var(--color-neutral-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-neutral-100:hover {
      background-color: var(--color-neutral-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-100:hover {
      background-color: var(--color-orange-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-200:hover {
      background-color: var(--color-orange-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary:hover {
      background-color: var(--primary);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/80:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/80:hover {
        background-color: color-mix(in oklab, var(--primary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-purple-200:hover {
      background-color: var(--color-purple-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-100:hover {
      background-color: var(--color-red-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-700:hover {
      background-color: var(--color-red-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary:hover {
      background-color: var(--secondary);
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-sidebar-accent:hover {
      background-color: var(--sidebar-accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-sky-50:hover {
      background-color: var(--color-sky-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-sky-600:hover {
      background-color: var(--color-sky-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-100:hover {
      background-color: var(--color-slate-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-slate-800:hover {
      background-color: var(--color-slate-800);
    }
  }

  @media (hover: hover) {
    .hover\:from-amber-100:hover {
      --tw-gradient-from: var(--color-amber-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-cyan-100:hover {
      --tw-gradient-from: var(--color-cyan-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-emerald-100:hover {
      --tw-gradient-from: var(--color-emerald-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-emerald-600:hover {
      --tw-gradient-from: var(--color-emerald-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-green-100:hover {
      --tw-gradient-from: var(--color-green-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-red-100:hover {
      --tw-gradient-from: var(--color-red-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-red-600:hover {
      --tw-gradient-from: var(--color-red-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-sky-100:hover {
      --tw-gradient-from: var(--color-sky-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:from-sky-600:hover {
      --tw-gradient-from: var(--color-sky-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:via-sky-600:hover {
      --tw-gradient-via: var(--color-sky-600);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }

  @media (hover: hover) {
    .hover\:to-blue-100:hover {
      --tw-gradient-to: var(--color-blue-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-blue-700:hover {
      --tw-gradient-to: var(--color-blue-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-cyan-100:hover {
      --tw-gradient-to: var(--color-cyan-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-emerald-100:hover {
      --tw-gradient-to: var(--color-emerald-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-green-100:hover {
      --tw-gradient-to: var(--color-green-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-pink-700:hover {
      --tw-gradient-to: var(--color-pink-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-rose-100:hover {
      --tw-gradient-to: var(--color-rose-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-sky-700:hover {
      --tw-gradient-to: var(--color-sky-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-teal-700:hover {
      --tw-gradient-to: var(--color-teal-700);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-yellow-100:hover {
      --tw-gradient-to: var(--color-yellow-100);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:\!text-red-500:hover {
      color: var(--color-red-500) !important;
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-blue-800:hover {
      color: var(--color-blue-800);
    }
  }

  @media (hover: hover) {
    .hover\:text-blue-900:hover {
      color: var(--color-blue-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-foreground:hover {
      color: var(--foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-900:hover {
      color: var(--color-gray-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-green-800:hover {
      color: var(--color-green-800);
    }
  }

  @media (hover: hover) {
    .hover\:text-green-900:hover {
      color: var(--color-green-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-neutral-600:hover {
      color: var(--color-neutral-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-orange-800:hover {
      color: var(--color-orange-800);
    }
  }

  @media (hover: hover) {
    .hover\:text-orange-900:hover {
      color: var(--color-orange-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-primary-foreground:hover {
      color: var(--primary-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-purple-900:hover {
      color: var(--color-purple-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-red-700:hover {
      color: var(--color-red-700);
    }
  }

  @media (hover: hover) {
    .hover\:text-red-800:hover {
      color: var(--color-red-800);
    }
  }

  @media (hover: hover) {
    .hover\:text-red-900:hover {
      color: var(--color-red-900);
    }
  }

  @media (hover: hover) {
    .hover\:text-red-950:hover {
      color: var(--color-red-950);
    }
  }

  @media (hover: hover) {
    .hover\:text-sidebar-accent-foreground:hover {
      color: var(--sidebar-accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-sky-800:hover {
      color: var(--color-sky-800);
    }
  }

  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:text-yellow-900:hover {
      color: var(--color-yellow-900);
    }
  }

  @media (hover: hover) {
    .hover\:no-underline:hover {
      -webkit-text-decoration-line: none;
      text-decoration-line: none;
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      -webkit-text-decoration-line: underline;
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\]:hover {
      --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-accent)));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 8px 10px -6px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:group-data-\[collapsible\=offcanvas\]\:bg-sidebar:hover:is(:where(.group)[data-collapsible="offcanvas"] *) {
      background-color: var(--sidebar);
    }
  }

  @media (hover: hover) {
    .group-\[\.destructive\]\:hover\:border-destructive\/30:is(:where(.group).destructive *):hover {
      border-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-\[\.destructive\]\:hover\:border-destructive\/30:is(:where(.group).destructive *):hover {
        border-color: color-mix(in oklab, var(--destructive) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-\[\.destructive\]\:hover\:bg-destructive:is(:where(.group).destructive *):hover {
      background-color: var(--destructive);
    }
  }

  @media (hover: hover) {
    .group-\[\.destructive\]\:hover\:text-red-50:is(:where(.group).destructive *):hover {
      color: var(--color-red-50);
    }
  }

  @media (hover: hover) {
    .hover\:after\:bg-sidebar-border:hover:after {
      content: var(--tw-content);
      background-color: var(--sidebar-border);
    }
  }

  .focus\:border-blue-500:focus {
    border-color: var(--color-blue-500);
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:bg-primary:focus {
    background-color: var(--primary);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:text-primary-foreground:focus {
    color: var(--primary-foreground);
  }

  .focus\:opacity-100:focus {
    opacity: 1;
  }

  .focus\:ring-1:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-blue-200:focus {
    --tw-ring-color: var(--color-blue-200);
  }

  .focus\:ring-blue-500:focus {
    --tw-ring-color: var(--color-blue-500);
  }

  .focus\:ring-red-600:focus {
    --tw-ring-color: var(--color-red-600);
  }

  .focus\:ring-ring:focus {
    --tw-ring-color: var(--ring);
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .group-\[\.destructive\]\:focus\:ring-destructive:is(:where(.group).destructive *):focus {
    --tw-ring-color: var(--destructive);
  }

  .group-\[\.destructive\]\:focus\:ring-red-400:is(:where(.group).destructive *):focus {
    --tw-ring-color: var(--color-red-400);
  }

  .group-\[\.destructive\]\:focus\:ring-offset-red-600:is(:where(.group).destructive *):focus {
    --tw-ring-offset-color: var(--color-red-600);
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-2:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring:focus-visible {
    --tw-ring-color: var(--ring);
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus-visible\:outline-2:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }

  .focus-visible\:outline-none:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  .active\:bg-sidebar-accent:active {
    background-color: var(--sidebar-accent);
  }

  .active\:text-sidebar-accent-foreground:active {
    color: var(--sidebar-accent-foreground);
  }

  .enabled\:cursor-pointer:enabled {
    cursor: pointer;
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  :where([data-side="left"]) .in-data-\[side\=left\]\:cursor-w-resize {
    cursor: w-resize;
  }

  :where([data-side="right"]) .in-data-\[side\=right\]\:cursor-e-resize {
    cursor: e-resize;
  }

  .has-data-\[variant\=inset\]\:bg-sidebar:has([data-variant="inset"]) {
    background-color: var(--sidebar);
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-disabled\:pointer-events-none[aria-disabled="true"] {
    pointer-events: none;
  }

  .aria-disabled\:opacity-50[aria-disabled="true"] {
    opacity: .5;
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .aria-selected\:bg-accent[aria-selected="true"] {
    background-color: var(--accent);
  }

  .aria-selected\:bg-accent\/50[aria-selected="true"] {
    background-color: var(--accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-selected\:bg-accent\/50[aria-selected="true"] {
      background-color: color-mix(in oklab, var(--accent) 50%, transparent);
    }
  }

  .aria-selected\:text-accent-foreground[aria-selected="true"] {
    color: var(--accent-foreground);
  }

  .aria-selected\:text-muted-foreground[aria-selected="true"] {
    color: var(--muted-foreground);
  }

  .aria-selected\:opacity-30[aria-selected="true"] {
    opacity: .3;
  }

  .aria-selected\:opacity-100[aria-selected="true"] {
    opacity: 1;
  }

  .data-\[active\=true\]\:bg-sidebar-accent[data-active="true"] {
    background-color: var(--sidebar-accent);
  }

  .data-\[active\=true\]\:font-medium[data-active="true"] {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .data-\[active\=true\]\:text-sidebar-accent-foreground[data-active="true"] {
    color: var(--sidebar-accent-foreground);
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[inset\]\:pl-8[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }

  .data-\[orientation\=horizontal\]\:h-px[data-orientation="horizontal"] {
    height: 1px;
  }

  .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:h-4[data-orientation="vertical"] {
    height: calc(var(--spacing) * 4);
  }

  .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
    height: 100%;
  }

  .data-\[orientation\=vertical\]\:w-px[data-orientation="vertical"] {
    width: 1px;
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=active\]\:bg-background[data-state="active"] {
    background-color: var(--background);
  }

  .data-\[state\=active\]\:text-foreground[data-state="active"] {
    color: var(--foreground);
  }

  .data-\[state\=active\]\:shadow-sm[data-state="active"] {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .data-\[state\=checked\]\:border-primary[data-state="checked"] {
    border-color: var(--primary);
  }

  .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
    background-color: var(--primary);
  }

  .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
    color: var(--primary-foreground);
  }

  .data-\[state\=closed\]\:duration-300[data-state="closed"] {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:bg-secondary[data-state="open"] {
    background-color: var(--secondary);
  }

  .data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
    color: var(--accent-foreground);
  }

  .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
    color: var(--muted-foreground);
  }

  .data-\[state\=open\]\:opacity-100[data-state="open"] {
    opacity: 1;
  }

  .data-\[state\=open\]\:duration-500[data-state="open"] {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  @media (hover: hover) {
    .data-\[state\=open\]\:hover\:bg-sidebar-accent[data-state="open"]:hover {
      background-color: var(--sidebar-accent);
    }
  }

  @media (hover: hover) {
    .data-\[state\=open\]\:hover\:text-sidebar-accent-foreground[data-state="open"]:hover {
      color: var(--sidebar-accent-foreground);
    }
  }

  .data-\[state\=selected\]\:bg-muted[data-state="selected"] {
    background-color: var(--muted);
  }

  .data-\[swipe\=cancel\]\:translate-x-0[data-swipe="cancel"] {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\][data-swipe="end"] {
    --tw-translate-x: var(--radix-toast-swipe-end-x);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\][data-swipe="move"] {
    --tw-translate-x: var(--radix-toast-swipe-move-x);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[swipe\=move\]\:transition-none[data-swipe="move"] {
    transition-property: none;
  }

  .data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
    color: var(--destructive);
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
    color: var(--destructive);
  }

  @supports ((-webkit-backdrop-filter: var(--tw)) or (backdrop-filter: var(--tw))) {
    .supports-\[backdrop-filter\]\:bg-background\/60 {
      background-color: var(--background);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .supports-\[backdrop-filter\]\:bg-background\/60 {
        background-color: color-mix(in oklab, var(--background) 60%, transparent);
      }
    }
  }

  @media (min-width: 40rem) {
    .sm\:top-auto {
      top: auto;
    }
  }

  @media (min-width: 40rem) {
    .sm\:right-0 {
      right: calc(var(--spacing) * 0);
    }
  }

  @media (min-width: 40rem) {
    .sm\:bottom-0 {
      bottom: calc(var(--spacing) * 0);
    }
  }

  @media (min-width: 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (min-width: 40rem) {
    .sm\:flex {
      display: flex;
    }
  }

  @media (min-width: 40rem) {
    .sm\:max-w-\[425px\] {
      max-width: 425px;
    }
  }

  @media (min-width: 40rem) {
    .sm\:max-w-\[600px\] {
      max-width: 600px;
    }
  }

  @media (min-width: 40rem) {
    .sm\:max-w-lg {
      max-width: var(--container-lg);
    }
  }

  @media (min-width: 40rem) {
    .sm\:max-w-sm {
      max-width: var(--container-sm);
    }
  }

  @media (min-width: 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 40rem) {
    .sm\:flex-col {
      flex-direction: column;
    }
  }

  @media (min-width: 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (min-width: 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (min-width: 40rem) {
    :where(.sm\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-top: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-bottom: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (min-width: 40rem) {
    :where(.sm\:space-x-2 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
    }

    :where(.sm\:space-x-2 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
      margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-right: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-2 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
      margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-right: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-2 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
      margin-left: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-right: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-2 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
      margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-left: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-2 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
      margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-left: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-2 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
      margin-right: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-left: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (min-width: 40rem) {
    :where(.sm\:space-x-4 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
    }

    :where(.sm\:space-x-4 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
      margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-right: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-4 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
      margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-right: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-4 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
      margin-left: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-right: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-4 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
      margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-left: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-4 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
      margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-left: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }

    :where(.sm\:space-x-4 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
      margin-right: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-left: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }

  @media (min-width: 40rem) {
    .sm\:rounded-lg {
      border-radius: var(--radius);
    }
  }

  @media (min-width: 40rem) {
    .sm\:pr-2\.5 {
      padding-right: calc(var(--spacing) * 2.5);
    }
  }

  @media (min-width: 40rem) {
    .sm\:pl-2\.5 {
      padding-left: calc(var(--spacing) * 2.5);
    }
  }

  @media (min-width: 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (min-width: 48rem) {
    .md\:mb-4 {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }

  @media (min-width: 48rem) {
    .md\:mb-6 {
      margin-bottom: calc(var(--spacing) * 6);
    }
  }

  @media (min-width: 48rem) {
    .md\:block {
      display: block;
    }
  }

  @media (min-width: 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (min-width: 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (min-width: 48rem) {
    .md\:h-8 {
      height: calc(var(--spacing) * 8);
    }
  }

  @media (min-width: 48rem) {
    .md\:h-10 {
      height: calc(var(--spacing) * 10);
    }
  }

  @media (min-width: 48rem) {
    .md\:h-16 {
      height: calc(var(--spacing) * 16);
    }
  }

  @media (min-width: 48rem) {
    .md\:w-8 {
      width: calc(var(--spacing) * 8);
    }
  }

  @media (min-width: 48rem) {
    .md\:w-16 {
      width: calc(var(--spacing) * 16);
    }
  }

  @media (min-width: 48rem) {
    .md\:max-w-\[420px\] {
      max-width: 420px;
    }
  }

  @media (min-width: 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (min-width: 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (min-width: 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (min-width: 48rem) {
    .md\:gap-2 {
      gap: calc(var(--spacing) * 2);
    }
  }

  @media (min-width: 48rem) {
    .md\:gap-8 {
      gap: calc(var(--spacing) * 8);
    }
  }

  @media (min-width: 48rem) {
    .md\:p-8 {
      padding: calc(var(--spacing) * 8);
    }
  }

  @media (min-width: 48rem) {
    .md\:px-0 {
      padding-inline: calc(var(--spacing) * 0);
    }
  }

  @media (min-width: 48rem) {
    .md\:py-0 {
      padding-block: calc(var(--spacing) * 0);
    }
  }

  @media (min-width: 48rem) {
    .md\:text-left {
      text-align: left;
    }
  }

  @media (min-width: 48rem) {
    .md\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (min-width: 48rem) {
    .md\:text-base {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }

  @media (min-width: 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (min-width: 48rem) {
    .md\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (min-width: 48rem) {
    .md\:opacity-0 {
      opacity: 0;
    }
  }

  @media (min-width: 48rem) {
    .md\:peer-data-\[variant\=inset\]\:m-2:is(:where(.peer)[data-variant="inset"] ~ *) {
      margin: calc(var(--spacing) * 2);
    }
  }

  @media (min-width: 48rem) {
    .md\:peer-data-\[variant\=inset\]\:ml-0:is(:where(.peer)[data-variant="inset"] ~ *) {
      margin-left: calc(var(--spacing) * 0);
    }
  }

  @media (min-width: 48rem) {
    .md\:peer-data-\[variant\=inset\]\:rounded-xl:is(:where(.peer)[data-variant="inset"] ~ *) {
      border-radius: calc(var(--radius)  + 4px);
    }
  }

  @media (min-width: 48rem) {
    .md\:peer-data-\[variant\=inset\]\:shadow-sm:is(:where(.peer)[data-variant="inset"] ~ *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (min-width: 48rem) {
    .md\:peer-data-\[variant\=inset\]\:peer-data-\[state\=collapsed\]\:ml-2:is(:where(.peer)[data-variant="inset"] ~ *):is(:where(.peer)[data-state="collapsed"] ~ *) {
      margin-left: calc(var(--spacing) * 2);
    }
  }

  @media (min-width: 48rem) {
    .md\:after\:hidden:after {
      content: var(--tw-content);
      display: none;
    }
  }

  @media (min-width: 64rem) {
    .lg\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }

  @media (min-width: 64rem) {
    .lg\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (min-width: 64rem) {
    .lg\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }

  @media (min-width: 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (min-width: 80rem) {
    .xl\:max-w-sm {
      max-width: var(--container-sm);
    }
  }

  @media (min-width: 80rem) {
    .xl\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 80rem) {
    .xl\:gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  }

  .dark\:border-amber-800:where(.dark, .dark *) {
    border-color: var(--color-amber-800);
  }

  .dark\:border-amber-900\/40:where(.dark, .dark *) {
    border-color: rgba(123, 51, 6, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-amber-900\/40:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-amber-900) 40%, transparent);
    }
  }

  .dark\:border-blue-800:where(.dark, .dark *) {
    border-color: var(--color-blue-800);
  }

  .dark\:border-cyan-900\/40:where(.dark, .dark *) {
    border-color: rgba(16, 78, 100, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-cyan-900\/40:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-cyan-900) 40%, transparent);
    }
  }

  .dark\:border-emerald-800:where(.dark, .dark *) {
    border-color: var(--color-emerald-800);
  }

  .dark\:border-emerald-900\/40:where(.dark, .dark *) {
    border-color: rgba(0, 78, 59, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-emerald-900\/40:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-emerald-900) 40%, transparent);
    }
  }

  .dark\:border-gray-600:where(.dark, .dark *) {
    border-color: var(--color-gray-600);
  }

  .dark\:border-gray-700:where(.dark, .dark *) {
    border-color: var(--color-gray-700);
  }

  .dark\:border-gray-800:where(.dark, .dark *) {
    border-color: var(--color-gray-800);
  }

  .dark\:border-green-800:where(.dark, .dark *) {
    border-color: var(--color-green-800);
  }

  .dark\:border-green-900\/50:where(.dark, .dark *) {
    border-color: rgba(13, 84, 43, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-green-900\/50:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-green-900) 50%, transparent);
    }
  }

  .dark\:border-input:where(.dark, .dark *) {
    border-color: var(--input);
  }

  .dark\:border-neutral-300:where(.dark, .dark *) {
    border-color: var(--color-neutral-300);
  }

  .dark\:border-neutral-600:where(.dark, .dark *) {
    border-color: var(--color-neutral-600);
  }

  .dark\:border-neutral-700:where(.dark, .dark *) {
    border-color: var(--color-neutral-700);
  }

  .dark\:border-neutral-800:where(.dark, .dark *) {
    border-color: var(--color-neutral-800);
  }

  .dark\:border-neutral-800\/50:where(.dark, .dark *) {
    border-color: rgba(38, 38, 38, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-neutral-800\/50:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-neutral-800) 50%, transparent);
    }
  }

  .dark\:border-orange-800:where(.dark, .dark *) {
    border-color: var(--color-orange-800);
  }

  .dark\:border-red-700:where(.dark, .dark *) {
    border-color: var(--color-red-700);
  }

  .dark\:border-red-800:where(.dark, .dark *) {
    border-color: var(--color-red-800);
  }

  .dark\:border-red-900\/40:where(.dark, .dark *) {
    border-color: rgba(130, 24, 26, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-red-900\/40:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-red-900) 40%, transparent);
    }
  }

  .dark\:border-red-900\/50:where(.dark, .dark *) {
    border-color: rgba(130, 24, 26, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-red-900\/50:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-red-900) 50%, transparent);
    }
  }

  .dark\:border-rose-800:where(.dark, .dark *) {
    border-color: var(--color-rose-800);
  }

  .dark\:border-sky-600:where(.dark, .dark *) {
    border-color: var(--color-sky-600);
  }

  .dark\:border-sky-700:where(.dark, .dark *) {
    border-color: var(--color-sky-700);
  }

  .dark\:border-sky-800:where(.dark, .dark *) {
    border-color: var(--color-sky-800);
  }

  .dark\:border-sky-900\/40:where(.dark, .dark *) {
    border-color: rgba(2, 74, 112, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-sky-900\/40:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-sky-900) 40%, transparent);
    }
  }

  .dark\:border-sky-900\/50:where(.dark, .dark *) {
    border-color: rgba(2, 74, 112, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-sky-900\/50:where(.dark, .dark *) {
      border-color: color-mix(in oklab, var(--color-sky-900) 50%, transparent);
    }
  }

  .dark\:border-slate-800:where(.dark, .dark *) {
    border-color: var(--color-slate-800);
  }

  .dark\:\!bg-neutral-950:where(.dark, .dark *) {
    background-color: var(--color-neutral-950) !important;
  }

  .dark\:bg-amber-900\/40:where(.dark, .dark *) {
    background-color: rgba(123, 51, 6, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-amber-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-amber-900) 40%, transparent);
    }
  }

  .dark\:bg-amber-950\/20:where(.dark, .dark *) {
    background-color: rgba(70, 25, 1, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-amber-950\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-amber-950) 20%, transparent);
    }
  }

  .dark\:bg-blue-900\/20:where(.dark, .dark *) {
    background-color: rgba(28, 57, 142, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-blue-900\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
    }
  }

  .dark\:bg-blue-900\/30:where(.dark, .dark *) {
    background-color: rgba(28, 57, 142, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-blue-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
    }
  }

  .dark\:bg-cyan-900\/40:where(.dark, .dark *) {
    background-color: rgba(16, 78, 100, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-cyan-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-cyan-900) 40%, transparent);
    }
  }

  .dark\:bg-cyan-950\/20:where(.dark, .dark *) {
    background-color: rgba(5, 51, 69, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-cyan-950\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-cyan-950) 20%, transparent);
    }
  }

  .dark\:bg-destructive\/60:where(.dark, .dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-emerald-900\/30:where(.dark, .dark *) {
    background-color: rgba(0, 78, 59, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-emerald-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-emerald-900) 30%, transparent);
    }
  }

  .dark\:bg-emerald-900\/40:where(.dark, .dark *) {
    background-color: rgba(0, 78, 59, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-emerald-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-emerald-900) 40%, transparent);
    }
  }

  .dark\:bg-gray-50:where(.dark, .dark *) {
    background-color: var(--color-gray-50);
  }

  .dark\:bg-gray-700:where(.dark, .dark *) {
    background-color: var(--color-gray-700);
  }

  .dark\:bg-gray-800:where(.dark, .dark *) {
    background-color: var(--color-gray-800);
  }

  .dark\:bg-gray-800\/95:where(.dark, .dark *) {
    background-color: rgba(30, 41, 57, .95);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-800\/95:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-gray-800) 95%, transparent);
    }
  }

  .dark\:bg-gray-900:where(.dark, .dark *) {
    background-color: var(--color-gray-900);
  }

  .dark\:bg-gray-900\/20:where(.dark, .dark *) {
    background-color: rgba(16, 24, 40, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-gray-900) 20%, transparent);
    }
  }

  .dark\:bg-gray-900\/30:where(.dark, .dark *) {
    background-color: rgba(16, 24, 40, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-gray-900) 30%, transparent);
    }
  }

  .dark\:bg-gray-900\/40:where(.dark, .dark *) {
    background-color: rgba(16, 24, 40, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-gray-900) 40%, transparent);
    }
  }

  .dark\:bg-gray-950:where(.dark, .dark *) {
    background-color: var(--color-gray-950);
  }

  .dark\:bg-green-900\/20:where(.dark, .dark *) {
    background-color: rgba(13, 84, 43, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-green-900) 20%, transparent);
    }
  }

  .dark\:bg-green-900\/30:where(.dark, .dark *) {
    background-color: rgba(13, 84, 43, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-green-900) 30%, transparent);
    }
  }

  .dark\:bg-green-950\/20:where(.dark, .dark *) {
    background-color: rgba(3, 46, 21, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-950\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-green-950) 20%, transparent);
    }
  }

  .dark\:bg-indigo-900\/30:where(.dark, .dark *) {
    background-color: rgba(49, 44, 133, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-indigo-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-indigo-900) 30%, transparent);
    }
  }

  .dark\:bg-input\/30:where(.dark, .dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:bg-neutral-100:where(.dark, .dark *) {
    background-color: var(--color-neutral-100);
  }

  .dark\:bg-neutral-100\/40:where(.dark, .dark *) {
    background-color: rgba(245, 245, 245, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-neutral-100\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 40%, transparent);
    }
  }

  .dark\:bg-neutral-700:where(.dark, .dark *) {
    background-color: var(--color-neutral-700);
  }

  .dark\:bg-neutral-800:where(.dark, .dark *) {
    background-color: var(--color-neutral-800);
  }

  .dark\:bg-neutral-900:where(.dark, .dark *) {
    background-color: var(--color-neutral-900);
  }

  .dark\:bg-neutral-900\/40:where(.dark, .dark *) {
    background-color: rgba(23, 23, 23, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-neutral-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-neutral-900) 40%, transparent);
    }
  }

  .dark\:bg-neutral-900\/50:where(.dark, .dark *) {
    background-color: rgba(23, 23, 23, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-neutral-900\/50:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
    }
  }

  .dark\:bg-neutral-950:where(.dark, .dark *) {
    background-color: var(--color-neutral-950);
  }

  .dark\:bg-neutral-950\/70:where(.dark, .dark *) {
    background-color: rgba(10, 10, 10, .7);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-neutral-950\/70:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-neutral-950) 70%, transparent);
    }
  }

  .dark\:bg-orange-900\/30:where(.dark, .dark *) {
    background-color: rgba(126, 42, 12, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-orange-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-orange-900) 30%, transparent);
    }
  }

  .dark\:bg-orange-950\/20:where(.dark, .dark *) {
    background-color: rgba(68, 19, 6, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-orange-950\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-orange-950) 20%, transparent);
    }
  }

  .dark\:bg-pink-950\/20:where(.dark, .dark *) {
    background-color: rgba(81, 4, 36, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-pink-950\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-pink-950) 20%, transparent);
    }
  }

  .dark\:bg-purple-900\/30:where(.dark, .dark *) {
    background-color: rgba(89, 22, 139, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-purple-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-purple-900) 30%, transparent);
    }
  }

  .dark\:bg-red-500:where(.dark, .dark *) {
    background-color: var(--color-red-500);
  }

  .dark\:bg-red-600:where(.dark, .dark *) {
    background-color: var(--color-red-600);
  }

  .dark\:bg-red-900\/20:where(.dark, .dark *) {
    background-color: rgba(130, 24, 26, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-900\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }

  .dark\:bg-red-900\/30:where(.dark, .dark *) {
    background-color: rgba(130, 24, 26, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-red-900) 30%, transparent);
    }
  }

  .dark\:bg-red-900\/40:where(.dark, .dark *) {
    background-color: rgba(130, 24, 26, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-red-900) 40%, transparent);
    }
  }

  .dark\:bg-red-950\/20:where(.dark, .dark *) {
    background-color: rgba(70, 8, 9, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-950\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-red-950) 20%, transparent);
    }
  }

  .dark\:bg-rose-900\/30:where(.dark, .dark *) {
    background-color: rgba(139, 8, 54, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-rose-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-rose-900) 30%, transparent);
    }
  }

  .dark\:bg-sky-900\/20:where(.dark, .dark *) {
    background-color: rgba(2, 74, 112, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-sky-900\/20:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-sky-900) 20%, transparent);
    }
  }

  .dark\:bg-sky-900\/30:where(.dark, .dark *) {
    background-color: rgba(2, 74, 112, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-sky-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-sky-900) 30%, transparent);
    }
  }

  .dark\:bg-sky-900\/40:where(.dark, .dark *) {
    background-color: rgba(2, 74, 112, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-sky-900\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-sky-900) 40%, transparent);
    }
  }

  .dark\:bg-slate-800:where(.dark, .dark *) {
    background-color: var(--color-slate-800);
  }

  .dark\:bg-slate-800\/50:where(.dark, .dark *) {
    background-color: rgba(29, 41, 61, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-slate-800\/50:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-slate-800) 50%, transparent);
    }
  }

  .dark\:bg-slate-900\/30:where(.dark, .dark *) {
    background-color: rgba(15, 23, 43, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-slate-900\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-slate-900) 30%, transparent);
    }
  }

  .dark\:from-amber-950\/30:where(.dark, .dark *) {
    --tw-gradient-from: rgba(70, 25, 1, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-amber-950\/30:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-950) 30%, transparent);
    }
  }

  .dark\:from-amber-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-amber-950\/40:where(.dark, .dark *) {
    --tw-gradient-from: rgba(70, 25, 1, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-amber-950\/40:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-amber-950) 40%, transparent);
    }
  }

  .dark\:from-amber-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-cyan-950\/40:where(.dark, .dark *) {
    --tw-gradient-from: rgba(5, 51, 69, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-cyan-950\/40:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-cyan-950) 40%, transparent);
    }
  }

  .dark\:from-cyan-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-emerald-950\/40:where(.dark, .dark *) {
    --tw-gradient-from: rgba(0, 44, 34, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-emerald-950\/40:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-emerald-950) 40%, transparent);
    }
  }

  .dark\:from-emerald-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-gray-900:where(.dark, .dark *) {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-green-950\/30:where(.dark, .dark *) {
    --tw-gradient-from: rgba(3, 46, 21, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-green-950\/30:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-950) 30%, transparent);
    }
  }

  .dark\:from-green-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-green-950\/50:where(.dark, .dark *) {
    --tw-gradient-from: rgba(3, 46, 21, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-green-950\/50:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-green-950) 50%, transparent);
    }
  }

  .dark\:from-green-950\/50:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-red-950\/30:where(.dark, .dark *) {
    --tw-gradient-from: rgba(70, 8, 9, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-red-950\/30:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-950) 30%, transparent);
    }
  }

  .dark\:from-red-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-red-950\/40:where(.dark, .dark *) {
    --tw-gradient-from: rgba(70, 8, 9, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-red-950\/40:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-950) 40%, transparent);
    }
  }

  .dark\:from-red-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-red-950\/50:where(.dark, .dark *) {
    --tw-gradient-from: rgba(70, 8, 9, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-red-950\/50:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-950) 50%, transparent);
    }
  }

  .dark\:from-red-950\/50:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-sky-950:where(.dark, .dark *) {
    --tw-gradient-from: var(--color-sky-950);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-sky-950\/30:where(.dark, .dark *) {
    --tw-gradient-from: rgba(5, 47, 74, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-sky-950\/30:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-950) 30%, transparent);
    }
  }

  .dark\:from-sky-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-sky-950\/40:where(.dark, .dark *) {
    --tw-gradient-from: rgba(5, 47, 74, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-sky-950\/40:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-950) 40%, transparent);
    }
  }

  .dark\:from-sky-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-sky-950\/50:where(.dark, .dark *) {
    --tw-gradient-from: rgba(5, 47, 74, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-sky-950\/50:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-950) 50%, transparent);
    }
  }

  .dark\:from-sky-950\/50:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:via-gray-800:where(.dark, .dark *) {
    --tw-gradient-via: var(--color-gray-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .dark\:via-sky-700:where(.dark, .dark *) {
    --tw-gradient-via: var(--color-sky-700);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .dark\:to-blue-950\/20:where(.dark, .dark *) {
    --tw-gradient-to: rgba(22, 36, 86, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-blue-950\/20:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-950) 20%, transparent);
    }
  }

  .dark\:to-blue-950\/20:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-blue-950\/40:where(.dark, .dark *) {
    --tw-gradient-to: rgba(22, 36, 86, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-blue-950\/40:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-950) 40%, transparent);
    }
  }

  .dark\:to-blue-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-cyan-950\/30:where(.dark, .dark *) {
    --tw-gradient-to: rgba(5, 51, 69, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-cyan-950\/30:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-950) 30%, transparent);
    }
  }

  .dark\:to-cyan-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-cyan-950\/40:where(.dark, .dark *) {
    --tw-gradient-to: rgba(5, 51, 69, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-cyan-950\/40:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-950) 40%, transparent);
    }
  }

  .dark\:to-cyan-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-cyan-950\/50:where(.dark, .dark *) {
    --tw-gradient-to: rgba(5, 51, 69, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-cyan-950\/50:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-cyan-950) 50%, transparent);
    }
  }

  .dark\:to-cyan-950\/50:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-emerald-950\/30:where(.dark, .dark *) {
    --tw-gradient-to: rgba(0, 44, 34, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-emerald-950\/30:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-emerald-950) 30%, transparent);
    }
  }

  .dark\:to-emerald-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-green-950\/40:where(.dark, .dark *) {
    --tw-gradient-to: rgba(3, 46, 21, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-green-950\/40:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-green-950) 40%, transparent);
    }
  }

  .dark\:to-green-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-indigo-950\/30:where(.dark, .dark *) {
    --tw-gradient-to: rgba(30, 26, 77, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-indigo-950\/30:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-indigo-950) 30%, transparent);
    }
  }

  .dark\:to-indigo-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-neutral-900:where(.dark, .dark *) {
    --tw-gradient-to: var(--color-neutral-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-neutral-900\/50:where(.dark, .dark *) {
    --tw-gradient-to: rgba(23, 23, 23, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-neutral-900\/50:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
    }
  }

  .dark\:to-neutral-900\/50:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-orange-950\/30:where(.dark, .dark *) {
    --tw-gradient-to: rgba(68, 19, 6, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-orange-950\/30:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-950) 30%, transparent);
    }
  }

  .dark\:to-orange-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-rose-950\/40:where(.dark, .dark *) {
    --tw-gradient-to: rgba(77, 2, 24, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-rose-950\/40:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-950) 40%, transparent);
    }
  }

  .dark\:to-rose-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-rose-950\/50:where(.dark, .dark *) {
    --tw-gradient-to: rgba(77, 2, 24, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-rose-950\/50:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-rose-950) 50%, transparent);
    }
  }

  .dark\:to-rose-950\/50:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-sky-400:where(.dark, .dark *) {
    --tw-gradient-to: var(--color-sky-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-sky-950\/20:where(.dark, .dark *) {
    --tw-gradient-to: rgba(5, 47, 74, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-sky-950\/20:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-sky-950) 20%, transparent);
    }
  }

  .dark\:to-sky-950\/20:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-yellow-950\/30:where(.dark, .dark *) {
    --tw-gradient-to: rgba(67, 32, 4, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-yellow-950\/30:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-yellow-950) 30%, transparent);
    }
  }

  .dark\:to-yellow-950\/30:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-yellow-950\/40:where(.dark, .dark *) {
    --tw-gradient-to: rgba(67, 32, 4, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-yellow-950\/40:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-yellow-950) 40%, transparent);
    }
  }

  .dark\:to-yellow-950\/40:where(.dark, .dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:text-amber-200:where(.dark, .dark *) {
    color: var(--color-amber-200);
  }

  .dark\:text-amber-300:where(.dark, .dark *) {
    color: var(--color-amber-300);
  }

  .dark\:text-amber-400:where(.dark, .dark *) {
    color: var(--color-amber-400);
  }

  .dark\:text-amber-500:where(.dark, .dark *) {
    color: var(--color-amber-500);
  }

  .dark\:text-amber-500\/90:where(.dark, .dark *) {
    color: rgba(249, 156, 0, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-amber-500\/90:where(.dark, .dark *) {
      color: color-mix(in oklab, var(--color-amber-500) 90%, transparent);
    }
  }

  .dark\:text-amber-600:where(.dark, .dark *) {
    color: var(--color-amber-600);
  }

  .dark\:text-amber-700:where(.dark, .dark *) {
    color: var(--color-amber-700);
  }

  .dark\:text-blue-200:where(.dark, .dark *) {
    color: var(--color-blue-200);
  }

  .dark\:text-blue-400:where(.dark, .dark *) {
    color: var(--color-blue-400);
  }

  .dark\:text-cyan-500:where(.dark, .dark *) {
    color: var(--color-cyan-500);
  }

  .dark\:text-cyan-500\/90:where(.dark, .dark *) {
    color: rgba(0, 183, 215, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-cyan-500\/90:where(.dark, .dark *) {
      color: color-mix(in oklab, var(--color-cyan-500) 90%, transparent);
    }
  }

  .dark\:text-cyan-700:where(.dark, .dark *) {
    color: var(--color-cyan-700);
  }

  .dark\:text-emerald-400:where(.dark, .dark *) {
    color: var(--color-emerald-400);
  }

  .dark\:text-emerald-500:where(.dark, .dark *) {
    color: var(--color-emerald-500);
  }

  .dark\:text-emerald-500\/90:where(.dark, .dark *) {
    color: rgba(0, 187, 127, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-emerald-500\/90:where(.dark, .dark *) {
      color: color-mix(in oklab, var(--color-emerald-500) 90%, transparent);
    }
  }

  .dark\:text-gray-100:where(.dark, .dark *) {
    color: var(--color-gray-100);
  }

  .dark\:text-gray-300:where(.dark, .dark *) {
    color: var(--color-gray-300);
  }

  .dark\:text-gray-400:where(.dark, .dark *) {
    color: var(--color-gray-400);
  }

  .dark\:text-gray-500:where(.dark, .dark *) {
    color: var(--color-gray-500);
  }

  .dark\:text-green-200:where(.dark, .dark *) {
    color: var(--color-green-200);
  }

  .dark\:text-green-300:where(.dark, .dark *) {
    color: var(--color-green-300);
  }

  .dark\:text-green-400:where(.dark, .dark *) {
    color: var(--color-green-400);
  }

  .dark\:text-indigo-400:where(.dark, .dark *) {
    color: var(--color-indigo-400);
  }

  .dark\:text-neutral-50:where(.dark, .dark *) {
    color: var(--color-neutral-50);
  }

  .dark\:text-neutral-100:where(.dark, .dark *) {
    color: var(--color-neutral-100);
  }

  .dark\:text-neutral-300:where(.dark, .dark *) {
    color: var(--color-neutral-300);
  }

  .dark\:text-neutral-400:where(.dark, .dark *) {
    color: var(--color-neutral-400);
  }

  .dark\:text-neutral-500:where(.dark, .dark *) {
    color: var(--color-neutral-500);
  }

  .dark\:text-neutral-800:where(.dark, .dark *) {
    color: var(--color-neutral-800);
  }

  .dark\:text-orange-200:where(.dark, .dark *) {
    color: var(--color-orange-200);
  }

  .dark\:text-orange-400:where(.dark, .dark *) {
    color: var(--color-orange-400);
  }

  .dark\:text-pink-400:where(.dark, .dark *) {
    color: var(--color-pink-400);
  }

  .dark\:text-pink-500:where(.dark, .dark *) {
    color: var(--color-pink-500);
  }

  .dark\:text-pink-700:where(.dark, .dark *) {
    color: var(--color-pink-700);
  }

  .dark\:text-purple-200:where(.dark, .dark *) {
    color: var(--color-purple-200);
  }

  .dark\:text-purple-400:where(.dark, .dark *) {
    color: var(--color-purple-400);
  }

  .dark\:text-red-200:where(.dark, .dark *) {
    color: var(--color-red-200);
  }

  .dark\:text-red-300:where(.dark, .dark *) {
    color: var(--color-red-300);
  }

  .dark\:text-red-400:where(.dark, .dark *) {
    color: var(--color-red-400);
  }

  .dark\:text-red-500:where(.dark, .dark *) {
    color: var(--color-red-500);
  }

  .dark\:text-red-500\/90:where(.dark, .dark *) {
    color: rgba(251, 44, 54, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-red-500\/90:where(.dark, .dark *) {
      color: color-mix(in oklab, var(--color-red-500) 90%, transparent);
    }
  }

  .dark\:text-rose-400:where(.dark, .dark *) {
    color: var(--color-rose-400);
  }

  .dark\:text-sky-100:where(.dark, .dark *) {
    color: var(--color-sky-100);
  }

  .dark\:text-sky-200:where(.dark, .dark *) {
    color: var(--color-sky-200);
  }

  .dark\:text-sky-300:where(.dark, .dark *) {
    color: var(--color-sky-300);
  }

  .dark\:text-sky-400:where(.dark, .dark *) {
    color: var(--color-sky-400);
  }

  .dark\:text-sky-500:where(.dark, .dark *) {
    color: var(--color-sky-500);
  }

  .dark\:text-sky-500\/90:where(.dark, .dark *) {
    color: rgba(0, 165, 239, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-sky-500\/90:where(.dark, .dark *) {
      color: color-mix(in oklab, var(--color-sky-500) 90%, transparent);
    }
  }

  .dark\:text-slate-300:where(.dark, .dark *) {
    color: var(--color-slate-300);
  }

  .dark\:text-slate-400:where(.dark, .dark *) {
    color: var(--color-slate-400);
  }

  .dark\:text-teal-400:where(.dark, .dark *) {
    color: var(--color-teal-400);
  }

  .dark\:text-white:where(.dark, .dark *) {
    color: var(--color-white);
  }

  .dark\:shadow-\[0_8px_32px_0_rgba\(0\,0\,0\,0\.3\)\]:where(.dark, .dark *) {
    --tw-shadow: 0 8px 32px 0 var(--tw-shadow-color, rgba(0, 0, 0, .3));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .dark\:shadow-neutral-100\/40:where(.dark, .dark *) {
    --tw-shadow-color: rgba(245, 245, 245, .4);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:shadow-neutral-100\/40:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-neutral-100) 40%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }

  .dark\:ring-red-700\/30:where(.dark, .dark *) {
    --tw-ring-color: rgba(191, 0, 15, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-red-700\/30:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-red-700) 30%, transparent);
    }
  }

  .dark\:invert:where(.dark, .dark *) {
    --tw-invert: invert(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  @media (hover: hover) {
    .dark\:group-hover\:bg-sky-800\/50:where(.dark, .dark *):is(:where(.group):hover *) {
      background-color: rgba(0, 89, 134, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:group-hover\:bg-sky-800\/50:where(.dark, .dark *):is(:where(.group):hover *) {
        background-color: color-mix(in oklab, var(--color-sky-800) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:group-hover\:bg-sky-950:where(.dark, .dark *):is(:where(.group):hover *) {
      background-color: var(--color-sky-950);
    }
  }

  @media (hover: hover) {
    .dark\:group-hover\:bg-slate-800\/30:where(.dark, .dark *):is(:where(.group):hover *) {
      background-color: rgba(29, 41, 61, .3);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:group-hover\:bg-slate-800\/30:where(.dark, .dark *):is(:where(.group):hover *) {
        background-color: color-mix(in oklab, var(--color-slate-800) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:group-hover\:text-sky-400:where(.dark, .dark *):is(:where(.group):hover *) {
      color: var(--color-sky-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:border-sky-600:where(.dark, .dark *):hover {
      border-color: var(--color-sky-600);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:\!bg-neutral-950:where(.dark, .dark *):hover {
      background-color: var(--color-neutral-950) !important;
    }
  }

  @media (hover: hover) {
    .dark\:hover\:\!bg-white:where(.dark, .dark *):hover {
      background-color: var(--color-white) !important;
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:where(.dark, .dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-blue-800:where(.dark, .dark *):hover {
      background-color: var(--color-blue-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-blue-900\/30:where(.dark, .dark *):hover {
      background-color: rgba(28, 57, 142, .3);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-blue-900\/30:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-600:where(.dark, .dark *):hover {
      background-color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-700:where(.dark, .dark *):hover {
      background-color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-green-800:where(.dark, .dark *):hover {
      background-color: var(--color-green-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-green-900\/30:where(.dark, .dark *):hover {
      background-color: rgba(13, 84, 43, .3);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-green-900\/30:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-green-900) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:where(.dark, .dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-neutral-800:where(.dark, .dark *):hover {
      background-color: var(--color-neutral-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-orange-800:where(.dark, .dark *):hover {
      background-color: var(--color-orange-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-orange-900\/30:where(.dark, .dark *):hover {
      background-color: rgba(126, 42, 12, .3);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-orange-900\/30:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-orange-900) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-purple-800:where(.dark, .dark *):hover {
      background-color: var(--color-purple-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-red-600:where(.dark, .dark *):hover {
      background-color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-red-700:where(.dark, .dark *):hover {
      background-color: var(--color-red-700);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-red-700\/40:where(.dark, .dark *):hover {
      background-color: rgba(191, 0, 15, .4);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-red-700\/40:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-red-700) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-red-900\/30:where(.dark, .dark *):hover {
      background-color: rgba(130, 24, 26, .3);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-red-900\/30:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-red-900) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-sky-900\/20:where(.dark, .dark *):hover {
      background-color: rgba(2, 74, 112, .2);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-sky-900\/20:where(.dark, .dark *):hover {
        background-color: color-mix(in oklab, var(--color-sky-900) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-sky-950:where(.dark, .dark *):hover {
      background-color: var(--color-sky-950);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-slate-800:where(.dark, .dark *):hover {
      background-color: var(--color-slate-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-amber-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-from: rgba(123, 51, 6, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:from-amber-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-from: color-mix(in oklab, var(--color-amber-900) 50%, transparent);
      }
    }

    .dark\:hover\:from-amber-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-cyan-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-from: rgba(16, 78, 100, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:from-cyan-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-from: color-mix(in oklab, var(--color-cyan-900) 50%, transparent);
      }
    }

    .dark\:hover\:from-cyan-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-emerald-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-from: rgba(0, 78, 59, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:from-emerald-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-from: color-mix(in oklab, var(--color-emerald-900) 50%, transparent);
      }
    }

    .dark\:hover\:from-emerald-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-green-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-from: rgba(13, 84, 43, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:from-green-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-from: color-mix(in oklab, var(--color-green-900) 50%, transparent);
      }
    }

    .dark\:hover\:from-green-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-red-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-from: rgba(130, 24, 26, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:from-red-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-from: color-mix(in oklab, var(--color-red-900) 50%, transparent);
      }
    }

    .dark\:hover\:from-red-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:from-sky-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-from: rgba(2, 74, 112, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:from-sky-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-from: color-mix(in oklab, var(--color-sky-900) 50%, transparent);
      }
    }

    .dark\:hover\:from-sky-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-amber-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-to: rgba(123, 51, 6, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:to-amber-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-to: color-mix(in oklab, var(--color-amber-900) 50%, transparent);
      }
    }

    .dark\:hover\:to-amber-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-blue-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-to: rgba(28, 57, 142, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:to-blue-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
      }
    }

    .dark\:hover\:to-blue-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-cyan-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-to: rgba(16, 78, 100, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:to-cyan-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-to: color-mix(in oklab, var(--color-cyan-900) 50%, transparent);
      }
    }

    .dark\:hover\:to-cyan-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-cyan-950\/50:where(.dark, .dark *):hover {
      --tw-gradient-to: rgba(5, 51, 69, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:to-cyan-950\/50:where(.dark, .dark *):hover {
        --tw-gradient-to: color-mix(in oklab, var(--color-cyan-950) 50%, transparent);
      }
    }

    .dark\:hover\:to-cyan-950\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-green-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-to: rgba(13, 84, 43, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:to-green-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-to: color-mix(in oklab, var(--color-green-900) 50%, transparent);
      }
    }

    .dark\:hover\:to-green-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:to-rose-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-to: rgba(139, 8, 54, .5);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:to-rose-900\/50:where(.dark, .dark *):hover {
        --tw-gradient-to: color-mix(in oklab, var(--color-rose-900) 50%, transparent);
      }
    }

    .dark\:hover\:to-rose-900\/50:where(.dark, .dark *):hover {
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-blue-400:where(.dark, .dark *):hover {
      color: var(--color-blue-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-green-400:where(.dark, .dark *):hover {
      color: var(--color-green-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-neutral-400:where(.dark, .dark *):hover {
      color: var(--color-neutral-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-orange-400:where(.dark, .dark *):hover {
      color: var(--color-orange-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-red-400:where(.dark, .dark *):hover {
      color: var(--color-red-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-red-500:where(.dark, .dark *):hover {
      color: var(--color-red-500);
    }
  }

  .dark\:focus\:border-blue-700:where(.dark, .dark *):focus {
    border-color: var(--color-blue-700);
  }

  .dark\:focus\:ring-blue-700\/30:where(.dark, .dark *):focus {
    --tw-ring-color: rgba(20, 71, 230, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus\:ring-blue-700\/30:where(.dark, .dark *):focus {
      --tw-ring-color: color-mix(in oklab, var(--color-blue-700) 30%, transparent);
    }
  }

  .dark\:focus\:outline-blue-500:where(.dark, .dark *):focus {
    outline-color: var(--color-blue-500);
  }

  .dark\:focus-visible\:ring-destructive\/40:where(.dark, .dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:where(.dark, .dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:where(.dark, .dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:where(.dark, .dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:data-\[state\=checked\]\:bg-primary:where(.dark, .dark *)[data-state="checked"] {
    background-color: var(--primary);
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:where(.dark, .dark *)[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:where(.dark, .dark *)[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .\[\&_\.recharts-rectangle\]\:opacity-80 .recharts-rectangle {
    opacity: .8;
  }

  .\[\&_\.recharts-xAxis\]\:min-w-full .recharts-xAxis {
    min-width: 100%;
  }

  .\[\&_\.recharts-xAxis\]\:text-xs .recharts-xAxis {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .\[\&_\.recharts-xAxis_\.recharts-cartesian-axis-tick\]\:mb-2 .recharts-xAxis .recharts-cartesian-axis-tick {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .\[\&_\.recharts-xAxis_\.recharts-cartesian-axis-tick\]\:text-center .recharts-xAxis .recharts-cartesian-axis-tick {
    text-align: center;
  }

  .\[\&_\.recharts-xAxis_\.recharts-cartesian-axis-tick\]\:text-xs .recharts-xAxis .recharts-cartesian-axis-tick {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .\[\&_\.recharts-xAxis_\.recharts-cartesian-axis-tick\]\:text-\[11px\] .recharts-xAxis .recharts-cartesian-axis-tick {
    font-size: 11px;
  }

  .\[\&_\.recharts-xAxis_\.recharts-cartesian-axis-tick\]\:leading-none .recharts-xAxis .recharts-cartesian-axis-tick {
    --tw-leading: 1;
    line-height: 1;
  }

  .\[\&_\.recharts-yAxis_\.recharts-cartesian-axis-tick\]\:text-xs .recharts-yAxis .recharts-cartesian-axis-tick {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .\[\&_\.recharts-yAxis_\.recharts-cartesian-axis-tick\]\:text-\[11px\] .recharts-yAxis .recharts-cartesian-axis-tick {
    font-size: 11px;
  }

  .\[\&_\.recharts-yAxis_\.recharts-cartesian-axis-tick\]\:leading-none .recharts-yAxis .recharts-cartesian-axis-tick {
    --tw-leading: 1;
    line-height: 1;
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\&_tr\]\:border-b tr {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .\[\&_tr\:last-child\]\:border-0 tr:last-child {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .\[\&\:has\(\[aria-selected\]\)\]\:bg-accent:has([aria-selected]) {
    background-color: var(--accent);
  }

  .first\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-l-md:first-child:has([aria-selected]) {
    border-top-left-radius: calc(var(--radius)  - 2px);
    border-bottom-left-radius: calc(var(--radius)  - 2px);
  }

  .last\:\[\&\:has\(\[aria-selected\]\)\]\:rounded-r-md:last-child:has([aria-selected]) {
    border-top-right-radius: calc(var(--radius)  - 2px);
    border-bottom-right-radius: calc(var(--radius)  - 2px);
  }

  .\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50:has([aria-selected].day-outside) {
    background-color: var(--accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .\[\&\:has\(\[aria-selected\]\.day-outside\)\]\:bg-accent\/50:has([aria-selected].day-outside) {
      background-color: color-mix(in oklab, var(--accent) 50%, transparent);
    }
  }

  .\[\&\:has\(\[aria-selected\]\.day-range-end\)\]\:rounded-r-md:has([aria-selected].day-range-end) {
    border-top-right-radius: calc(var(--radius)  - 2px);
    border-bottom-right-radius: calc(var(--radius)  - 2px);
  }

  .\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0:has([role="checkbox"]) {
    padding-right: calc(var(--spacing) * 0);
  }

  :-webkit-any(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):-webkit-any(svg) {
    color: var(--destructive) !important;
  }

  :-moz-any(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):-moz-any(svg) {
    color: var(--destructive) !important;
  }

  :is(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):is(svg) {
    color: var(--destructive) !important;
  }

  .\[\&\>\[role\=checkbox\]\]\:translate-y-\[2px\] > [role="checkbox"] {
    --tw-translate-y: 2px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .\[\&\>button\]\:hidden > button {
    display: none;
  }

  .\[\&\>span\]\:line-clamp-1 > span {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .\[\&\>span\:last-child\]\:truncate > span:last-child {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .\[\&\>svg\]\:size-3\.5 > svg {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .\[\&\>svg\]\:size-4 > svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&\>svg\]\:shrink-0 > svg {
    flex-shrink: 0;
  }

  .\[\&\>svg\]\:text-sidebar-accent-foreground > svg {
    color: var(--sidebar-accent-foreground);
  }

  .\[\&\>tr\]\:last\:border-b-0 > tr:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0;
  }

  [data-side="left"][data-collapsible="offcanvas"] .\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2 {
    right: calc(var(--spacing) * -2);
  }

  [data-side="left"][data-state="collapsed"] .\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize {
    cursor: e-resize;
  }

  [data-side="right"][data-collapsible="offcanvas"] .\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2 {
    left: calc(var(--spacing) * -2);
  }

  [data-side="right"][data-state="collapsed"] .\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize {
    cursor: w-resize;
  }
}

.rdp {
  --rdp-cell-size: 40px;
  --rdp-caption-font-size: 18px;
  --rdp-accent-color: #00f;
  --rdp-background-color: #e7edff;
  --rdp-accent-color-dark: #3003e1;
  --rdp-background-color-dark: #180270;
  --rdp-outline: 2px solid var(--rdp-accent-color);
  --rdp-outline-selected: 3px solid var(--rdp-accent-color);
  --rdp-selected-color: #fff;
  margin: 1em;
}

.rdp-vhidden {
  box-sizing: border-box;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  border: 0;
  margin: 0;
  padding: 0;
  top: 0;
  clip: rect(1px, 1px, 1px, 1px) !important;
  border: 0 !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  position: absolute !important;
  overflow: hidden !important;
}

.rdp-button_reset {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: default;
  color: inherit;
  font: inherit;
  background: none;
  margin: 0;
  padding: 0;
  position: relative;
}

.rdp-button_reset:focus-visible {
  outline: none;
}

.rdp-button {
  border: 2px solid rgba(0, 0, 0, 0);
}

.rdp-button[disabled]:not(.rdp-day_selected) {
  opacity: .25;
}

.rdp-button:not([disabled]) {
  cursor: pointer;
}

.rdp-button:focus-visible:not([disabled]) {
  color: inherit;
  background-color: var(--rdp-background-color);
  border: var(--rdp-outline);
}

.rdp-button:hover:not([disabled]):not(.rdp-day_selected) {
  background-color: var(--rdp-background-color);
}

.rdp-months {
  display: flex;
}

.rdp-month {
  margin: 0 1em;
}

.rdp-month:first-child {
  margin-left: 0;
}

.rdp-month:last-child {
  margin-right: 0;
}

.rdp-table {
  max-width: calc(var(--rdp-cell-size) * 7);
  border-collapse: collapse;
  margin: 0;
}

.rdp-with_weeknumber .rdp-table {
  max-width: calc(var(--rdp-cell-size) * 8);
  border-collapse: collapse;
}

.rdp-caption {
  text-align: left;
  justify-content: space-between;
  align-items: center;
  padding: 0;
  display: flex;
}

.rdp-multiple_months .rdp-caption {
  text-align: center;
  display: block;
  position: relative;
}

.rdp-caption_dropdowns {
  display: inline-flex;
  position: relative;
}

.rdp-caption_label {
  z-index: 1;
  white-space: nowrap;
  color: currentColor;
  font-family: inherit;
  font-size: var(--rdp-caption-font-size);
  border: 2px solid rgba(0, 0, 0, 0);
  align-items: center;
  margin: 0;
  padding: 0 .25em;
  font-weight: bold;
  display: inline-flex;
  position: relative;
}

.rdp-nav {
  white-space: nowrap;
}

.rdp-multiple_months .rdp-caption_start .rdp-nav {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

.rdp-multiple_months .rdp-caption_end .rdp-nav {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
}

.rdp-nav_button {
  width: var(--rdp-cell-size);
  height: var(--rdp-cell-size);
  border-radius: 100%;
  justify-content: center;
  align-items: center;
  padding: .25em;
  display: inline-flex;
}

.rdp-dropdown_year, .rdp-dropdown_month {
  align-items: center;
  display: inline-flex;
  position: relative;
}

.rdp-dropdown {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  z-index: 2;
  width: 100%;
  cursor: inherit;
  opacity: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  background-color: rgba(0, 0, 0, 0);
  border: none;
  margin: 0;
  padding: 0;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
}

.rdp-dropdown[disabled] {
  opacity: unset;
  color: unset;
}

.rdp-dropdown:focus-visible:not([disabled]) + .rdp-caption_label {
  background-color: var(--rdp-background-color);
  border: var(--rdp-outline);
  border-radius: 6px;
}

.rdp-dropdown_icon {
  margin: 0 0 0 5px;
}

.rdp-head {
  border: 0;
}

.rdp-head_row, .rdp-row {
  height: 100%;
}

.rdp-head_cell {
  vertical-align: middle;
  text-align: center;
  height: 100%;
  height: var(--rdp-cell-size);
  text-transform: uppercase;
  padding: 0;
  font-size: .75em;
  font-weight: 700;
}

.rdp-tbody {
  border: 0;
}

.rdp-tfoot {
  margin: .5em;
}

.rdp-cell {
  width: var(--rdp-cell-size);
  height: 100%;
  height: var(--rdp-cell-size);
  text-align: center;
  padding: 0;
}

.rdp-weeknumber {
  font-size: .75em;
}

.rdp-weeknumber, .rdp-day {
  box-sizing: border-box;
  width: var(--rdp-cell-size);
  max-width: var(--rdp-cell-size);
  height: var(--rdp-cell-size);
  border: 2px solid rgba(0, 0, 0, 0);
  border-radius: 100%;
  justify-content: center;
  align-items: center;
  margin: 0;
  display: flex;
  overflow: hidden;
}

.rdp-day_today:not(.rdp-day_outside) {
  font-weight: bold;
}

.rdp-day_selected:focus-visible {
  color: var(--rdp-selected-color);
  opacity: 1;
  background-color: var(--rdp-accent-color);
}

.rdp-day_outside {
  opacity: .5;
}

.rdp-day_selected:focus-visible {
  outline: var(--rdp-outline);
  outline-offset: 2px;
  z-index: 1;
}

.rdp:not([dir="rtl"]) .rdp-day_range_start:not(.rdp-day_range_end) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.rdp:not([dir="rtl"]) .rdp-day_range_end:not(.rdp-day_range_start), .rdp[dir="rtl"] .rdp-day_range_start:not(.rdp-day_range_end) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.rdp[dir="rtl"] .rdp-day_range_end:not(.rdp-day_range_start) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.rdp-day_range_end.rdp-day_range_start {
  border-radius: 100%;
}

.rdp-day_range_middle {
  border-radius: 0;
}

.rdp {
  --rdp-cell-size: 40px;
  --rdp-accent-color: hsl(var(--primary));
  --rdp-background-color: hsl(var(--accent));
  --rdp-accent-color-dark: hsl(var(--primary));
  --rdp-background-color-dark: hsl(var(--accent));
  --rdp-outline: 2px solid var(--rdp-accent-color);
  --rdp-outline-selected: 2px solid rgba(0, 0, 0, .75);
  margin: 1em;
}

.rdp-day_selected, .rdp-day_selected:hover {
  color: hsl(var(--primary-foreground));
  opacity: 1;
  background-color: hsl(var(--primary));
}

.rdp-day_selected:focus-visible {
  color: hsl(var(--primary-foreground));
  opacity: 1;
  background-color: hsl(var(--primary));
}

.rdp-day_range_start, .rdp-day_range_end {
  color: hsl(var(--primary-foreground));
  background-color: hsl(var(--primary));
}

.rdp-day_range_middle, .rdp-button:hover:not([disabled]):not(.rdp-day_selected) {
  background-color: hsl(var(--accent));
}

.table-header-sorted {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
  --tw-gradient-from: rgba(184, 230, 254, .3);
}

@supports (color: color-mix(in lab, red, red)) {
  .table-header-sorted {
    --tw-gradient-from: color-mix(in oklab, var(--color-sky-200) 30%, transparent);
  }
}

.table-header-sorted {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  --tw-gradient-to: rgba(162, 244, 253, .3);
}

@supports (color: color-mix(in lab, red, red)) {
  .table-header-sorted {
    --tw-gradient-to: color-mix(in oklab, var(--color-cyan-200) 30%, transparent);
  }
}

.table-header-sorted {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  color: var(--accent-foreground);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: .2s;
  --tw-ease: var(--ease-in-out);
  transition-duration: .2s;
  transition-timing-function: var(--ease-in-out);
}

.table-header-sorted:where(.dark, .dark *) {
  --tw-gradient-from: rgba(184, 230, 254, .1);
}

@supports (color: color-mix(in lab, red, red)) {
  .table-header-sorted:where(.dark, .dark *) {
    --tw-gradient-from: color-mix(in oklab, var(--color-sky-200) 10%, transparent);
  }
}

.table-header-sorted:where(.dark, .dark *) {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.table-header-sorted:where(.dark, .dark *) {
  --tw-gradient-to: rgba(162, 244, 253, .1);
}

@supports (color: color-mix(in lab, red, red)) {
  .table-header-sorted:where(.dark, .dark *) {
    --tw-gradient-to: color-mix(in oklab, var(--color-cyan-200) 10%, transparent);
  }
}

.table-header-sorted:where(.dark, .dark *) {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.table-header-sorted:hover {
  cursor: pointer;
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
  --tw-gradient-from: rgba(184, 230, 254, .5);
}

@supports (color: color-mix(in lab, red, red)) {
  .table-header-sorted:hover {
    --tw-gradient-from: color-mix(in oklab, var(--color-sky-200) 50%, transparent);
  }
}

.table-header-sorted:hover {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  --tw-gradient-to: rgba(162, 244, 253, .5);
}

@supports (color: color-mix(in lab, red, red)) {
  .table-header-sorted:hover {
    --tw-gradient-to: color-mix(in oklab, var(--color-cyan-200) 50%, transparent);
  }
}

.table-header-sorted:hover {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  color: var(--accent-foreground);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: .2s;
  --tw-ease: var(--ease-in-out);
  transition-duration: .2s;
  transition-timing-function: var(--ease-in-out);
}

.dark .table-header-sorted {
  border-left-color: var(--primary);
}

@supports (color: color-mix(in lab, red, red)) {
  .dark .table-header-sorted {
    border-left-color: color-mix(in oklab, var(--primary) 80%, transparent);
  }
}

.dark .table-header-sorted {
  background-color: var(--accent);
}

@supports (color: color-mix(in lab, red, red)) {
  .dark .table-header-sorted {
    background-color: color-mix(in oklab, var(--accent) 30%, transparent);
  }
}

.dark .table-header-sorted:hover {
  background-color: var(--accent);
}

@supports (color: color-mix(in lab, red, red)) {
  .dark .table-header-sorted:hover {
    background-color: color-mix(in oklab, var(--accent) 50%, transparent);
  }
}

.dark .table-header-sorted:hover {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, .1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

:root {
  --radius: .625rem;
  --background: #fff;
  --foreground: #0a0a0a;
  --card: #fff;
  --card-foreground: #0a0a0a;
  --popover: #fff;
  --popover-foreground: #0a0a0a;
  --primary: #171717;
  --primary-foreground: #fafafa;
  --secondary: #f5f5f5;
  --secondary-foreground: #171717;
  --muted: #f5f5f5;
  --muted-foreground: #737373;
  --accent: #f5f5f5;
  --accent-foreground: #171717;
  --destructive: #e40014;
  --border: #e5e5e5;
  --input: #e5e5e5;
  --ring: #a1a1a1;
  --chart-1: #f05100;
  --chart-2: #009588;
  --chart-3: #104e64;
  --chart-4: #fcbb00;
  --chart-5: #f99c00;
  --sidebar: #fafafa;
  --sidebar-foreground: #0a0a0a;
  --sidebar-primary: #171717;
  --sidebar-primary-foreground: #fafafa;
  --sidebar-accent: #f5f5f5;
  --sidebar-accent-foreground: #171717;
  --sidebar-border: #e5e5e5;
  --sidebar-ring: #a1a1a1;
}

@supports (color: color(display-p3 0 0 0)) {
  :root {
    --background: color(display-p3 1 1 1);
    --foreground: color(display-p3 .0393882 .0393882 .0393882);
    --card: color(display-p3 1 1 1);
    --card-foreground: color(display-p3 .0393882 .0393882 .0393882);
    --popover: color(display-p3 1 1 1);
    --popover-foreground: color(display-p3 .0393882 .0393882 .0393882);
    --primary: color(display-p3 .0905274 .0905274 .0905274);
    --primary-foreground: color(display-p3 .980256 .980256 .980256);
    --secondary: color(display-p3 .960587 .960587 .960587);
    --secondary-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --muted: color(display-p3 .960587 .960587 .960587);
    --muted-foreground: color(display-p3 .451519 .451519 .451519);
    --accent: color(display-p3 .960587 .960587 .960587);
    --accent-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --destructive: color(display-p3 .830323 .140383 .133196);
    --border: color(display-p3 .898161 .898161 .898161);
    --input: color(display-p3 .898161 .898161 .898161);
    --ring: color(display-p3 .630163 .630163 .630163);
    --chart-1: color(display-p3 .887467 .341665 .0219962);
    --chart-2: color(display-p3 .207114 .579584 .53668);
    --chart-3: color(display-p3 .142586 .302008 .385094);
    --chart-4: color(display-p3 .959186 .738519 .118268);
    --chart-5: color(display-p3 .93994 .620584 .0585367);
    --sidebar: color(display-p3 .980256 .980256 .980256);
    --sidebar-foreground: color(display-p3 .0393882 .0393882 .0393882);
    --sidebar-primary: color(display-p3 .0905274 .0905274 .0905274);
    --sidebar-primary-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-accent: color(display-p3 .960587 .960587 .960587);
    --sidebar-accent-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --sidebar-border: color(display-p3 .898161 .898161 .898161);
    --sidebar-ring: color(display-p3 .630163 .630163 .630163);
  }
}

@supports (color: lab(0% 0 0)) {
  :root {
    --background: lab(100% 0 0);
    --foreground: lab(2.75381% 0 0);
    --card: lab(100% 0 0);
    --card-foreground: lab(2.75381% 0 0);
    --popover: lab(100% 0 0);
    --popover-foreground: lab(2.75381% 0 0);
    --primary: lab(7.78201% -.0000149012 0);
    --primary-foreground: lab(98.26% 0 0);
    --secondary: lab(96.52% -.0000298023 .0000119209);
    --secondary-foreground: lab(7.78201% -.0000149012 0);
    --muted: lab(96.52% -.0000298023 .0000119209);
    --muted-foreground: lab(48.496% 0 0);
    --accent: lab(96.52% -.0000298023 .0000119209);
    --accent-foreground: lab(7.78201% -.0000149012 0);
    --destructive: lab(48.4493% 77.4328 61.5452);
    --border: lab(90.952% 0 -.0000119209);
    --input: lab(90.952% 0 -.0000119209);
    --ring: lab(66.128% -.0000298023 .0000119209);
    --chart-1: lab(57.1026% 64.2584 89.8886);
    --chart-2: lab(55.0223% -41.0774 -3.90277);
    --chart-3: lab(30.372% -13.1853 -18.7887);
    --chart-4: lab(80.1641% 16.6016 99.2089);
    --chart-5: lab(72.7183% 31.8672 97.9407);
    --sidebar: lab(98.26% 0 0);
    --sidebar-foreground: lab(2.75381% 0 0);
    --sidebar-primary: lab(7.78201% -.0000149012 0);
    --sidebar-primary-foreground: lab(98.26% 0 0);
    --sidebar-accent: lab(96.52% -.0000298023 .0000119209);
    --sidebar-accent-foreground: lab(7.78201% -.0000149012 0);
    --sidebar-border: lab(90.952% 0 -.0000119209);
    --sidebar-ring: lab(66.128% -.0000298023 .0000119209);
  }
}

.dark {
  --background: #0a0a0a;
  --foreground: #fafafa;
  --card: #171717;
  --card-foreground: #fafafa;
  --popover: #171717;
  --popover-foreground: #fafafa;
  --primary: #e5e5e5;
  --primary-foreground: #171717;
  --secondary: #262626;
  --secondary-foreground: #fafafa;
  --muted: #262626;
  --muted-foreground: #a1a1a1;
  --accent: #262626;
  --accent-foreground: #fafafa;
  --destructive: #ff6568;
  --border: rgba(255, 255, 255, .1);
  --input: rgba(255, 255, 255, .15);
  --ring: #737373;
  --chart-1: #1447e6;
  --chart-2: #00bb7f;
  --chart-3: #f99c00;
  --chart-4: #ac4bff;
  --chart-5: #ff2357;
  --sidebar: #171717;
  --sidebar-foreground: #fafafa;
  --sidebar-primary: #1447e6;
  --sidebar-primary-foreground: #fafafa;
  --sidebar-accent: #262626;
  --sidebar-accent-foreground: #fafafa;
  --sidebar-border: rgba(255, 255, 255, .1);
  --sidebar-ring: #737373;
}

@supports (color: color(display-p3 0 0 0)) {
  .dark {
    --background: color(display-p3 .0393882 .0393882 .0393882);
    --foreground: color(display-p3 .980256 .980256 .980256);
    --card: color(display-p3 .0905274 .0905274 .0905274);
    --card-foreground: color(display-p3 .980256 .980256 .980256);
    --popover: color(display-p3 .0905274 .0905274 .0905274);
    --popover-foreground: color(display-p3 .980256 .980256 .980256);
    --primary: color(display-p3 .898161 .898161 .898161);
    --primary-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --secondary: color(display-p3 .149382 .149382 .149382);
    --secondary-foreground: color(display-p3 .980256 .980256 .980256);
    --muted: color(display-p3 .149382 .149382 .149382);
    --muted-foreground: color(display-p3 .630163 .630163 .630163);
    --accent: color(display-p3 .149382 .149382 .149382);
    --accent-foreground: color(display-p3 .980256 .980256 .980256);
    --destructive: color(display-p3 .933534 .431676 .423491);
    --border: color(display-p3 1 1 1 / .1);
    --input: color(display-p3 1 1 1 / .15);
    --ring: color(display-p3 .451519 .451519 .451519);
    --chart-1: color(display-p3 .1379 .274983 .867624);
    --chart-2: color(display-p3 .267113 .726847 .508397);
    --chart-3: color(display-p3 .93994 .620584 .0585367);
    --chart-4: color(display-p3 .629519 .30089 .990817);
    --chart-5: color(display-p3 .921824 .240748 .355666);
    --sidebar: color(display-p3 .0905274 .0905274 .0905274);
    --sidebar-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-primary: color(display-p3 .1379 .274983 .867624);
    --sidebar-primary-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-accent: color(display-p3 .149382 .149382 .149382);
    --sidebar-accent-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-border: color(display-p3 1 1 1 / .1);
    --sidebar-ring: color(display-p3 .451519 .451519 .451519);
  }
}

@supports (color: lab(0% 0 0)) {
  .dark {
    --background: lab(2.75381% 0 0);
    --foreground: lab(98.26% 0 0);
    --card: lab(7.78201% -.0000149012 0);
    --card-foreground: lab(98.26% 0 0);
    --popover: lab(7.78201% -.0000149012 0);
    --popover-foreground: lab(98.26% 0 0);
    --primary: lab(90.952% 0 -.0000119209);
    --primary-foreground: lab(7.78201% -.0000149012 0);
    --secondary: lab(15.204% 0 -.00000596046);
    --secondary-foreground: lab(98.26% 0 0);
    --muted: lab(15.204% 0 -.00000596046);
    --muted-foreground: lab(66.128% -.0000298023 .0000119209);
    --accent: lab(15.204% 0 -.00000596046);
    --accent-foreground: lab(98.26% 0 0);
    --destructive: lab(63.7053% 60.745 31.3109);
    --border: lab(100% 0 0 / .1);
    --input: lab(100% 0 0 / .15);
    --ring: lab(48.496% 0 0);
    --chart-1: lab(36.9089% 35.0961 -85.6872);
    --chart-2: lab(66.9756% -58.27 19.5419);
    --chart-3: lab(72.7183% 31.8672 97.9407);
    --chart-4: lab(52.0183% 66.11 -78.2316);
    --chart-5: lab(56.101% 79.4328 31.4532);
    --sidebar: lab(7.78201% -.0000149012 0);
    --sidebar-foreground: lab(98.26% 0 0);
    --sidebar-primary: lab(36.9089% 35.0961 -85.6872);
    --sidebar-primary-foreground: lab(98.26% 0 0);
    --sidebar-accent: lab(15.204% 0 -.00000596046);
    --sidebar-accent-foreground: lab(98.26% 0 0);
    --sidebar-border: lab(100% 0 0 / .1);
    --sidebar-ring: lab(48.496% 0 0);
  }
}

@keyframes hide {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes slideDownAndFade {
  from {
    opacity: 0;
    transform: translateY(-6px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(6px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideUpAndFade {
  from {
    opacity: 0;
    transform: translateY(6px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideRightAndFade {
  from {
    opacity: 0;
    transform: translateX(-6px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes accordionOpen {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes accordionClose {
  from {
    height: var(--radix-accordion-content-height);
  }

  to {
    height: 0;
  }
}

@keyframes dialogOverlayShow {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes dialogContentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -45%)scale(.95);
  }

  to {
    opacity: 1;
    transform: translate(-50%, -50%)scale(1);
  }
}

@keyframes drawerSlideLeftAndFade {
  from {
    opacity: 0;
    transform: translateX(100%);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes drawerSlideRightAndFade {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

.page-content {
  max-width: var(--container-7xl);
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 6);
  margin-left: auto;
  margin-right: auto;
}

.welcome-nav a {
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}

@media (hover: hover) {
  .welcome-nav a:hover {
    color: #2aa3ff;
  }
}

.category-breakdown-scroll::-webkit-scrollbar {
  width: 6px;
}

.category-breakdown-scroll::-webkit-scrollbar-track {
  background: none;
}

.category-breakdown-scroll::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}

.category-breakdown-scroll::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

.dark .category-breakdown-scroll::-webkit-scrollbar-thumb {
  background: #4b5563;
}

.dark .category-breakdown-scroll::-webkit-scrollbar-thumb:hover {
  background: #6b7280;
}

.category-legend-container {
  max-width: 100%;
  overflow: hidden;
}

.category-legend-content {
  overflow-x: hidden;
  overflow-y: auto;
}

.container-color {
  border-left-style: var(--tw-border-style);
  border-left-width: 4px;
  border-left-color: var(--color-sky-800);
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
  --tw-gradient-from: rgba(240, 249, 255, .9);
}

@supports (color: color-mix(in lab, red, red)) {
  .container-color {
    --tw-gradient-from: color-mix(in oklab, var(--color-sky-50) 90%, transparent);
  }
}

.container-color {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  --tw-gradient-to: rgba(236, 254, 255, .9);
}

@supports (color: color-mix(in lab, red, red)) {
  .container-color {
    --tw-gradient-to: color-mix(in oklab, var(--color-cyan-50) 90%, transparent);
  }
}

.container-color {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.container-color:where(.dark, .dark *) {
  --tw-gradient-from: rgba(5, 47, 74, .4);
}

@supports (color: color-mix(in lab, red, red)) {
  .container-color:where(.dark, .dark *) {
    --tw-gradient-from: color-mix(in oklab, var(--color-sky-950) 40%, transparent);
  }
}

.container-color:where(.dark, .dark *) {
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.container-color:where(.dark, .dark *) {
  --tw-gradient-to: var(--color-neutral-900);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.card-title {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
  color: var(--color-sky-900);
}

.card-title:where(.dark, .dark *) {
  color: var(--color-sky-50);
}

.button-blue-bg {
  cursor: pointer;
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
  --tw-gradient-from: var(--color-sky-500);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  --tw-gradient-via: var(--color-sky-500);
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-to: var(--color-sky-600);
  color: var(--color-white);
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}

@media (hover: hover) {
  .button-blue-bg:hover {
    --tw-gradient-from: var(--color-sky-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}

@media (hover: hover) {
  .button-blue-bg:hover {
    --tw-gradient-via: var(--color-sky-600);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
}

@media (hover: hover) {
  .button-blue-bg:hover {
    color: var(--color-white);
  }
}

.button-blue-bg:where(.dark, .dark *) {
  --tw-gradient-from: var(--color-sky-600);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

.button-blue-bg:where(.dark, .dark *) {
  --tw-gradient-via: var(--color-sky-600);
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}

.button-blue-bg:where(.dark, .dark *) {
  --tw-gradient-to: var(--color-sky-800);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}

@media (hover: hover) {
  .button-blue-bg:where(.dark, .dark *):hover {
    --tw-gradient-to: var(--color-sky-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: rgba(0, 0, 0, 0);
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: rgba(0, 0, 0, 0);
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: rgba(0, 0, 0, 0);
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-ordinal {
  syntax: "*";
  inherits: false
}

@property --tw-slashed-zero {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-figure {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

/*# sourceMappingURL=_1583cacc._.css.map*/