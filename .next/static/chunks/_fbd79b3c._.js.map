{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/DashboardFooter.tsx"],"sourcesContent":["import { Heart } from \"lucide-react\";\n\nexport function DashboardFooter() {\n  return (\n    <footer className=\"border-t bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"mx-auto flex flex-col items-center justify-between gap-4 py-6 md:h-10 !pt-5 md:flex-row md:py-0 max-w-7xl\">\n        <div className=\"flex flex-col items-center gap-4 px-8 md:flex-row md:gap-2 md:px-0\">\n          <p className=\"text-center text-sm leading-loose text-muted-foreground md:text-left\">\n            Â© 2025 Finova. All rights reserved.\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n          <span>Made with</span>\n          <Heart className=\"h-4 w-4 text-red-500\" fill=\"red\" />\n        </div>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,4TAAC;QAAO,WAAU;kBAChB,cAAA,4TAAC;YAAI,WAAU;;8BACb,4TAAC;oBAAI,WAAU;8BACb,cAAA,4TAAC;wBAAE,WAAU;kCAAuE;;;;;;;;;;;8BAItF,4TAAC;oBAAI,WAAU;;sCACb,4TAAC;sCAAK;;;;;;sCACN,4TAAC,2RAAA,CAAA,QAAK;4BAAC,WAAU;4BAAuB,MAAK;;;;;;;;;;;;;;;;;;;;;;;AAKvD;KAhBgB","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACb,qBACE,4TAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,4TAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACjB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,KAAsD;QAAtD,EAAE,SAAS,EAAE,GAAG,OAAsC,GAAtD;IACnB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IAChB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAmD;QAAnD,EAAE,SAAS,EAAE,GAAG,OAAmC,GAAnD;IACjB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,KAGY;QAHZ,EACpB,SAAS,EACT,GAAG,OAC6B,GAHZ;IAIpB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,KAGoC;QAHpC,EAChB,SAAS,EACT,GAAG,OACiD,GAHpC;IAIhB,qBACE,4TAAC,wXAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,4TAAC,wXAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,4TAAC,+RAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBS","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return (\n    <DropdownMenuPrimitive.Portal data-slot=\"dropdown-menu-portal\" {...props} />\n  )\n}\n\nfunction DropdownMenuTrigger({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n  return (\n    <DropdownMenuPrimitive.Trigger\n      data-slot=\"dropdown-menu-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuContent({\n  className,\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        data-slot=\"dropdown-menu-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md\",\n          className\n        )}\n        {...props}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\nfunction DropdownMenuGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n  return (\n    <DropdownMenuPrimitive.Group data-slot=\"dropdown-menu-group\" {...props} />\n  )\n}\n\nfunction DropdownMenuItem({\n  className,\n  inset,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n  inset?: boolean\n  variant?: \"default\" | \"destructive\"\n}) {\n  return (\n    <DropdownMenuPrimitive.Item\n      data-slot=\"dropdown-menu-item\"\n      data-inset={inset}\n      data-variant={variant}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuCheckboxItem({\n  className,\n  children,\n  checked,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      data-slot=\"dropdown-menu-checkbox-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      checked={checked}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\nfunction DropdownMenuRadioGroup({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n  return (\n    <DropdownMenuPrimitive.RadioGroup\n      data-slot=\"dropdown-menu-radio-group\"\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuRadioItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      data-slot=\"dropdown-menu-radio-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <CircleIcon className=\"size-2 fill-current\" />\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nfunction DropdownMenuLabel({\n  className,\n  inset,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.Label\n      data-slot=\"dropdown-menu-label\"\n      data-inset={inset}\n      className={cn(\n        \"px-2 py-1.5 text-sm font-medium data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n  return (\n    <DropdownMenuPrimitive.Separator\n      data-slot=\"dropdown-menu-separator\"\n      className={cn(\"bg-border -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuShortcut({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"dropdown-menu-shortcut\"\n      className={cn(\n        \"text-muted-foreground ml-auto text-xs tracking-widest\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DropdownMenuSub({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n  return <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n}\n\nfunction DropdownMenuSubTrigger({\n  className,\n  inset,\n  children,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n  inset?: boolean\n}) {\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      data-slot=\"dropdown-menu-sub-trigger\"\n      data-inset={inset}\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto size-4\" />\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\nfunction DropdownMenuSubContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n  return (\n    <DropdownMenuPrimitive.SubContent\n      data-slot=\"dropdown-menu-sub-content\"\n      className={cn(\n        \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/app/%28dashboard%29/liabilities/columns.tsx"],"sourcesContent":["\"use client\";\n\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Liability } from \"@/lib/types\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport {\n  MoreHorizontal,\n  Eye,\n  Edit,\n  Trash2,\n  MoveUp,\n  MoveDown,\n  ArrowUpDown,\n  Calendar,\n  Building2,\n  CreditCard,\n  TrendingDown,\n  DollarSign,\n  FileText,\n  Percent,\n} from \"lucide-react\";\n\n// Action handlers interface\ninterface ActionHandlers {\n  onView: (liability: Liability) => void;\n  onEdit: (liability: Liability) => void;\n  onDelete: (liability: Liability) => void;\n}\n\n// Global event system for actions\nlet globalActionHandlers: ActionHandlers | null = null;\n\nexport const setGlobalActionHandlers = (handlers: ActionHandlers) => {\n  globalActionHandlers = handlers;\n};\n\n// Dynamic sortable header component\ninterface SortableHeaderProps {\n  columnId: string;\n  sortState: \"asc\" | \"desc\" | false;\n  onToggleSort: (columnId: string) => void;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst SortableHeader = ({\n  columnId,\n  sortState,\n  onToggleSort,\n  children,\n  className = \"\",\n}: SortableHeaderProps) => {\n  return (\n    <Button\n      variant=\"ghost\"\n      onClick={() => onToggleSort(columnId)}\n      className={`h-auto p-0 py-2 font-semibold hover:bg-slate-100 dark:hover:bg-slate-800 cursor-pointer ${\n        sortState ? \"table-header-sorted\" : \"\"\n      } ${className}`}\n    >\n      {children}\n      {sortState === \"asc\" ? (\n        <MoveUp className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n      ) : sortState === \"desc\" ? (\n        <MoveDown className=\"h-4 w-4 text-blue-600 dark:text-blue-400\" />\n      ) : (\n        <ArrowUpDown className=\"h-4 w-4 text-slate-400\" />\n      )}\n    </Button>\n  );\n};\n\n// Helper function to format currency\nconst formatCurrency = (amount: number, currency: string = \"AUD\"): string => {\n  return new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount);\n};\n\n// Helper function to format date to desired format\nconst formatDate = (dateString: string): string => {\n  const date = new Date(dateString);\n\n  // Format date to DD/MM/YY (Australian format)\n  const day = date.getDate().toString().padStart(2, \"0\");\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const year = date.getFullYear().toString().slice(-2);\n\n  return `${day}/${month}/${year}`;\n};\n\n// Helper function to get category icon\nconst getCategoryIcon = (category: string) => {\n  switch (category.toLowerCase()) {\n    case \"mortgage\":\n      return <Building2 className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />;\n    case \"vehicle loan\":\n      return (\n        <TrendingDown className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\n      );\n    case \"credit card\":\n      return (\n        <CreditCard className=\"w-4 h-4 text-purple-600 dark:text-purple-400\" />\n      );\n    case \"personal loan\":\n      return (\n        <DollarSign className=\"w-4 h-4 text-orange-600 dark:text-orange-400\" />\n      );\n    case \"education loan\":\n      return (\n        <FileText className=\"w-4 h-4 text-indigo-600 dark:text-indigo-400\" />\n      );\n    case \"business loan\":\n      return <Building2 className=\"w-4 h-4 text-teal-600 dark:text-teal-400\" />;\n    case \"line of credit\":\n      return (\n        <CreditCard className=\"w-4 h-4 text-pink-600 dark:text-pink-400\" />\n      );\n    default:\n      return (\n        <DollarSign className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\n      );\n  }\n};\n\nexport const createColumns = (\n  sortStates: Record<string, \"asc\" | \"desc\" | false>,\n  toggleSorting: (columnId: string) => void\n): ColumnDef<Liability>[] => [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n        className=\"ml-2\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n        className=\"ml-2\"\n        onClick={(e) => e.stopPropagation()}\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"name\",\n    header: () => (\n      <SortableHeader\n        columnId=\"name\"\n        sortState={sortStates.name || false}\n        onToggleSort={toggleSorting}\n      >\n        Liability Name\n      </SortableHeader>\n    ),\n    cell: ({ row }) => {\n      const liability = row.original;\n      return (\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 rounded-full bg-blue-100 dark:bg-blue-900/20 flex items-center justify-center\">\n            {getCategoryIcon(liability.category)}\n          </div>\n          <div>\n            <div className=\"font-medium text-sm\">{liability.name}</div>\n            {liability.institution && (\n              <div className=\"text-xs text-muted-foreground\">\n                {liability.institution}\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"category\",\n    header: () => (\n      <SortableHeader\n        columnId=\"category\"\n        sortState={sortStates.category || false}\n        onToggleSort={toggleSorting}\n      >\n        Category\n      </SortableHeader>\n    ),\n    cell: ({ row }) => (\n      <div className=\"text-sm\">{row.getValue(\"category\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"amount\",\n    header: () => (\n      <SortableHeader\n        columnId=\"amount\"\n        sortState={sortStates.amount || false}\n        onToggleSort={toggleSorting}\n      >\n        Current Amount\n      </SortableHeader>\n    ),\n    cell: ({ row }) => {\n      const liability = row.original;\n      return (\n        <div className=\"text-left\">\n          <div className=\"font-medium text-sm text-red-600 dark:text-red-400\">\n            {formatCurrency(liability.amount, liability.currency)}\n          </div>\n          {liability.remainingBalance &&\n            liability.remainingBalance !== liability.amount && (\n              <div className=\"text-xs text-muted-foreground\">\n                Remaining:{\" \"}\n                {formatCurrency(liability.remainingBalance, liability.currency)}\n              </div>\n            )}\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"interestRate\",\n    header: () => (\n      <SortableHeader\n        columnId=\"interestRate\"\n        sortState={sortStates.interestRate || false}\n        onToggleSort={toggleSorting}\n      >\n        Interest Rate\n      </SortableHeader>\n    ),\n    cell: ({ row }) => {\n      const interestRate = row.getValue(\"interestRate\") as number;\n      if (!interestRate) {\n        return <div className=\"text-sm text-muted-foreground\">N/A</div>;\n      }\n      return (\n        <div className=\"flex items-center space-x-1\">\n          <Percent className=\"h-3 w-3 text-muted-foreground\" />\n          <span className=\"text-sm\">{interestRate.toFixed(2)}%</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"monthlyPayment\",\n    header: () => (\n      <SortableHeader\n        columnId=\"monthlyPayment\"\n        sortState={sortStates.monthlyPayment || false}\n        onToggleSort={toggleSorting}\n      >\n        Monthly Payment\n      </SortableHeader>\n    ),\n    cell: ({ row }) => {\n      const monthlyPayment = row.getValue(\"monthlyPayment\") as number;\n      if (!monthlyPayment) {\n        return <div className=\"text-sm text-muted-foreground\">N/A</div>;\n      }\n      return (\n        <div className=\"text-sm\">\n          {formatCurrency(monthlyPayment, row.original.currency)}\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"dueDate\",\n    header: () => (\n      <SortableHeader\n        columnId=\"dueDate\"\n        sortState={sortStates.dueDate || false}\n        onToggleSort={toggleSorting}\n      >\n        Due Date\n      </SortableHeader>\n    ),\n    cell: ({ row }) => {\n      const dueDate = row.getValue(\"dueDate\") as string;\n      if (!dueDate) {\n        return <div className=\"text-sm text-muted-foreground\">N/A</div>;\n      }\n      return (\n        <div className=\"flex items-center space-x-1\">\n          <Calendar className=\"h-3 w-3 text-muted-foreground\" />\n          <span className=\"text-sm\">{formatDate(dueDate)}</span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"isActive\",\n    header: () => (\n      <SortableHeader\n        columnId=\"isActive\"\n        sortState={sortStates.isActive || false}\n        onToggleSort={toggleSorting}\n      >\n        Status\n      </SortableHeader>\n    ),\n    cell: ({ row }) => {\n      const isActive = row.getValue(\"isActive\") as boolean;\n      return (\n        <span\n          className={`px-2 py-1 text-xs font-medium rounded-full ${\n            isActive\n              ? \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400\"\n              : \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400\"\n          }`}\n        >\n          {isActive ? \"Active\" : \"Inactive\"}\n        </span>\n      );\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const liability = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              className=\"h-8 w-8 p-0\"\n              data-action=\"button\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuItem\n              onClick={(e) => {\n                e.stopPropagation();\n                globalActionHandlers?.onView(liability);\n              }}\n              className=\"cursor-pointer\"\n            >\n              <Eye className=\"mr-2 h-4 w-4\" />\n              View Details\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              onClick={(e) => {\n                e.stopPropagation();\n                globalActionHandlers?.onEdit(liability);\n              }}\n              className=\"cursor-pointer\"\n            >\n              <Edit className=\"mr-2 h-4 w-4\" />\n              Edit Liability\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              onClick={(e) => {\n                e.stopPropagation();\n                globalActionHandlers?.onDelete(liability);\n              }}\n              className=\"cursor-pointer text-red-600 dark:text-red-400\"\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete Liability\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1208, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,sXAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,sXAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,sXAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,sXAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,4RAAA,CAAA,aAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,sXAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gLACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sXAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,4RAAA,CAAA,aAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,4TAAC;;0BACC,4TAAC;;;;;0BACD,4TAAC,sXAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,4TAAC,sXAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,4TAAC,mRAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,4TAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sXAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,4TAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,4TAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,4RAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,sXAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,sXAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,4RAAA,CAAA,aAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,sXAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sXAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1377, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,4TAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1426, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/LiabilityDetailsDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Liability } from \"@/lib/types\";\nimport {\n  Calendar,\n  Building2,\n  CreditCard,\n  Percent,\n  DollarSign,\n  FileText,\n  Clock,\n  TrendingDown,\n} from \"lucide-react\";\n\ninterface LiabilityDetailsDialogProps {\n  liability: Liability | null;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function LiabilityDetailsDialog({\n  liability,\n  isOpen,\n  onClose,\n}: LiabilityDetailsDialogProps) {\n  if (!liability) return null;\n\n  const formatCurrency = (amount: number, currency: string = \"AUD\"): string => {\n    return new Intl.NumberFormat(\"en-AU\", {\n      style: \"currency\",\n      currency: currency,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-AU\", {\n      day: \"numeric\",\n      month: \"long\",\n      year: \"numeric\",\n    });\n  };\n\n  const getLiabilityCategoryIcon = (category: string) => {\n    switch (category.toLowerCase()) {\n      case \"mortgage\":\n        return <Building2 className=\"h-5 w-5 text-blue-600\" />;\n      case \"vehicle loan\":\n        return <TrendingDown className=\"h-5 w-5 text-green-600\" />;\n      case \"credit card\":\n        return <CreditCard className=\"h-5 w-5 text-purple-600\" />;\n      case \"personal loan\":\n        return <DollarSign className=\"h-5 w-5 text-orange-600\" />;\n      case \"education loan\":\n        return <FileText className=\"h-5 w-5 text-indigo-600\" />;\n      case \"business loan\":\n        return <Building2 className=\"h-5 w-5 text-teal-600\" />;\n      case \"line of credit\":\n        return <CreditCard className=\"h-5 w-5 text-pink-600\" />;\n      default:\n        return <DollarSign className=\"h-5 w-5 text-gray-600\" />;\n    }\n  };\n\n  const getStatusBadge = (isActive: boolean) => {\n    return (\n      <Badge\n        variant={isActive ? \"default\" : \"secondary\"}\n        className={\n          isActive\n            ? \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400\"\n            : \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400\"\n        }\n      >\n        {isActive ? \"Active\" : \"Inactive\"}\n      </Badge>\n    );\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-3\">\n            {getLiabilityCategoryIcon(liability.category)}\n            <span>{liability.name}</span>\n          </DialogTitle>\n          <DialogDescription>\n            Detailed information about your liability\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Basic Information */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Basic Information</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-muted-foreground\">\n                  Category\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  {getLiabilityCategoryIcon(liability.category)}\n                  <span className=\"text-sm\">{liability.category}</span>\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-muted-foreground\">\n                  Status\n                </label>\n                <div>{getStatusBadge(liability.isActive)}</div>\n              </div>\n              {liability.institution && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Institution\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Building2 className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm\">{liability.institution}</span>\n                  </div>\n                </div>\n              )}\n              {liability.accountNumber && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Account Number\n                  </label>\n                  <span className=\"text-sm font-mono\">\n                    {liability.accountNumber}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <Separator />\n\n          {/* Financial Details */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Financial Details</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-muted-foreground\">\n                  Current Amount\n                </label>\n                <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n                  {formatCurrency(liability.amount, liability.currency)}\n                </div>\n              </div>\n              {liability.remainingBalance && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Remaining Balance\n                  </label>\n                  <div className=\"text-lg font-semibold\">\n                    {formatCurrency(\n                      liability.remainingBalance,\n                      liability.currency\n                    )}\n                  </div>\n                </div>\n              )}\n              {liability.originalAmount && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Original Amount\n                  </label>\n                  <div className=\"text-sm\">\n                    {formatCurrency(\n                      liability.originalAmount,\n                      liability.currency\n                    )}\n                  </div>\n                </div>\n              )}\n              {liability.interestRate && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Interest Rate\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Percent className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm\">{liability.interestRate}%</span>\n                  </div>\n                </div>\n              )}\n              {liability.monthlyPayment && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Monthly Payment\n                  </label>\n                  <div className=\"text-sm\">\n                    {formatCurrency(\n                      liability.monthlyPayment,\n                      liability.currency\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <Separator />\n\n          {/* Dates */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Important Dates</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {liability.dueDate && (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Due Date\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm\">\n                      {formatDate(liability.dueDate)}\n                    </span>\n                  </div>\n                </div>\n              )}\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-muted-foreground\">\n                  Created\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm\">\n                    {formatDate(liability.createdAt)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Notes */}\n          {liability.notes && (\n            <>\n              <Separator />\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold\">Notes</h3>\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-muted-foreground\">\n                    Additional Information\n                  </label>\n                  <p className=\"text-sm text-muted-foreground bg-muted p-3 rounded-md\">\n                    {liability.notes}\n                  </p>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"flex justify-end space-x-2 pt-4\">\n          <Button variant=\"outline\" onClick={onClose}>\n            Close\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2125, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,4TAAC,wXAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 2160, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport type TextareaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,yBAAW,4RAAA,CAAA,aAAgB,MAC/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACtB,qBACE,4TAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2196, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/select.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 cursor-pointer\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-pointer select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2432, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/EditLiabilityDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Liability } from \"@/lib/types\";\nimport {\n  Building2,\n  CreditCard,\n  DollarSign,\n  FileText,\n  TrendingDown,\n} from \"lucide-react\";\n\ninterface EditLiabilityDialogProps {\n  liability: Liability | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (liability: Liability) => void;\n}\n\nconst liabilityCategories = [\n  \"Mortgage\",\n  \"Vehicle Loan\",\n  \"Credit Card\",\n  \"Personal Loan\",\n  \"Education Loan\",\n  \"Business Loan\",\n  \"Line of Credit\",\n  \"Other\",\n];\n\nconst currencies = [\"AUD\", \"USD\", \"EUR\", \"GBP\", \"CAD\", \"JPY\"];\n\nexport function EditLiabilityDialog({\n  liability,\n  isOpen,\n  onClose,\n  onSave,\n}: EditLiabilityDialogProps) {\n  const [formData, setFormData] = useState<Partial<Liability>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    if (liability) {\n      setFormData({\n        name: liability.name,\n        category: liability.category,\n        amount: liability.amount,\n        currency: liability.currency,\n        institution: liability.institution || \"\",\n        accountNumber: liability.accountNumber || \"\",\n        dueDate: liability.dueDate || \"\",\n        interestRate: liability.interestRate || 0,\n        monthlyPayment: liability.monthlyPayment || 0,\n        remainingBalance: liability.remainingBalance || 0,\n        originalAmount: liability.originalAmount || 0,\n        notes: liability.notes || \"\",\n        isActive: liability.isActive,\n      });\n    }\n    setErrors({});\n  }, [liability]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.name?.trim()) {\n      newErrors.name = \"Name is required\";\n    }\n\n    if (!formData.category) {\n      newErrors.category = \"Category is required\";\n    }\n\n    if (!formData.amount || formData.amount <= 0) {\n      newErrors.amount = \"Amount must be greater than 0\";\n    }\n\n    if (!formData.currency) {\n      newErrors.currency = \"Currency is required\";\n    }\n\n    if (\n      formData.interestRate &&\n      (formData.interestRate < 0 || formData.interestRate > 100)\n    ) {\n      newErrors.interestRate = \"Interest rate must be between 0 and 100\";\n    }\n\n    if (formData.monthlyPayment && formData.monthlyPayment < 0) {\n      newErrors.monthlyPayment = \"Monthly payment cannot be negative\";\n    }\n\n    if (formData.remainingBalance && formData.remainingBalance < 0) {\n      newErrors.remainingBalance = \"Remaining balance cannot be negative\";\n    }\n\n    if (formData.originalAmount && formData.originalAmount < 0) {\n      newErrors.originalAmount = \"Original amount cannot be negative\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm() || !liability) return;\n\n    const updatedLiability: Liability = {\n      ...liability,\n      ...formData,\n      updatedAt: new Date().toISOString(),\n    };\n\n    onSave(updatedLiability);\n  };\n\n  const handleInputChange = (\n    field: keyof Liability,\n    value: string | number | boolean\n  ) => {\n    setFormData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors((prev) => ({\n        ...prev,\n        [field]: \"\",\n      }));\n    }\n  };\n\n  const getLiabilityCategoryIcon = (category: string) => {\n    switch (category.toLowerCase()) {\n      case \"mortgage\":\n        return <Building2 className=\"h-4 w-4 text-blue-600\" />;\n      case \"vehicle loan\":\n        return <TrendingDown className=\"h-4 w-4 text-green-600\" />;\n      case \"credit card\":\n        return <CreditCard className=\"h-4 w-4 text-purple-600\" />;\n      case \"personal loan\":\n        return <DollarSign className=\"h-4 w-4 text-orange-600\" />;\n      case \"education loan\":\n        return <FileText className=\"h-4 w-4 text-indigo-600\" />;\n      case \"business loan\":\n        return <Building2 className=\"h-4 w-4 text-teal-600\" />;\n      case \"line of credit\":\n        return <CreditCard className=\"h-4 w-4 text-pink-600\" />;\n      default:\n        return <DollarSign className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  if (!liability) return null;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-3\">\n            {getLiabilityCategoryIcon(formData.category || liability.category)}\n            <span>Edit Liability</span>\n          </DialogTitle>\n          <DialogDescription>\n            Update the details of your liability\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Basic Information */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Basic Information</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Name *</Label>\n                <Input\n                  id=\"name\"\n                  value={formData.name || \"\"}\n                  onChange={(e) => handleInputChange(\"name\", e.target.value)}\n                  placeholder=\"Enter liability name\"\n                  className={errors.name ? \"border-red-500\" : \"\"}\n                />\n                {errors.name && (\n                  <p className=\"text-sm text-red-500\">{errors.name}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"category\">Category *</Label>\n                <Select\n                  value={formData.category || \"\"}\n                  onValueChange={(value) =>\n                    handleInputChange(\"category\", value)\n                  }\n                >\n                  <SelectTrigger\n                    className={errors.category ? \"border-red-500\" : \"\"}\n                  >\n                    <SelectValue placeholder=\"Select category\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {liabilityCategories.map((category) => (\n                      <SelectItem key={category} value={category}>\n                        <div className=\"flex items-center space-x-2\">\n                          {getLiabilityCategoryIcon(category)}\n                          <span>{category}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {errors.category && (\n                  <p className=\"text-sm text-red-500\">{errors.category}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"institution\">Institution</Label>\n                <Input\n                  id=\"institution\"\n                  value={formData.institution || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"institution\", e.target.value)\n                  }\n                  placeholder=\"e.g., Bank name\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"accountNumber\">Account Number</Label>\n                <Input\n                  id=\"accountNumber\"\n                  value={formData.accountNumber || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"accountNumber\", e.target.value)\n                  }\n                  placeholder=\"e.g., ****1234\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Financial Details */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Financial Details</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"amount\">Current Amount *</Label>\n                <Input\n                  id=\"amount\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.amount || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\"amount\", parseFloat(e.target.value) || 0)\n                  }\n                  placeholder=\"0.00\"\n                  className={errors.amount ? \"border-red-500\" : \"\"}\n                />\n                {errors.amount && (\n                  <p className=\"text-sm text-red-500\">{errors.amount}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"currency\">Currency *</Label>\n                <Select\n                  value={formData.currency || \"\"}\n                  onValueChange={(value) =>\n                    handleInputChange(\"currency\", value)\n                  }\n                >\n                  <SelectTrigger\n                    className={errors.currency ? \"border-red-500\" : \"\"}\n                  >\n                    <SelectValue placeholder=\"Select currency\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {currencies.map((currency) => (\n                      <SelectItem key={currency} value={currency}>\n                        {currency}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {errors.currency && (\n                  <p className=\"text-sm text-red-500\">{errors.currency}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"remainingBalance\">Remaining Balance</Label>\n                <Input\n                  id=\"remainingBalance\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.remainingBalance || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"remainingBalance\",\n                      parseFloat(e.target.value) || 0\n                    )\n                  }\n                  placeholder=\"0.00\"\n                  className={errors.remainingBalance ? \"border-red-500\" : \"\"}\n                />\n                {errors.remainingBalance && (\n                  <p className=\"text-sm text-red-500\">\n                    {errors.remainingBalance}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"originalAmount\">Original Amount</Label>\n                <Input\n                  id=\"originalAmount\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.originalAmount || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"originalAmount\",\n                      parseFloat(e.target.value) || 0\n                    )\n                  }\n                  placeholder=\"0.00\"\n                  className={errors.originalAmount ? \"border-red-500\" : \"\"}\n                />\n                {errors.originalAmount && (\n                  <p className=\"text-sm text-red-500\">\n                    {errors.originalAmount}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"interestRate\">Interest Rate (%)</Label>\n                <Input\n                  id=\"interestRate\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.interestRate || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"interestRate\",\n                      parseFloat(e.target.value) || 0\n                    )\n                  }\n                  placeholder=\"0.00\"\n                  className={errors.interestRate ? \"border-red-500\" : \"\"}\n                />\n                {errors.interestRate && (\n                  <p className=\"text-sm text-red-500\">{errors.interestRate}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"monthlyPayment\">Monthly Payment</Label>\n                <Input\n                  id=\"monthlyPayment\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.monthlyPayment || \"\"}\n                  onChange={(e) =>\n                    handleInputChange(\n                      \"monthlyPayment\",\n                      parseFloat(e.target.value) || 0\n                    )\n                  }\n                  placeholder=\"0.00\"\n                  className={errors.monthlyPayment ? \"border-red-500\" : \"\"}\n                />\n                {errors.monthlyPayment && (\n                  <p className=\"text-sm text-red-500\">\n                    {errors.monthlyPayment}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Dates */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Important Dates</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dueDate\">Due Date</Label>\n                <Input\n                  id=\"dueDate\"\n                  type=\"date\"\n                  value={formData.dueDate || \"\"}\n                  onChange={(e) => handleInputChange(\"dueDate\", e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Status */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Status</h3>\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"isActive\"\n                checked={formData.isActive || false}\n                onCheckedChange={(checked) =>\n                  handleInputChange(\"isActive\", checked as boolean)\n                }\n              />\n              <Label htmlFor=\"isActive\">Active liability</Label>\n            </div>\n          </div>\n\n          {/* Notes */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Additional Information</h3>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"notes\">Notes</Label>\n              <Textarea\n                id=\"notes\"\n                value={formData.notes || \"\"}\n                onChange={(e) => handleInputChange(\"notes\", e.target.value)}\n                placeholder=\"Add any additional notes about this liability...\"\n                rows={3}\n              />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-end space-x-2 pt-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" className=\"button-blue-bg\">\n              Save Changes\n            </Button>\n          </div>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3344, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/DeleteLiabilityDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Liability } from \"@/lib/types\";\nimport { AlertTriangle, Trash2 } from \"lucide-react\";\n\ninterface DeleteLiabilityDialogProps {\n  liability: Liability | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: (liability: Liability) => void;\n}\n\nexport function DeleteLiabilityDialog({\n  liability,\n  isOpen,\n  onClose,\n  onConfirm,\n}: DeleteLiabilityDialogProps) {\n  if (!liability) return null;\n\n  const handleConfirm = () => {\n    onConfirm(liability);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-2 text-red-600 dark:text-red-400\">\n            <AlertTriangle className=\"h-5 w-5\" />\n            <span>Delete Liability</span>\n          </DialogTitle>\n          <DialogDescription>\n            Are you sure you want to delete this liability? This action cannot\n            be undone.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          <div className=\"p-4 bg-red-50 dark:bg-red-950/20 border border-red-200 dark:border-red-800 rounded-lg\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertTriangle className=\"h-5 w-5 text-red-600 dark:text-red-400 mt-0.5\" />\n              <div className=\"space-y-1\">\n                <p className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n                  {liability.name}\n                </p>\n                <p className=\"text-xs text-red-600 dark:text-red-300\">\n                  {liability.category} â¢ {liability.currency}{\" \"}\n                  {liability.amount.toLocaleString()}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"text-sm text-muted-foreground\">\n            <p>\n              This will permanently remove the liability from your records. All\n              associated data, including payment history and notes, will be\n              lost.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end space-x-2 pt-4\">\n          <Button variant=\"outline\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"destructive\"\n            onClick={handleConfirm}\n            className=\"bg-red-600 hover:bg-red-700 dark:bg-red-600 dark:hover:bg-red-700\"\n          >\n            <Trash2 className=\"h-4 w-4 mr-2\" />\n            Delete Liability\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAOA;AAEA;AAAA;AAXA;;;;;AAoBO,SAAS,sBAAsB,KAKT;QALS,EACpC,SAAS,EACT,MAAM,EACN,OAAO,EACP,SAAS,EACkB,GALS;IAMpC,IAAI,CAAC,WAAW,OAAO;IAEvB,MAAM,gBAAgB;QACpB,UAAU;IACZ;IAEA,qBACE,4TAAC,8HAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,4TAAC,8HAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,4TAAC,8HAAA,CAAA,eAAY;;sCACX,4TAAC,8HAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,4TAAC,+SAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;8CACzB,4TAAC;8CAAK;;;;;;;;;;;;sCAER,4TAAC,8HAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAMrB,4TAAC;oBAAI,WAAU;;sCACb,4TAAC;4BAAI,WAAU;sCACb,cAAA,4TAAC;gCAAI,WAAU;;kDACb,4TAAC,+SAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;;kDACzB,4TAAC;wCAAI,WAAU;;0DACb,4TAAC;gDAAE,WAAU;0DACV,UAAU,IAAI;;;;;;0DAEjB,4TAAC;gDAAE,WAAU;;oDACV,UAAU,QAAQ;oDAAC;oDAAI,UAAU,QAAQ;oDAAE;oDAC3C,UAAU,MAAM,CAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;;;sCAMxC,4TAAC;4BAAI,WAAU;sCACb,cAAA,4TAAC;0CAAE;;;;;;;;;;;;;;;;;8BAQP,4TAAC;oBAAI,WAAU;;sCACb,4TAAC,8HAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,SAAS;sCAAS;;;;;;sCAG5C,4TAAC,8HAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,SAAS;4BACT,WAAU;;8CAEV,4TAAC,iSAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;AAO/C;KAnEgB","debugId":null}},
    {"offset": {"line": 3545, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/lib/actions/liability.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { handleError } from \"../utils\";\nimport { connectToDB } from \"@/database/db\";\nimport Liability from \"@/database/models/liability.model\";\nimport { auth } from \"@clerk/nextjs/server\";\n\ndeclare type CreateLiabilityParams = {\n  name: string;\n  category: string;\n  amount: number;\n  currency: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\ndeclare type UpdateLiabilityParams = {\n  name?: string;\n  category?: string;\n  amount?: number;\n  currency?: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\n// Helper function to get authenticated user ID\nasync function getAuthenticatedUserId(): Promise<string> {\n  const { userId } = await auth();\n  if (!userId) {\n    throw new Error(\"Unauthorized: User not authenticated\");\n  }\n  return userId;\n}\n\nexport async function createLiability(liability: CreateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Create new liability with user ID\n    const newLiability = await Liability.create({\n      ...liability,\n      userId,\n      // Convert string dates to Date objects if provided\n      dueDate: liability.dueDate ? new Date(liability.dueDate) : undefined,\n    });\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(newLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilitiesByUserId() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const liabilities = await Liability.find({ userId })\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityById(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only access their own liability\n    const liability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    }).lean();\n\n    if (!liability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    return JSON.parse(JSON.stringify(liability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function updateLiability(liabilityId: string, updates: UpdateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only update their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    // Convert string dates to Date objects if provided\n    const updateData: Record<string, unknown> = { ...updates };\n    if (updates.dueDate) {\n      updateData.dueDate = new Date(updates.dueDate);\n    }\n\n    const updatedLiability = await Liability.findByIdAndUpdate(\n      liabilityId,\n      updateData,\n      { new: true, runValidators: true }\n    );\n\n    if (!updatedLiability) {\n      throw new Error(\"Failed to update liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(updatedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function deleteLiability(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only delete their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    const deletedLiability = await Liability.findByIdAndDelete(liabilityId);\n\n    if (!deletedLiability) {\n      throw new Error(\"Failed to delete liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(deletedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityStats() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const stats = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: null,\n          totalLiabilities: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" },\n          totalMonthlyPayments: { $sum: { $ifNull: [\"$monthlyPayment\", 0] } },\n          averageInterestRate: { $avg: \"$interestRate\" }\n        }\n      }\n    ]);\n\n    const categoryBreakdown = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: \"$category\",\n          count: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" }\n        }\n      },\n      { $sort: { totalAmount: -1 } }\n    ]);\n\n    return {\n      summary: stats[0] || {\n        totalLiabilities: 0,\n        totalAmount: 0,\n        totalRemainingBalance: 0,\n        totalMonthlyPayments: 0,\n        averageInterestRate: 0\n      },\n      categoryBreakdown\n    };\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function searchLiabilities(query: string, filters?: {\n  category?: string;\n  status?: string;\n  minAmount?: number;\n  maxAmount?: number;\n}) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const searchQuery: Record<string, unknown> = { userId };\n\n    // Text search\n    if (query) {\n      searchQuery.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { institution: { $regex: query, $options: 'i' } },\n        { notes: { $regex: query, $options: 'i' } }\n      ];\n    }\n\n    // Apply filters\n    if (filters?.category) {\n      searchQuery.category = filters.category;\n    }\n\n    if (filters?.status === 'active') {\n      searchQuery.isActive = true;\n    } else if (filters?.status === 'inactive') {\n      searchQuery.isActive = false;\n    }\n\n    if (filters?.minAmount !== undefined || filters?.maxAmount !== undefined) {\n      (searchQuery.amount as Record<string, number>) = {};\n      if (filters.minAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$gte = filters.minAmount;\n      }\n      if (filters.maxAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$lte = filters.maxAmount;\n      }\n    }\n\n    const liabilities = await Liability.find(searchQuery)\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiDsB,kBAAA,WAAA,GAAA,CAAA,GAAA,wVAAA,CAAA,wBAAA,EAAA,8CAAA,wVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,wVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3561, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/CreateLiabilityDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Plus, Loader2 } from \"lucide-react\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { createLiability } from \"@/lib/actions/liability.actions\";\n\nconst LIABILITY_CATEGORIES = [\n  \"Credit Card\",\n  \"Student Loan\",\n  \"Mortgage\",\n  \"Car Loan\",\n  \"Personal Loan\",\n  \"Business Loan\",\n  \"Medical Debt\",\n  \"Tax Debt\",\n  \"Other\",\n];\n\nconst CURRENCIES = [\"USD\", \"EUR\", \"GBP\", \"CAD\", \"AUD\", \"JPY\", \"CHF\", \"CNY\"];\n\ninterface CreateLiabilityFormData {\n  name: string;\n  category: string;\n  amount: string;\n  currency: string;\n  institution: string;\n  accountNumber: string;\n  dueDate: string;\n  interestRate: string;\n  monthlyPayment: string;\n  remainingBalance: string;\n  originalAmount: string;\n  notes: string;\n}\n\nconst initialFormData: CreateLiabilityFormData = {\n  name: \"\",\n  category: \"\",\n  amount: \"\",\n  currency: \"USD\",\n  institution: \"\",\n  accountNumber: \"\",\n  dueDate: \"\",\n  interestRate: \"\",\n  monthlyPayment: \"\",\n  remainingBalance: \"\",\n  originalAmount: \"\",\n  notes: \"\",\n};\n\ninterface CreateLiabilityDialogProps {\n  onLiabilityCreated?: () => void;\n}\n\nexport function CreateLiabilityDialog({ onLiabilityCreated }: CreateLiabilityDialogProps) {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState<CreateLiabilityFormData>(initialFormData);\n  const [errors, setErrors] = useState<Partial<CreateLiabilityFormData>>({});\n  const { toast } = useToast();\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<CreateLiabilityFormData> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = \"Name is required\";\n    }\n\n    if (!formData.category) {\n      newErrors.category = \"Category is required\";\n    }\n\n    if (!formData.amount || parseFloat(formData.amount) <= 0) {\n      newErrors.amount = \"Amount must be greater than 0\";\n    }\n\n    if (!formData.currency) {\n      newErrors.currency = \"Currency is required\";\n    }\n\n    if (formData.interestRate && (parseFloat(formData.interestRate) < 0 || parseFloat(formData.interestRate) > 100)) {\n      newErrors.interestRate = \"Interest rate must be between 0% and 100%\";\n    }\n\n    if (formData.monthlyPayment && parseFloat(formData.monthlyPayment) < 0) {\n      newErrors.monthlyPayment = \"Monthly payment must be non-negative\";\n    }\n\n    if (formData.remainingBalance && parseFloat(formData.remainingBalance) < 0) {\n      newErrors.remainingBalance = \"Remaining balance must be non-negative\";\n    }\n\n    if (formData.originalAmount && parseFloat(formData.originalAmount) < 0) {\n      newErrors.originalAmount = \"Original amount must be non-negative\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof CreateLiabilityFormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const liabilityData = {\n        name: formData.name.trim(),\n        category: formData.category,\n        amount: parseFloat(formData.amount),\n        currency: formData.currency,\n        institution: formData.institution.trim() || undefined,\n        accountNumber: formData.accountNumber.trim() || undefined,\n        dueDate: formData.dueDate || undefined,\n        interestRate: formData.interestRate ? parseFloat(formData.interestRate) : undefined,\n        monthlyPayment: formData.monthlyPayment ? parseFloat(formData.monthlyPayment) : undefined,\n        remainingBalance: formData.remainingBalance ? parseFloat(formData.remainingBalance) : undefined,\n        originalAmount: formData.originalAmount ? parseFloat(formData.originalAmount) : undefined,\n        notes: formData.notes.trim() || undefined,\n      };\n\n      await createLiability(liabilityData);\n\n      toast({\n        title: \"Success\",\n        description: \"Liability created successfully\",\n      });\n\n      // Reset form and close dialog\n      setFormData(initialFormData);\n      setErrors({});\n      setOpen(false);\n\n      // Notify parent component to refresh the list\n      if (onLiabilityCreated) {\n        onLiabilityCreated();\n      }\n    } catch (error) {\n      console.error(\"Error creating liability:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to create liability. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData(initialFormData);\n    setErrors({});\n    setOpen(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button className=\"button-blue-bg hover:cursor-pointer\">\n          <Plus className=\"mr-1 h-4 w-4\" />\n          Add Liability\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Create New Liability</DialogTitle>\n          <DialogDescription>\n            Add a new financial liability to track your debt obligations.\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Name *</Label>\n              <Input\n                id=\"name\"\n                value={formData.name}\n                onChange={(e) => handleInputChange(\"name\", e.target.value)}\n                placeholder=\"e.g., Chase Credit Card\"\n                className={errors.name ? \"border-red-500\" : \"\"}\n              />\n              {errors.name && (\n                <p className=\"text-sm text-red-500\">{errors.name}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"category\">Category *</Label>\n              <Select\n                value={formData.category}\n                onValueChange={(value) => handleInputChange(\"category\", value)}\n              >\n                <SelectTrigger className={errors.category ? \"border-red-500\" : \"\"}>\n                  <SelectValue placeholder=\"Select category\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {LIABILITY_CATEGORIES.map((category) => (\n                    <SelectItem key={category} value={category}>\n                      {category}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {errors.category && (\n                <p className=\"text-sm text-red-500\">{errors.category}</p>\n              )}\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"amount\">Amount *</Label>\n              <Input\n                id=\"amount\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.amount}\n                onChange={(e) => handleInputChange(\"amount\", e.target.value)}\n                placeholder=\"0.00\"\n                className={errors.amount ? \"border-red-500\" : \"\"}\n              />\n              {errors.amount && (\n                <p className=\"text-sm text-red-500\">{errors.amount}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"currency\">Currency *</Label>\n              <Select\n                value={formData.currency}\n                onValueChange={(value) => handleInputChange(\"currency\", value)}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {CURRENCIES.map((currency) => (\n                    <SelectItem key={currency} value={currency}>\n                      {currency}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"interestRate\">Interest Rate (%)</Label>\n              <Input\n                id=\"interestRate\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                max=\"100\"\n                value={formData.interestRate}\n                onChange={(e) => handleInputChange(\"interestRate\", e.target.value)}\n                placeholder=\"0.00\"\n                className={errors.interestRate ? \"border-red-500\" : \"\"}\n              />\n              {errors.interestRate && (\n                <p className=\"text-sm text-red-500\">{errors.interestRate}</p>\n              )}\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"institution\">Institution</Label>\n              <Input\n                id=\"institution\"\n                value={formData.institution}\n                onChange={(e) => handleInputChange(\"institution\", e.target.value)}\n                placeholder=\"e.g., Chase Bank\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"accountNumber\">Account Number</Label>\n              <Input\n                id=\"accountNumber\"\n                value={formData.accountNumber}\n                onChange={(e) => handleInputChange(\"accountNumber\", e.target.value)}\n                placeholder=\"Last 4 digits\"\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dueDate\">Due Date</Label>\n              <Input\n                id=\"dueDate\"\n                type=\"date\"\n                value={formData.dueDate}\n                onChange={(e) => handleInputChange(\"dueDate\", e.target.value)}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monthlyPayment\">Monthly Payment</Label>\n              <Input\n                id=\"monthlyPayment\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.monthlyPayment}\n                onChange={(e) => handleInputChange(\"monthlyPayment\", e.target.value)}\n                placeholder=\"0.00\"\n                className={errors.monthlyPayment ? \"border-red-500\" : \"\"}\n              />\n              {errors.monthlyPayment && (\n                <p className=\"text-sm text-red-500\">{errors.monthlyPayment}</p>\n              )}\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"remainingBalance\">Remaining Balance</Label>\n              <Input\n                id=\"remainingBalance\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.remainingBalance}\n                onChange={(e) => handleInputChange(\"remainingBalance\", e.target.value)}\n                placeholder=\"0.00\"\n                className={errors.remainingBalance ? \"border-red-500\" : \"\"}\n              />\n              {errors.remainingBalance && (\n                <p className=\"text-sm text-red-500\">{errors.remainingBalance}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"originalAmount\">Original Amount</Label>\n              <Input\n                id=\"originalAmount\"\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.originalAmount}\n                onChange={(e) => handleInputChange(\"originalAmount\", e.target.value)}\n                placeholder=\"0.00\"\n                className={errors.originalAmount ? \"border-red-500\" : \"\"}\n              />\n              {errors.originalAmount && (\n                <p className=\"text-sm text-red-500\">{errors.originalAmount}</p>\n              )}\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <Textarea\n              id=\"notes\"\n              value={formData.notes}\n              onChange={(e) => handleInputChange(\"notes\", e.target.value)}\n              placeholder=\"Additional notes about this liability...\"\n              rows={3}\n            />\n          </div>\n\n          <DialogFooter>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleCancel}\n              disabled={isLoading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"button-blue-bg\"\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Creating...\n                </>\n              ) : (\n                \"Create Liability\"\n              )}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4358, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/LiabilityFilters.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Table } from \"@tanstack/react-table\";\nimport { Liability } from \"@/lib/types\";\n\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { X, Search, Filter as FilterIcon } from \"lucide-react\";\n\ninterface LiabilityFiltersProps {\n  table?: Table<Liability>;\n}\n\nconst liabilityCategories = [\n  \"All Categories\",\n  \"Mortgage\",\n  \"Vehicle Loan\",\n  \"Credit Card\",\n  \"Personal Loan\",\n  \"Education Loan\",\n  \"Business Loan\",\n  \"Line of Credit\",\n  \"Other\",\n];\n\nconst statusOptions = [\n  { value: \"all\", label: \"All Statuses\" },\n  { value: \"active\", label: \"Active\" },\n  { value: \"inactive\", label: \"Inactive\" },\n];\n\nexport function LiabilityFilters({ table }: LiabilityFiltersProps) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n\n  const [nameFilter, setNameFilter] = useState(searchParams.get(\"name\") || \"\");\n  const [categoryFilter, setCategoryFilter] = useState(\n    searchParams.get(\"category\") || \"all\"\n  );\n  const [statusFilter, setStatusFilter] = useState(\n    searchParams.get(\"status\") || \"all\"\n  );\n  const [minAmount, setMinAmount] = useState(\n    searchParams.get(\"minAmount\") || \"\"\n  );\n  const [maxAmount, setMaxAmount] = useState(\n    searchParams.get(\"maxAmount\") || \"\"\n  );\n\n  // Update URL when filters change\n  useEffect(() => {\n    const params = new URLSearchParams();\n\n    if (nameFilter) params.set(\"name\", nameFilter);\n    if (categoryFilter !== \"all\") params.set(\"category\", categoryFilter);\n    if (statusFilter !== \"all\") params.set(\"status\", statusFilter);\n    if (minAmount) params.set(\"minAmount\", minAmount);\n    if (maxAmount) params.set(\"maxAmount\", maxAmount);\n\n    const newUrl = params.toString()\n      ? `?${params.toString()}`\n      : window.location.pathname;\n    router.push(newUrl);\n  }, [nameFilter, categoryFilter, statusFilter, minAmount, maxAmount, router]);\n\n  // Apply filters to table\n  useEffect(() => {\n    if (table) {\n      // Name filter\n      if (nameFilter) {\n        table.getColumn(\"name\")?.setFilterValue(nameFilter);\n      } else {\n        table.getColumn(\"name\")?.setFilterValue(\"\");\n      }\n\n      // Category filter\n      if (categoryFilter !== \"all\") {\n        table.getColumn(\"category\")?.setFilterValue(categoryFilter);\n      } else {\n        table.getColumn(\"category\")?.setFilterValue(\"\");\n      }\n\n      // Status filter\n      if (statusFilter !== \"all\") {\n        table.getColumn(\"isActive\")?.setFilterValue(statusFilter === \"active\");\n      } else {\n        table.getColumn(\"isActive\")?.setFilterValue(\"\");\n      }\n\n      // Amount range filter\n      if (minAmount || maxAmount) {\n        table.getColumn(\"amount\")?.setFilterValue({\n          min: minAmount ? parseFloat(minAmount) : undefined,\n          max: maxAmount ? parseFloat(maxAmount) : undefined,\n        });\n      } else {\n        table.getColumn(\"amount\")?.setFilterValue(\"\");\n      }\n    }\n  }, [table, nameFilter, categoryFilter, statusFilter, minAmount, maxAmount]);\n\n  const clearAllFilters = () => {\n    setNameFilter(\"\");\n    setCategoryFilter(\"all\");\n    setStatusFilter(\"all\");\n    setMinAmount(\"\");\n    setMaxAmount(\"\");\n\n    // Clear URL params\n    router.push(window.location.pathname);\n  };\n\n  const hasActiveFilters =\n    nameFilter ||\n    categoryFilter !== \"all\" ||\n    statusFilter !== \"all\" ||\n    minAmount ||\n    maxAmount;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          <FilterIcon className=\"h-4 w-4 text-muted-foreground\" />\n          <h3 className=\"text-sm font-medium\">Filters</h3>\n        </div>\n        {hasActiveFilters && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={clearAllFilters}\n            className=\"text-muted-foreground hover:text-foreground\"\n          >\n            <X className=\"h-4 w-4 mr-1\" />\n            Clear All\n          </Button>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {/* Name Filter */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"name-filter\">Name</Label>\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              id=\"name-filter\"\n              placeholder=\"Search by name...\"\n              value={nameFilter}\n              onChange={(e) => setNameFilter(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n        </div>\n\n        {/* Category Filter */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"category-filter\">Category</Label>\n          <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select category\" />\n            </SelectTrigger>\n            <SelectContent>\n              {liabilityCategories.map((category) => (\n                <SelectItem\n                  key={category}\n                  value={category === \"All Categories\" ? \"all\" : category}\n                >\n                  {category}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Status Filter */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"status-filter\">Status</Label>\n          <Select value={statusFilter} onValueChange={setStatusFilter}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select status\" />\n            </SelectTrigger>\n            <SelectContent>\n              {statusOptions.map((option) => (\n                <SelectItem key={option.value} value={option.value}>\n                  {option.label}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Min Amount Filter */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"min-amount\">Min Amount</Label>\n          <Input\n            id=\"min-amount\"\n            type=\"number\"\n            placeholder=\"0.00\"\n            value={minAmount}\n            onChange={(e) => setMinAmount(e.target.value)}\n          />\n        </div>\n\n        {/* Max Amount Filter */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"max-amount\">Max Amount</Label>\n          <Input\n            id=\"max-amount\"\n            type=\"number\"\n            placeholder=\"0.00\"\n            value={maxAmount}\n            onChange={(e) => setMaxAmount(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* Active Filters Display */}\n      {hasActiveFilters && (\n        <div className=\"flex flex-wrap gap-2 pt-2\">\n          {nameFilter && (\n            <div className=\"flex items-center space-x-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 px-2 py-1 rounded-full text-xs\">\n              <span>Name: {nameFilter}</span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setNameFilter(\"\")}\n                className=\"h-4 w-4 p-0 hover:bg-blue-200 dark:hover:bg-blue-800\"\n              >\n                <X className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          )}\n          {categoryFilter !== \"all\" && (\n            <div className=\"flex items-center space-x-1 bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs\">\n              <span>Category: {categoryFilter}</span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setCategoryFilter(\"all\")}\n                className=\"h-4 w-4 p-0 hover:bg-green-200 dark:hover:bg-green-800\"\n              >\n                <X className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          )}\n          {statusFilter !== \"all\" && (\n            <div className=\"flex items-center space-x-1 bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200 px-2 py-1 rounded-full text-xs\">\n              <span>\n                Status: {statusFilter === \"active\" ? \"Active\" : \"Inactive\"}\n              </span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setStatusFilter(\"all\")}\n                className=\"h-4 w-4 p-0 hover:bg-purple-200 dark:hover:bg-purple-800\"\n              >\n                <X className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          )}\n          {(minAmount || maxAmount) && (\n            <div className=\"flex items-center space-x-1 bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-200 px-2 py-1 rounded-full text-xs\">\n              <span>\n                Amount: {minAmount ? `â¥${minAmount}` : \"\"}\n                {minAmount && maxAmount ? \" and \" : \"\"}\n                {maxAmount ? `â¤${maxAmount}` : \"\"}\n              </span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => {\n                  setMinAmount(\"\");\n                  setMaxAmount(\"\");\n                }}\n                className=\"h-4 w-4 p-0 hover:bg-orange-200 dark:hover:bg-orange-800\"\n              >\n                <X className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4951, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,4RAAA,CAAA,aAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,4RAAA,CAAA,aAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,4RAAA,CAAA,aAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,4RAAA,CAAA,aAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,4RAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,4RAAA,CAAA,aAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5072, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/lib/chartUtils.ts"],"sourcesContent":["// Tremor Raw chartColors [v0.1.0]\n\nexport type ColorUtility = \"bg\" | \"stroke\" | \"fill\" | \"text\";\n\nexport const chartColors = {\n  // Sky color gradient for value-based coloring\n  sky50: {\n    bg: \"bg-sky-50\",\n    stroke: \"stroke-sky-50\",\n    fill: \"fill-sky-50\",\n    text: \"text-sky-50\",\n  },\n  sky100: {\n    bg: \"bg-sky-100\",\n    stroke: \"stroke-sky-100\",\n    fill: \"fill-sky-100\",\n    text: \"text-sky-100\",\n  },\n  sky200: {\n    bg: \"bg-sky-200\",\n    stroke: \"stroke-sky-200\",\n    fill: \"fill-sky-200\",\n    text: \"text-sky-200\",\n  },\n  sky300: {\n    bg: \"bg-sky-300\",\n    stroke: \"stroke-sky-300\",\n    fill: \"fill-sky-300\",\n    text: \"text-sky-300\",\n  },\n  sky400: {\n    bg: \"bg-sky-400\",\n    stroke: \"stroke-sky-400\",\n    fill: \"fill-sky-400\",\n    text: \"text-sky-400\",\n  },\n  sky500: {\n    bg: \"bg-sky-500\",\n    stroke: \"stroke-sky-500\",\n    fill: \"fill-sky-500\",\n    text: \"text-sky-500\",\n  },\n  sky600: {\n    bg: \"bg-sky-600\",\n    stroke: \"stroke-sky-600\",\n    fill: \"fill-sky-600\",\n    text: \"text-sky-600\",\n  },\n  sky700: {\n    bg: \"bg-sky-700\",\n    stroke: \"stroke-sky-700\",\n    fill: \"fill-sky-700\",\n    text: \"text-sky-700\",\n  },\n  sky800: {\n    bg: \"bg-sky-800\",\n    stroke: \"stroke-sky-800\",\n    fill: \"fill-sky-800\",\n    text: \"text-sky-800\",\n  },\n  sky900: {\n    bg: \"bg-sky-900\",\n    stroke: \"stroke-sky-900\",\n    fill: \"fill-sky-900\",\n    text: \"text-sky-900\",\n  },\n  sky950: {\n    bg: \"bg-sky-950\",\n    stroke: \"stroke-sky-950\",\n    fill: \"fill-sky-950\",\n    text: \"text-sky-950\",\n  },\n  // Custom darker sky colors for enhanced contrast\n  sky1000: {\n    bg: \"bg-sky-950\",\n    stroke: \"stroke-sky-950\",\n    fill: \"fill-sky-950\",\n    text: \"text-sky-950\",\n  },\n  sky1100: {\n    bg: \"bg-sky-950\",\n    stroke: \"stroke-sky-950\",\n    fill: \"fill-sky-950\",\n    text: \"text-sky-950\",\n  },\n  sky1200: {\n    bg: \"bg-sky-950\",\n    stroke: \"stroke-sky-950\",\n    fill: \"fill-sky-950\",\n    text: \"text-sky-950\",\n  },\n  sky: {\n    bg: \"bg-sky-500\",\n    stroke: \"stroke-sky-500\",\n    fill: \"fill-sky-500\",\n    text: \"text-sky-500\",\n  },\n  blue: {\n    bg: \"bg-blue-500\",\n    stroke: \"stroke-blue-500\",\n    fill: \"fill-blue-500\",\n    text: \"text-blue-500\",\n  },\n  emerald: {\n    bg: \"bg-emerald-500\",\n    stroke: \"stroke-emerald-500\",\n    fill: \"fill-emerald-500\",\n    text: \"text-emerald-500\",\n  },\n  violet: {\n    bg: \"bg-violet-500\",\n    stroke: \"stroke-violet-500\",\n    fill: \"fill-violet-500\",\n    text: \"text-violet-500\",\n  },\n  amber: {\n    bg: \"bg-amber-500\",\n    stroke: \"stroke-amber-500\",\n    fill: \"fill-amber-500\",\n    text: \"text-amber-500\",\n  },\n  gray: {\n    bg: \"bg-gray-500\",\n    stroke: \"stroke-gray-500\",\n    fill: \"fill-gray-500\",\n    text: \"text-gray-500\",\n  },\n  cyan: {\n    bg: \"bg-cyan-500\",\n    stroke: \"stroke-cyan-500\",\n    fill: \"fill-cyan-500\",\n    text: \"text-cyan-500\",\n  },\n  pink: {\n    bg: \"bg-pink-500\",\n    stroke: \"stroke-pink-500\",\n    fill: \"fill-pink-500\",\n    text: \"text-pink-500\",\n  },\n  lime: {\n    bg: \"bg-lime-500\",\n    stroke: \"stroke-lime-500\",\n    fill: \"fill-lime-500\",\n    text: \"text-lime-500\",\n  },\n  fuchsia: {\n    bg: \"bg-fuchsia-500\",\n    stroke: \"stroke-fuchsia-500\",\n    fill: \"fill-fuchsia-500\",\n    text: \"text-fuchsia-500\",\n  },\n  // New vibrant colors for greater variety\n  red: {\n    bg: \"bg-red-500\",\n    stroke: \"stroke-red-500\",\n    fill: \"fill-red-500\",\n    text: \"text-red-500\",\n  },\n  orange: {\n    bg: \"bg-orange-500\",\n    stroke: \"stroke-orange-500\",\n    fill: \"fill-orange-500\",\n    text: \"text-orange-500\",\n  },\n  green: {\n    bg: \"bg-green-500\",\n    stroke: \"stroke-green-500\",\n    fill: \"fill-green-500\",\n    text: \"text-green-500\",\n  },\n  teal: {\n    bg: \"bg-teal-500\",\n    stroke: \"stroke-teal-500\",\n    fill: \"fill-teal-500\",\n    text: \"text-teal-500\",\n  },\n  indigo: {\n    bg: \"bg-indigo-500\",\n    stroke: \"stroke-indigo-500\",\n    fill: \"fill-indigo-500\",\n    text: \"text-indigo-500\",\n  },\n  purple: {\n    bg: \"bg-purple-500\",\n    stroke: \"stroke-purple-500\",\n    fill: \"fill-purple-500\",\n    text: \"text-purple-500\",\n  },\n  rose: {\n    bg: \"bg-rose-500\",\n    stroke: \"stroke-rose-500\",\n    fill: \"fill-rose-500\",\n    text: \"text-rose-500\",\n  },\n  yellow: {\n    bg: \"bg-yellow-500\",\n    stroke: \"stroke-yellow-500\",\n    fill: \"fill-yellow-500\",\n    text: \"text-yellow-500\",\n  },\n} as const satisfies {\n  [color: string]: {\n    [key in ColorUtility]: string;\n  };\n};\n\nexport type AvailableChartColorsKeys = keyof typeof chartColors;\n\nexport const AvailableChartColors: AvailableChartColorsKeys[] = Object.keys(\n  chartColors\n) as Array<AvailableChartColorsKeys>;\n\nexport const constructCategoryColors = (\n  categories: string[],\n  colors: AvailableChartColorsKeys[]\n): Map<string, AvailableChartColorsKeys> => {\n  const categoryColors = new Map<string, AvailableChartColorsKeys>();\n  categories.forEach((category, index) => {\n    categoryColors.set(category, colors[index % colors.length]);\n  });\n  return categoryColors;\n};\n\nexport const getColorClassName = (\n  color: AvailableChartColorsKeys,\n  type: ColorUtility\n): string => {\n  const fallbackColor = {\n    bg: \"bg-gray-500\",\n    stroke: \"stroke-gray-500\",\n    fill: \"fill-gray-500\",\n    text: \"text-gray-500\",\n  };\n  return chartColors[color]?.[type] ?? fallbackColor[type];\n};\n\n// Tremor Raw getYAxisDomain [v0.0.0]\n\nexport const getYAxisDomain = (\n  autoMinValue: boolean,\n  minValue: number | undefined,\n  maxValue: number | undefined\n) => {\n  const minDomain = autoMinValue ? \"auto\" : minValue ?? 0;\n  const maxDomain = maxValue ?? \"auto\";\n  return [minDomain, maxDomain];\n};\n\n// Tremor Raw hasOnlyOneValueForKey [v0.1.0]\n\nexport function hasOnlyOneValueForKey(\n  array: Record<string, unknown>[],\n  keyToCheck: string\n): boolean {\n  const val: unknown[] = [];\n\n  for (const obj of array) {\n    if (Object.prototype.hasOwnProperty.call(obj, keyToCheck)) {\n      val.push(obj[keyToCheck]);\n      if (val.length > 1) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n// Utility functions for formatting and display\n\n// Format currency for display\nexport const formatCurrency = (\n  amount: number,\n  currency: string = \"AUD\"\n): string => {\n  return new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(amount);\n};\n\n// Format percentage for display\nexport const formatPercentage = (value: number): string => {\n  return `${value >= 0 ? \"+\" : \"\"}${value.toFixed(1)}%`;\n};\n\n// Format large numbers with abbreviations\nexport const formatLargeNumber = (num: number): string => {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(1) + \"M\";\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(1) + \"K\";\n  }\n  return num.toString();\n};\n\n// Get color for positive/negative values\nexport const getValueColor = (value: number): string => {\n  if (value > 0) return \"text-green-600\";\n  if (value < 0) return \"text-red-600\";\n  return \"text-gray-600\";\n};\n\n// Get background color for positive/negative values\nexport const getValueBgColor = (value: number): string => {\n  if (value > 0) return \"bg-green-100 dark:bg-green-900/20\";\n  if (value < 0) return \"bg-red-100 dark:bg-red-900/20\";\n  return \"bg-gray-100 dark:bg-gray-900/20\";\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5362, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/DonutChart.tsx"],"sourcesContent":["// Tremor DonutChart [v1.0.0]\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\"use client\";\n\nimport React from \"react\";\nimport {\n  Pie,\n  PieChart as ReChartsDonutChart,\n  ResponsiveContainer,\n  Tooltip,\n  Cell,\n} from \"recharts\";\n\nimport {\n  AvailableChartColors,\n  constructCategoryColors,\n  getColorClassName,\n  type AvailableChartColorsKeys,\n} from \"@/lib/chartUtils\";\nimport { cx } from \"@/lib/utils\";\n\nconst sumNumericArray = (arr: number[]): number =>\n  arr.reduce((sum, num) => sum + num, 0);\n\n// Convert color names or hex values to actual color values for recharts\nconst getColorValue = (colorInput: string): string => {\n  // If it's already a hex color, return it directly\n  if (colorInput.startsWith('#')) {\n    return colorInput;\n  }\n  \n  // Otherwise, treat it as a color name and look it up\n  const colorMap: Record<AvailableChartColorsKeys, string> = {\n    // Sky color gradient (lightest to darkest) - Enhanced darker values for better contrast\n    sky50: \"#f0f9ff\",\n    sky100: \"#e0f2fe\",\n    sky200: \"#bae6fd\",\n    sky300: \"#7dd3fc\",\n    sky400: \"#38bdf8\",\n    sky500: \"#0ea5e9\",\n    sky600: \"#0284c7\",\n    sky700: \"#0369a1\",\n    sky800: \"#075985\",\n    sky900: \"#0c4a6e\",\n    sky950: \"#082f49\",\n    // Custom darker sky colors for maximum contrast\n    sky1000: \"#061c2e\",\n    sky1100: \"#04121f\",\n    sky1200: \"#020a10\",\n    // Add missing sky color\n    sky: \"#0ea5e9\",\n    // Original colors (keeping for backward compatibility)\n    blue: \"#3b82f6\",\n    emerald: \"#10b981\",\n    violet: \"#8b5cf6\",\n    amber: \"#f59e0b\",\n    gray: \"#6b7280\",\n    cyan: \"#06b6d4\",\n    pink: \"#ec4899\",\n    lime: \"#84cc16\",\n    fuchsia: \"#d946ef\",\n    // New vibrant colors\n    red: \"#ef4444\",\n    orange: \"#f97316\",\n    green: \"#22c55e\",\n    teal: \"#14b8a6\",\n    indigo: \"#6366f1\",\n    purple: \"#a855f7\",\n    rose: \"#f43f5e\",\n    yellow: \"#eab308\",\n  };\n  return colorMap[colorInput as AvailableChartColorsKeys] || \"#6b7280\"; // fallback to gray\n};\n\nconst parseData = (\n  data: Record<string, any>[],\n  categoryColors: Map<string, AvailableChartColorsKeys>,\n  category: string\n) => {\n  return data.map((dataPoint) => {\n    // If the data already has a color property, use it; otherwise fall back to category mapping\n    const colorValue =\n      dataPoint.color ||\n      categoryColors.get(dataPoint[category]) ||\n      AvailableChartColors[0];\n\n    return {\n      ...dataPoint,\n      color: colorValue,\n    };\n  });\n};\n\nconst calculateDefaultLabel = (data: any[], valueKey: string): number =>\n  sumNumericArray(data.map((dataPoint) => dataPoint[valueKey]));\n\nconst parseLabelInput = (\n  labelInput: string | undefined,\n  valueFormatter: (value: number) => string,\n  data: any[],\n  valueKey: string\n): string =>\n  labelInput || valueFormatter(calculateDefaultLabel(data, valueKey));\n\n//#region Tooltip\n\ntype TooltipProps = Pick<ChartTooltipProps, \"active\" | \"payload\">;\n\ntype PayloadItem = {\n  category: string;\n  value: number;\n  color: string; // Can be either AvailableChartColorsKeys or hex color\n};\n\ninterface ChartTooltipProps {\n  active: boolean | undefined;\n  payload: PayloadItem[];\n  valueFormatter: (value: number) => string;\n}\n\nconst ChartTooltip = ({\n  active,\n  payload,\n  valueFormatter,\n}: ChartTooltipProps) => {\n  if (active && payload && payload.length) {\n    return (\n      <div\n        className={cx(\n          // base\n          \"rounded-md border text-sm shadow-md\",\n          // border color\n          \"border-gray-200 dark:border-gray-800\",\n          // background color\n          \"bg-white dark:bg-gray-950\"\n        )}\n      >\n        <div className={cx(\"space-y-1 px-4 py-2\")}>\n          {payload.map(({ value, category, color }, index) => (\n            <div\n              key={`id-${index}`}\n              className=\"flex items-center justify-between space-x-8\"\n            >\n              <div className=\"flex items-center space-x-2\">\n                <span\n                  aria-hidden=\"true\"\n                  style={{ backgroundColor: color.startsWith('#') ? color : undefined }}\n                  className={cx(\n                    \"size-2 shrink-0 rounded-full\",\n                    !color.startsWith('#') ? getColorClassName(color as AvailableChartColorsKeys, \"bg\") : \"\"\n                  )}\n                />\n                <p\n                  className={cx(\n                    // base\n                    \"text-right whitespace-nowrap\",\n                    // text color\n                    \"text-gray-700 dark:text-gray-300\"\n                  )}\n                >\n                  {category}\n                </p>\n              </div>\n              <p\n                className={cx(\n                  // base\n                  \"text-right font-medium whitespace-nowrap tabular-nums\",\n                  // text color\n                  \"text-gray-900 dark:bg-gray-50\"\n                )}\n              >\n                {valueFormatter(value)}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return null;\n};\n\ntype DonutChartVariant = \"donut\" | \"pie\";\n\ntype BaseEventProps = {\n  eventType: \"sector\";\n  categoryClicked: string;\n  [key: string]: number | string;\n};\n\ntype DonutChartEventProps = BaseEventProps | null | undefined;\n\ninterface DonutChartProps extends React.HTMLAttributes<HTMLDivElement> {\n  data: Record<string, any>[];\n  category: string;\n  value: string;\n  colors?: AvailableChartColorsKeys[];\n  variant?: DonutChartVariant;\n  valueFormatter?: (value: number) => string;\n  label?: string;\n  showLabel?: boolean;\n  showTooltip?: boolean;\n  onValueChange?: (value: DonutChartEventProps) => void;\n  tooltipCallback?: (tooltipCallbackContent: TooltipProps) => void;\n  customTooltip?: React.ComponentType<TooltipProps>;\n}\n\nconst DonutChart = React.forwardRef<HTMLDivElement, DonutChartProps>(\n  (\n    {\n      data = [],\n      value,\n      category,\n      colors = AvailableChartColors,\n      variant = \"donut\",\n      valueFormatter = (value: number) => value.toString(),\n      label,\n      showLabel = false,\n      showTooltip = true,\n      onValueChange,\n      tooltipCallback,\n      customTooltip,\n      className,\n      ...other\n    },\n    forwardedRef\n  ) => {\n    const CustomTooltip = customTooltip;\n    const [activeIndex, setActiveIndex] = React.useState<number | undefined>(\n      undefined\n    );\n    const isDonut = variant === \"donut\";\n    const parsedLabelInput = parseLabelInput(\n      label,\n      valueFormatter,\n      data,\n      value\n    );\n\n    const categories = Array.from(new Set(data.map((item) => item[category])));\n\n    // Check if data already has pre-assigned colors\n    const hasPreAssignedColors = data.some((item) => item.color);\n\n    // Only construct category colors if no pre-assigned colors exist\n    const categoryColors = hasPreAssignedColors\n      ? new Map() // Empty map to force use of pre-assigned colors\n      : constructCategoryColors(categories, colors);\n\n    const prevActiveRef = React.useRef<boolean | undefined>(undefined);\n    const prevCategoryRef = React.useRef<string | undefined>(undefined);\n\n    const handleShapeClick = (\n      data: any,\n      index: number,\n      event: React.MouseEvent\n    ) => {\n      event.stopPropagation();\n      if (!onValueChange) return;\n\n      if (activeIndex === index) {\n        setActiveIndex(undefined);\n        onValueChange(null);\n      } else {\n        setActiveIndex(index);\n        onValueChange({\n          eventType: \"sector\",\n          categoryClicked: data.payload[category],\n          ...data.payload,\n        });\n      }\n    };\n\n    return (\n      <div\n        ref={forwardedRef}\n        className={cx(\"w-full h-full min-h-[200px]\", className)}\n        tremor-id=\"tremor-raw\"\n        {...other}\n      >\n        <ResponsiveContainer className=\"size-full\">\n          <ReChartsDonutChart\n            onClick={\n              onValueChange && activeIndex !== undefined\n                ? () => {\n                    setActiveIndex(undefined);\n                    onValueChange(null);\n                  }\n                : undefined\n            }\n            margin={{ top: 0, left: 0, right: 0, bottom: 0 }}\n          >\n            {showLabel && isDonut && (\n              <>\n                {/* Define gradient for text */}\n                <defs>\n                  <linearGradient\n                    id=\"textGradient\"\n                    x1=\"0%\"\n                    y1=\"100%\"\n                    x2=\"100%\"\n                    y2=\"0%\"\n                  >\n                    <stop offset=\"0%\" stopColor=\"#082f49\" /> {/* Sky-950 */}\n                    <stop offset=\"100%\" stopColor=\"#0284c7\" /> {/* Sky-600 */}\n                  </linearGradient>\n                </defs>\n                {/* Main value label with gradient fill */}\n                <text\n                  x=\"50%\"\n                  y=\"50%\"\n                  textAnchor=\"middle\"\n                  dominantBaseline=\"middle\"\n                  fontSize=\"24\"\n                  fontWeight=\"900\"\n                  fontFamily=\"system-ui, -apple-system, sans-serif\"\n                  fill=\"url(#textGradient)\"\n                >\n                  {parsedLabelInput}\n                </text>\n              </>\n            )}\n            <Pie\n              data={parseData(data, categoryColors, category)}\n              cx=\"50%\"\n              cy=\"50%\"\n              startAngle={90}\n              endAngle={-270}\n              innerRadius={isDonut ? \"75%\" : \"0%\"}\n              outerRadius=\"100%\"\n              stroke=\"\"\n              strokeLinejoin=\"round\"\n              dataKey={value}\n              nameKey={category}\n              isAnimationActive={false}\n              onClick={handleShapeClick}\n              style={{ outline: \"none\" }}\n            >\n              {parseData(data, categoryColors, category).map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={getColorValue(entry.color)} />\n              ))}\n            </Pie>\n            {showTooltip && (\n              <Tooltip\n                wrapperStyle={{ outline: \"none\" }}\n                isAnimationActive={false}\n                content={({ active, payload }) => {\n                  const cleanPayload = payload\n                    ? payload.map((item: any) => {\n                        // Find the corresponding data entry to get the correct color\n                        const dataEntry = parseData(\n                          data,\n                          categoryColors,\n                          category\n                        ).find(\n                          (entry: any) =>\n                            entry[category] === item.payload[category]\n                        );\n                        return {\n                          category: item.payload[category],\n                          value: item.value,\n                          color: dataEntry?.color || AvailableChartColors[0],\n                        };\n                      })\n                    : [];\n\n                  const payloadCategory: string | undefined =\n                    cleanPayload[0]?.category;\n\n                  if (\n                    tooltipCallback &&\n                    cleanPayload.length > 0 &&\n                    (active !== prevActiveRef.current ||\n                      payloadCategory !== prevCategoryRef.current)\n                  ) {\n                    tooltipCallback({\n                      active,\n                      payload: cleanPayload,\n                    });\n                    prevActiveRef.current = active;\n                    prevCategoryRef.current = payloadCategory;\n                  }\n\n                  return showTooltip && active ? (\n                    CustomTooltip ? (\n                      <CustomTooltip active={active} payload={cleanPayload} />\n                    ) : (\n                      <ChartTooltip\n                        active={active}\n                        payload={cleanPayload}\n                        valueFormatter={valueFormatter}\n                      />\n                    )\n                  ) : null;\n                }}\n              />\n            )}\n          </ReChartsDonutChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n);\n\nDonutChart.displayName = \"DonutChart\";\n\nexport { DonutChart, type DonutChartEventProps, type TooltipProps };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5734, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/LiabilityInsights.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Liability } from \"@/lib/types\";\nimport { DonutChart } from \"@/components/DonutChart\";\nimport {\n  Building2,\n  CreditCard,\n  TrendingDown,\n  DollarSign,\n  FileText,\n  AlertTriangle,\n  Calendar,\n  Percent,\n} from \"lucide-react\";\n\ninterface LiabilityInsightsProps {\n  liabilities: Liability[];\n  isLoading?: boolean;\n}\n\nexport function LiabilityInsights({\n  liabilities,\n  isLoading,\n}: LiabilityInsightsProps) {\n  const getCategoryColor = (category: string): string => {\n    const colors: Record<string, string> = {\n      Mortgage: \"#3B82F6\", // blue\n      \"Vehicle Loan\": \"#10B981\", // green\n      \"Credit Card\": \"#8B5CF6\", // purple\n      \"Personal Loan\": \"#F59E0B\", // orange\n      \"Education Loan\": \"#6366F1\", // indigo\n      \"Business Loan\": \"#14B8A6\", // teal\n      \"Line of Credit\": \"#EC4899\", // pink\n      Other: \"#6B7280\", // gray\n    };\n    return colors[category] || \"#6B7280\";\n  };\n\n  const insights = useMemo(() => {\n    if (!liabilities || liabilities.length === 0) return null;\n\n    const activeLiabilities = liabilities.filter((l) => l.isActive);\n    const totalAmount = activeLiabilities.reduce((sum, l) => sum + l.amount, 0);\n    const totalMonthlyPayments = activeLiabilities.reduce(\n      (sum, l) => sum + (l.monthlyPayment || 0),\n      0\n    );\n    const totalInterest = activeLiabilities.reduce((sum, l) => {\n      if (l.interestRate && l.remainingBalance) {\n        return sum + (l.remainingBalance * l.interestRate) / 100 / 12;\n      }\n      return sum;\n    }, 0);\n\n    // Category breakdown\n    const categoryBreakdown = activeLiabilities.reduce((acc, liability) => {\n      const category = liability.category;\n      if (!acc[category]) {\n        acc[category] = {\n          amount: 0,\n          count: 0,\n          color: getCategoryColor(category),\n        };\n      }\n      acc[category].amount += liability.amount;\n      acc[category].count += 1;\n      return acc;\n    }, {} as Record<string, { amount: number; count: number; color: string }>);\n\n    // Institution breakdown\n    const institutionBreakdown = activeLiabilities.reduce((acc, liability) => {\n      const institution = liability.institution || \"Unknown\";\n      if (!acc[institution]) {\n        acc[institution] = { amount: 0, count: 0 };\n      }\n      acc[institution].amount += liability.amount;\n      acc[institution].count += 1;\n      return acc;\n    }, {} as Record<string, { amount: number; count: number }>);\n\n    // High interest liabilities (above 10%)\n    const highInterestLiabilities = activeLiabilities.filter(\n      (l) => (l.interestRate || 0) > 10\n    );\n\n    // Due soon (within 30 days)\n    const dueSoon = activeLiabilities.filter((l) => {\n      if (!l.dueDate) return false;\n      const dueDate = new Date(l.dueDate);\n      const today = new Date();\n      const diffTime = dueDate.getTime() - today.getTime();\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      return diffDays <= 30 && diffDays >= 0;\n    });\n\n    return {\n      totalAmount,\n      totalMonthlyPayments,\n      totalInterest,\n      categoryBreakdown,\n      institutionBreakdown,\n      highInterestLiabilities,\n      dueSoon,\n      activeCount: activeLiabilities.length,\n      totalCount: liabilities.length,\n    };\n  }, [liabilities]);\n\n  const getCategoryIcon = (category: string) => {\n    switch (category.toLowerCase()) {\n      case \"mortgage\":\n        return <Building2 className=\"h-4 w-4\" />;\n      case \"vehicle loan\":\n        return <TrendingDown className=\"h-4 w-4\" />;\n      case \"credit card\":\n        return <CreditCard className=\"h-4 w-4\" />;\n      case \"personal loan\":\n        return <DollarSign className=\"h-4 w-4\" />;\n      case \"education loan\":\n        return <FileText className=\"h-4 w-4\" />;\n      case \"business loan\":\n        return <Building2 className=\"h-4 w-4\" />;\n      case \"line of credit\":\n        return <CreditCard className=\"h-4 w-4\" />;\n      default:\n        return <DollarSign className=\"h-4 w-4\" />;\n    }\n  };\n\n  const formatCurrency = (amount: number, currency: string = \"AUD\"): string => {\n    return new Intl.NumberFormat(\"en-AU\", {\n      style: \"currency\",\n      currency: currency,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <Card key={i}>\n              <CardHeader className=\"pb-2\">\n                <div className=\"h-4 bg-muted rounded w-3/4 animate-pulse\" />\n                <div className=\"h-3 bg-muted rounded w-1/2 animate-pulse\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-8 bg-muted rounded w-1/2 animate-pulse\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {Array.from({ length: 2 }).map((_, i) => (\n            <Card key={i}>\n              <CardHeader>\n                <div className=\"h-5 bg-muted rounded w-1/3 animate-pulse\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-64 bg-muted rounded animate-pulse\" />\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (!insights) {\n    return (\n      <div className=\"text-center py-12\">\n        <TrendingDown className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n        <h3 className=\"text-lg font-medium text-muted-foreground mb-2\">\n          No liabilities found\n        </h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Add some liabilities to see insights and analytics\n        </p>\n      </div>\n    );\n  }\n\n  const chartData = Object.entries(insights.categoryBreakdown).map(\n    ([category, data]) => ({\n      name: category,\n      value: data.amount,\n      color: data.color,\n    })\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Liabilities\n            </CardTitle>\n            <TrendingDown className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n              {formatCurrency(insights.totalAmount)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {insights.activeCount} active liabilities\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Monthly Payments\n            </CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {formatCurrency(insights.totalMonthlyPayments)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Total monthly obligations\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Monthly Interest\n            </CardTitle>\n            <Percent className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-orange-600 dark:text-orange-400\">\n              {formatCurrency(insights.totalInterest)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Interest paid monthly\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">High Interest</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600 dark:text-red-400\">\n              {insights.highInterestLiabilities.length}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Above 10% interest rate\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Category Breakdown */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Liability Breakdown by Category</CardTitle>\n            <CardDescription>\n              Distribution of your liabilities across different categories\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-64\">\n              <DonutChart\n                data={chartData}\n                category=\"name\"\n                value=\"value\"\n              />\n            </div>\n            <div className=\"mt-4 space-y-2\">\n              {Object.entries(insights.categoryBreakdown).map(\n                ([category, data]) => (\n                  <div\n                    key={category}\n                    className=\"flex items-center justify-between text-sm\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <div\n                        className=\"w-3 h-3 rounded-full\"\n                        style={{ backgroundColor: data.color }}\n                      />\n                      <span className=\"font-medium\">{category}</span>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-medium\">\n                        {formatCurrency(data.amount)}\n                      </div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        {data.count} liability{data.count !== 1 ? \"ies\" : \"\"}\n                      </div>\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Institution Breakdown */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Liability Breakdown by Institution</CardTitle>\n            <CardDescription>\n              Distribution of your liabilities across different financial\n              institutions\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {Object.entries(insights.institutionBreakdown)\n                .sort(([, a], [, b]) => b.amount - a.amount)\n                .slice(0, 8)\n                .map(([institution, data]) => (\n                  <div\n                    key={institution}\n                    className=\"flex items-center justify-between\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <Building2 className=\"h-4 w-4 text-muted-foreground\" />\n                      <span className=\"text-sm font-medium\">{institution}</span>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-sm font-medium\">\n                        {formatCurrency(data.amount)}\n                      </div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        {data.count} liability{data.count !== 1 ? \"ies\" : \"\"}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Alerts and Warnings */}\n      {(insights.highInterestLiabilities.length > 0 ||\n        insights.dueSoon.length > 0) && (\n        <Card className=\"border-orange-200 dark:border-orange-800\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2 text-orange-600 dark:text-orange-400\">\n              <AlertTriangle className=\"h-5 w-5\" />\n              <span>Important Alerts</span>\n            </CardTitle>\n            <CardDescription>Items that require your attention</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {insights.highInterestLiabilities.length > 0 && (\n              <div className=\"space-y-2\">\n                <h4 className=\"font-medium text-orange-800 dark:text-orange-200\">\n                  High Interest Liabilities (\n                  {insights.highInterestLiabilities.length})\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                  {insights.highInterestLiabilities\n                    .slice(0, 4)\n                    .map((liability) => (\n                      <div\n                        key={liability.id}\n                        className=\"flex items-center justify-between p-2 bg-orange-50 dark:bg-orange-950/20 rounded-md\"\n                      >\n                        <div className=\"flex items-center space-x-2\">\n                          {getCategoryIcon(liability.category)}\n                          <span className=\"text-sm font-medium\">\n                            {liability.name}\n                          </span>\n                        </div>\n                        <Badge variant=\"destructive\" className=\"text-xs\">\n                          {(liability.interestRate || 0).toFixed(1)}%\n                        </Badge>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n\n            {insights.dueSoon.length > 0 && (\n              <div className=\"space-y-2\">\n                <h4 className=\"font-medium text-orange-800 dark:text-orange-200\">\n                  Due Soon ({insights.dueSoon.length})\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                  {insights.dueSoon.slice(0, 4).map((liability) => (\n                    <div\n                      key={liability.id}\n                      className=\"flex items-center justify-between p-2 bg-orange-50 dark:bg-orange-950/20 rounded-md\"\n                    >\n                      <div className=\"flex items-center space-x-2\">\n                        <Calendar className=\"h-4 w-4 text-orange-600\" />\n                        <span className=\"text-sm font-medium\">\n                          {liability.name}\n                        </span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {liability.dueDate\n                          ? new Date(liability.dueDate).toLocaleDateString()\n                          : \"N/A\"}\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6782, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/LiabilityPageSkeleton.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\";\n\nexport function LiabilityPageSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Skeleton */}\n      <div className=\"flex items-end justify-between\">\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-9 w-32\" />\n          <Skeleton className=\"h-5 w-80\" />\n        </div>\n        <Skeleton className=\"h-10 w-32\" />\n      </div>\n\n      {/* Tabs Skeleton */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <Skeleton className=\"h-10 w-80\" />\n          <Skeleton className=\"h-10 w-24\" />\n        </div>\n      </div>\n\n      {/* Content Skeleton */}\n      <div className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <div key={i} className=\"space-y-2\">\n              <Skeleton className=\"h-4 w-20\" />\n              <Skeleton className=\"h-8 w-32\" />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"space-y-4\">\n          <Skeleton className=\"h-64 w-full\" />\n          <Skeleton className=\"h-32 w-full\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,4TAAC;QAAI,WAAU;;0BAEb,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAI,WAAU;;0CACb,4TAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,4TAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;kCAEtB,4TAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAItB,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC;oBAAI,WAAU;;sCACb,4TAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,4TAAC,gIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAKxB,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,4TAAC;gCAAY,WAAU;;kDACrB,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;+BAFZ;;;;;;;;;;kCAOd,4TAAC;wBAAI,WAAU;;0CACb,4TAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,4TAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAK9B;KAtCgB","debugId":null}},
    {"offset": {"line": 6945, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/LiabilityTableSkeleton.tsx"],"sourcesContent":["import { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface LiabilityTableSkeletonProps {\n  rowCount?: number;\n  isMobile?: boolean;\n}\n\nexport function LiabilityTableSkeleton({\n  rowCount = 8,\n  isMobile = false,\n}: LiabilityTableSkeletonProps) {\n  return (\n    <div className=\"w-full space-y-4\">\n      {/* Table Skeleton */}\n      <div className=\"overflow-hidden rounded-md border w-full bg-neutral-50 dark:bg-neutral-900 shadow-sm\">\n        <div className=\"p-4\">\n          <div className=\"space-y-3\">\n            {/* Header Row */}\n            <div className=\"flex items-center space-x-4\">\n              <Skeleton className=\"h-4 w-4\" />\n              <Skeleton className=\"h-4 w-32\" />\n              <Skeleton className=\"h-4 w-24\" />\n              {!isMobile && (\n                <>\n                  <Skeleton className=\"h-4 w-28\" />\n                  <Skeleton className=\"h-4 w-24\" />\n                </>\n              )}\n              <Skeleton className=\"h-4 w-20\" />\n              <Skeleton className=\"h-4 w-16\" />\n            </div>\n\n            {/* Data Rows */}\n            {Array.from({ length: rowCount }).map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-4 py-2\">\n                <Skeleton className=\"h-4 w-4\" />\n                <div className=\"flex items-center space-x-3\">\n                  <Skeleton className=\"h-8 w-8 rounded-full\" />\n                  <div className=\"space-y-1\">\n                    <Skeleton className=\"h-4 w-32\" />\n                    <Skeleton className=\"h-3 w-24\" />\n                  </div>\n                </div>\n                <Skeleton className=\"h-4 w-20\" />\n                {!isMobile && (\n                  <>\n                    <Skeleton className=\"h-4 w-24\" />\n                    <Skeleton className=\"h-4 w-20\" />\n                  </>\n                )}\n                <Skeleton className=\"h-4 w-16\" />\n                <Skeleton className=\"h-4 w-16\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Pagination Skeleton */}\n      <div className=\"flex items-center justify-between space-x-2 py-4\">\n        <Skeleton className=\"h-4 w-48\" />\n        <div className=\"flex items-center space-x-2\">\n          <Skeleton className=\"h-8 w-20\" />\n          <Skeleton className=\"h-8 w-20\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,uBAAuB,KAGT;QAHS,EACrC,WAAW,CAAC,EACZ,WAAW,KAAK,EACY,GAHS;IAIrC,qBACE,4TAAC;QAAI,WAAU;;0BAEb,4TAAC;gBAAI,WAAU;0BACb,cAAA,4TAAC;oBAAI,WAAU;8BACb,cAAA,4TAAC;wBAAI,WAAU;;0CAEb,4TAAC;gCAAI,WAAU;;kDACb,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCACnB,CAAC,0BACA;;0DACE,4TAAC,gIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,4TAAC,gIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;kDAGxB,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,4TAAC,gIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;;;;;;4BAIrB,MAAM,IAAI,CAAC;gCAAE,QAAQ;4BAAS,GAAG,GAAG,CAAC,CAAC,GAAG,kBACxC,4TAAC;oCAAY,WAAU;;sDACrB,4TAAC,gIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,4TAAC;4CAAI,WAAU;;8DACb,4TAAC,gIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,4TAAC;oDAAI,WAAU;;sEACb,4TAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,4TAAC,gIAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;;;;;;;;;;;;;sDAGxB,4TAAC,gIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCACnB,CAAC,0BACA;;8DACE,4TAAC,gIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACpB,4TAAC,gIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;sDAGxB,4TAAC,gIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;sDACpB,4TAAC,gIAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;;mCAjBZ;;;;;;;;;;;;;;;;;;;;;0BAyBlB,4TAAC;gBAAI,WAAU;;kCACb,4TAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;kCACpB,4TAAC;wBAAI,WAAU;;0CACb,4TAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,4TAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAK9B;KA7DgB","debugId":null}},
    {"offset": {"line": 7196, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/sample-liabilities.tsx"],"sourcesContent":["import { Liability } from \"@/lib/types\";\n\nexport const sampleLiabilities: Liability[] = [\n  {\n    id: \"1\",\n    userId: \"sample_user_1\",\n    name: \"Home Mortgage\",\n    category: \"Mortgage\",\n    amount: 450000,\n    currency: \"AUD\",\n    institution: \"Commonwealth Bank\",\n    accountNumber: \"****5678\",\n    dueDate: \"2035-06-15\",\n    interestRate: 4.25,\n    monthlyPayment: 2200,\n    remainingBalance: 420000,\n    originalAmount: 500000,\n    notes: \"30-year fixed rate mortgage on primary residence\",\n    isActive: true,\n    createdAt: \"2020-06-15\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"2\",\n    userId: \"sample_user_1\",\n    name: \"Car Loan\",\n    category: \"Vehicle Loan\",\n    amount: 25000,\n    currency: \"AUD\",\n    institution: \"Westpac\",\n    accountNumber: \"****9012\",\n    dueDate: \"2027-03-10\",\n    interestRate: 6.5,\n    monthlyPayment: 450,\n    remainingBalance: 18000,\n    originalAmount: 28000,\n    notes: \"5-year car loan for 2022 Toyota Camry\",\n    isActive: true,\n    createdAt: \"2022-03-10\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"3\",\n    userId: \"sample_user_1\",\n    name: \"Student Loan\",\n    category: \"Education Loan\",\n    amount: 35000,\n    currency: \"AUD\",\n    institution: \"HELP Loan\",\n    accountNumber: \"****3456\",\n    dueDate: \"2030-01-01\",\n    interestRate: 2.1,\n    monthlyPayment: 0,\n    remainingBalance: 35000,\n    originalAmount: 35000,\n    notes: \"HELP loan for university studies\",\n    isActive: true,\n    createdAt: \"2018-01-01\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"4\",\n    userId: \"sample_user_1\",\n    name: \"Credit Card\",\n    category: \"Credit Card\",\n    amount: 8500,\n    currency: \"AUD\",\n    institution: \"ANZ\",\n    accountNumber: \"****7890\",\n    dueDate: \"2024-12-15\",\n    interestRate: 19.99,\n    monthlyPayment: 200,\n    remainingBalance: 8500,\n    originalAmount: 10000,\n    notes: \"Credit card with high interest rate\",\n    isActive: true,\n    createdAt: \"2020-01-01\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"5\",\n    userId: \"sample_user_1\",\n    name: \"Personal Loan\",\n    category: \"Personal Loan\",\n    amount: 15000,\n    currency: \"AUD\",\n    institution: \"NAB\",\n    accountNumber: \"****2345\",\n    dueDate: \"2026-08-20\",\n    interestRate: 8.5,\n    monthlyPayment: 350,\n    remainingBalance: 12000,\n    originalAmount: 15000,\n    notes: \"Personal loan for home renovation\",\n    isActive: true,\n    createdAt: \"2023-08-20\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"6\",\n    userId: \"sample_user_1\",\n    name: \"Business Loan\",\n    category: \"Business Loan\",\n    amount: 75000,\n    currency: \"AUD\",\n    institution: \"CBA Business\",\n    accountNumber: \"****6789\",\n    dueDate: \"2029-12-31\",\n    interestRate: 5.75,\n    monthlyPayment: 1200,\n    remainingBalance: 65000,\n    originalAmount: 75000,\n    notes: \"Business expansion loan\",\n    isActive: true,\n    createdAt: \"2021-01-01\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"7\",\n    userId: \"sample_user_1\",\n    name: \"Investment Property Mortgage\",\n    category: \"Mortgage\",\n    amount: 320000,\n    currency: \"AUD\",\n    institution: \"St. George Bank\",\n    accountNumber: \"****0123\",\n    dueDate: \"2040-03-15\",\n    interestRate: 4.5,\n    monthlyPayment: 1600,\n    remainingBalance: 300000,\n    originalAmount: 320000,\n    notes: \"Investment property in Melbourne\",\n    isActive: true,\n    createdAt: \"2021-03-15\",\n    updatedAt: \"2024-11-15\",\n  },\n  {\n    id: \"8\",\n    userId: \"sample_user_1\",\n    name: \"Line of Credit\",\n    category: \"Line of Credit\",\n    amount: 50000,\n    currency: \"AUD\",\n    institution: \"Macquarie Bank\",\n    accountNumber: \"****4567\",\n    dueDate: \"2025-06-30\",\n    interestRate: 7.25,\n    monthlyPayment: 0,\n    remainingBalance: 25000,\n    originalAmount: 50000,\n    notes: \"Revolving line of credit for emergencies\",\n    isActive: true,\n    createdAt: \"2022-06-30\",\n    updatedAt: \"2024-11-15\",\n  },\n];\n"],"names":[],"mappings":";;;AAEO,MAAM,oBAAiC;IAC5C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,UAAU;QACV,QAAQ;QACR,UAAU;QACV,aAAa;QACb,eAAe;QACf,SAAS;QACT,cAAc;QACd,gBAAgB;QAChB,kBAAkB;QAClB,gBAAgB;QAChB,OAAO;QACP,UAAU;QACV,WAAW;QACX,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 7362, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/liabilities/index.ts"],"sourcesContent":["export { LiabilityDetailsDialog } from \"./LiabilityDetailsDialog\";\nexport { EditLiabilityDialog } from \"./EditLiabilityDialog\";\nexport { DeleteLiabilityDialog } from \"./DeleteLiabilityDialog\";\nexport { CreateLiabilityDialog } from \"./CreateLiabilityDialog\";\nexport { LiabilityFilters } from \"./LiabilityFilters\";\nexport { LiabilityInsights } from \"./LiabilityInsights\";\nexport { LiabilityPageSkeleton } from \"./LiabilityPageSkeleton\";\nexport { LiabilityTableSkeleton } from \"./LiabilityTableSkeleton\";\nexport { sampleLiabilities } from \"./sample-liabilities\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 7405, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/lib/actions/liability.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { handleError } from \"../utils\";\nimport { connectToDB } from \"@/database/db\";\nimport Liability from \"@/database/models/liability.model\";\nimport { auth } from \"@clerk/nextjs/server\";\n\ndeclare type CreateLiabilityParams = {\n  name: string;\n  category: string;\n  amount: number;\n  currency: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\ndeclare type UpdateLiabilityParams = {\n  name?: string;\n  category?: string;\n  amount?: number;\n  currency?: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\n// Helper function to get authenticated user ID\nasync function getAuthenticatedUserId(): Promise<string> {\n  const { userId } = await auth();\n  if (!userId) {\n    throw new Error(\"Unauthorized: User not authenticated\");\n  }\n  return userId;\n}\n\nexport async function createLiability(liability: CreateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Create new liability with user ID\n    const newLiability = await Liability.create({\n      ...liability,\n      userId,\n      // Convert string dates to Date objects if provided\n      dueDate: liability.dueDate ? new Date(liability.dueDate) : undefined,\n    });\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(newLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilitiesByUserId() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const liabilities = await Liability.find({ userId })\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityById(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only access their own liability\n    const liability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    }).lean();\n\n    if (!liability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    return JSON.parse(JSON.stringify(liability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function updateLiability(liabilityId: string, updates: UpdateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only update their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    // Convert string dates to Date objects if provided\n    const updateData: Record<string, unknown> = { ...updates };\n    if (updates.dueDate) {\n      updateData.dueDate = new Date(updates.dueDate);\n    }\n\n    const updatedLiability = await Liability.findByIdAndUpdate(\n      liabilityId,\n      updateData,\n      { new: true, runValidators: true }\n    );\n\n    if (!updatedLiability) {\n      throw new Error(\"Failed to update liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(updatedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function deleteLiability(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only delete their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    const deletedLiability = await Liability.findByIdAndDelete(liabilityId);\n\n    if (!deletedLiability) {\n      throw new Error(\"Failed to delete liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(deletedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityStats() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const stats = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: null,\n          totalLiabilities: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" },\n          totalMonthlyPayments: { $sum: { $ifNull: [\"$monthlyPayment\", 0] } },\n          averageInterestRate: { $avg: \"$interestRate\" }\n        }\n      }\n    ]);\n\n    const categoryBreakdown = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: \"$category\",\n          count: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" }\n        }\n      },\n      { $sort: { totalAmount: -1 } }\n    ]);\n\n    return {\n      summary: stats[0] || {\n        totalLiabilities: 0,\n        totalAmount: 0,\n        totalRemainingBalance: 0,\n        totalMonthlyPayments: 0,\n        averageInterestRate: 0\n      },\n      categoryBreakdown\n    };\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function searchLiabilities(query: string, filters?: {\n  category?: string;\n  status?: string;\n  minAmount?: number;\n  maxAmount?: number;\n}) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const searchQuery: Record<string, unknown> = { userId };\n\n    // Text search\n    if (query) {\n      searchQuery.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { institution: { $regex: query, $options: 'i' } },\n        { notes: { $regex: query, $options: 'i' } }\n      ];\n    }\n\n    // Apply filters\n    if (filters?.category) {\n      searchQuery.category = filters.category;\n    }\n\n    if (filters?.status === 'active') {\n      searchQuery.isActive = true;\n    } else if (filters?.status === 'inactive') {\n      searchQuery.isActive = false;\n    }\n\n    if (filters?.minAmount !== undefined || filters?.maxAmount !== undefined) {\n      (searchQuery.amount as Record<string, number>) = {};\n      if (filters.minAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$gte = filters.minAmount;\n      }\n      if (filters.maxAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$lte = filters.maxAmount;\n      }\n    }\n\n    const liabilities = await Liability.find(searchQuery)\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;IA4GsB,kBAAA,WAAA,GAAA,CAAA,GAAA,wVAAA,CAAA,wBAAA,EAAA,8CAAA,wVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,wVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 7421, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/lib/actions/liability.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { handleError } from \"../utils\";\nimport { connectToDB } from \"@/database/db\";\nimport Liability from \"@/database/models/liability.model\";\nimport { auth } from \"@clerk/nextjs/server\";\n\ndeclare type CreateLiabilityParams = {\n  name: string;\n  category: string;\n  amount: number;\n  currency: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\ndeclare type UpdateLiabilityParams = {\n  name?: string;\n  category?: string;\n  amount?: number;\n  currency?: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\n// Helper function to get authenticated user ID\nasync function getAuthenticatedUserId(): Promise<string> {\n  const { userId } = await auth();\n  if (!userId) {\n    throw new Error(\"Unauthorized: User not authenticated\");\n  }\n  return userId;\n}\n\nexport async function createLiability(liability: CreateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Create new liability with user ID\n    const newLiability = await Liability.create({\n      ...liability,\n      userId,\n      // Convert string dates to Date objects if provided\n      dueDate: liability.dueDate ? new Date(liability.dueDate) : undefined,\n    });\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(newLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilitiesByUserId() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const liabilities = await Liability.find({ userId })\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityById(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only access their own liability\n    const liability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    }).lean();\n\n    if (!liability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    return JSON.parse(JSON.stringify(liability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function updateLiability(liabilityId: string, updates: UpdateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only update their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    // Convert string dates to Date objects if provided\n    const updateData: Record<string, unknown> = { ...updates };\n    if (updates.dueDate) {\n      updateData.dueDate = new Date(updates.dueDate);\n    }\n\n    const updatedLiability = await Liability.findByIdAndUpdate(\n      liabilityId,\n      updateData,\n      { new: true, runValidators: true }\n    );\n\n    if (!updatedLiability) {\n      throw new Error(\"Failed to update liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(updatedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function deleteLiability(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only delete their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    const deletedLiability = await Liability.findByIdAndDelete(liabilityId);\n\n    if (!deletedLiability) {\n      throw new Error(\"Failed to delete liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(deletedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityStats() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const stats = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: null,\n          totalLiabilities: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" },\n          totalMonthlyPayments: { $sum: { $ifNull: [\"$monthlyPayment\", 0] } },\n          averageInterestRate: { $avg: \"$interestRate\" }\n        }\n      }\n    ]);\n\n    const categoryBreakdown = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: \"$category\",\n          count: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" }\n        }\n      },\n      { $sort: { totalAmount: -1 } }\n    ]);\n\n    return {\n      summary: stats[0] || {\n        totalLiabilities: 0,\n        totalAmount: 0,\n        totalRemainingBalance: 0,\n        totalMonthlyPayments: 0,\n        averageInterestRate: 0\n      },\n      categoryBreakdown\n    };\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function searchLiabilities(query: string, filters?: {\n  category?: string;\n  status?: string;\n  minAmount?: number;\n  maxAmount?: number;\n}) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const searchQuery: Record<string, unknown> = { userId };\n\n    // Text search\n    if (query) {\n      searchQuery.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { institution: { $regex: query, $options: 'i' } },\n        { notes: { $regex: query, $options: 'i' } }\n      ];\n    }\n\n    // Apply filters\n    if (filters?.category) {\n      searchQuery.category = filters.category;\n    }\n\n    if (filters?.status === 'active') {\n      searchQuery.isActive = true;\n    } else if (filters?.status === 'inactive') {\n      searchQuery.isActive = false;\n    }\n\n    if (filters?.minAmount !== undefined || filters?.maxAmount !== undefined) {\n      (searchQuery.amount as Record<string, number>) = {};\n      if (filters.minAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$gte = filters.minAmount;\n      }\n      if (filters.maxAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$lte = filters.maxAmount;\n      }\n    }\n\n    const liabilities = await Liability.find(searchQuery)\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmJsB,kBAAA,WAAA,GAAA,CAAA,GAAA,wVAAA,CAAA,wBAAA,EAAA,8CAAA,wVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,wVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 7437, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/app/%28dashboard%29/liabilities/data-table.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  getPaginationRowModel,\n  useReactTable,\n  VisibilityState,\n  RowSelectionState,\n  ColumnFiltersState,\n  getFilteredRowModel,\n} from \"@tanstack/react-table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trash2 } from \"lucide-react\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { setGlobalActionHandlers } from \"./columns\";\nimport { Liability } from \"@/lib/types\";\nimport { useSearchParams } from \"next/navigation\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport {\n  LiabilityDetailsDialog,\n  EditLiabilityDialog,\n  DeleteLiabilityDialog,\n  LiabilityTableSkeleton,\n} from \"../../../components/liabilities\";\nimport { updateLiability, deleteLiability } from \"@/lib/actions/liability.actions\";\nimport { useToast } from \"@/components/ui/use-toast\";\n\ninterface DataTableProps<TData extends Liability, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n  isLoading?: boolean;\n  sortStates?: Record<string, \"asc\" | \"desc\" | false>;\n  onTableReady?: (table: ReturnType<typeof useReactTable<TData>>) => void;\n  onDataChange?: () => void;\n}\n\nexport function DataTable<TData extends Liability, TValue>({\n  columns,\n  data,\n  isLoading = false,\n  sortStates,\n  onTableReady,\n  onDataChange,\n}: DataTableProps<TData, TValue>) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = useState<RowSelectionState>({});\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([]);\n  const { toast } = useToast();\n\n  const [selectedLiability, setSelectedLiability] = useState<Liability | null>(\n    null\n  );\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n\n  const searchParams = useSearchParams();\n  const pageSize = 20;\n  const isMobile = useIsMobile();\n\n  // Get filter values from URL search params\n  const nameFilter = searchParams.get(\"name\") || \"\";\n  const selectedCategory = searchParams.get(\"category\") || \"all\";\n  const selectedStatus = searchParams.get(\"status\") || \"all\";\n  const minAmount = searchParams.get(\"minAmount\");\n  const maxAmount = searchParams.get(\"maxAmount\");\n\n  // Set column visibility based on screen size\n  useEffect(() => {\n    if (isMobile) {\n      // On mobile: show select, name, amount, and actions\n      setColumnVisibility({\n        select: true,\n        name: true,\n        category: false,\n        amount: true,\n        interestRate: false,\n        monthlyPayment: false,\n        dueDate: false,\n        isActive: false,\n        actions: true,\n      });\n    } else {\n      // On medium+ devices: show all columns\n      setColumnVisibility({\n        select: true,\n        name: true,\n        category: true,\n        amount: true,\n        interestRate: true,\n        monthlyPayment: true,\n        dueDate: true,\n        isActive: true,\n        actions: true,\n      });\n    }\n  }, [isMobile]);\n\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n    setSelectedLiability(null);\n  };\n\n  const handleViewLiability = (liability: Liability) => {\n    setSelectedLiability(liability);\n    setIsDialogOpen(true);\n  };\n\n  const handleEditLiability = (liability: Liability) => {\n    setSelectedLiability(liability);\n    setIsEditDialogOpen(true);\n  };\n\n  const handleDeleteLiability = (liability: Liability) => {\n    setSelectedLiability(liability);\n    setIsDeleteDialogOpen(true);\n  };\n\n  // Set global action handlers\n  useEffect(() => {\n    setGlobalActionHandlers({\n      onView: handleViewLiability,\n      onEdit: handleEditLiability,\n      onDelete: handleDeleteLiability,\n    });\n  }, []);\n\n  const handleSaveLiability = async (updatedLiability: Liability) => {\n    try {\n      if (!updatedLiability.id) {\n        toast({\n          title: \"Error\",\n          description: \"Cannot update liability without ID\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      await updateLiability(updatedLiability.id, updatedLiability);\n\n      toast({\n        title: \"Success\",\n        description: \"Liability updated successfully\",\n      });\n\n      // Close the dialog\n      setIsEditDialogOpen(false);\n      setSelectedLiability(null);\n\n      // Notify parent to refresh data\n      if (onDataChange) {\n        onDataChange();\n      }\n    } catch (error) {\n      console.error(\"Error updating liability:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to update liability. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleConfirmDelete = async (liability: Liability) => {\n    try {\n      if (!liability.id) {\n        toast({\n          title: \"Error\",\n          description: \"Cannot delete liability without ID\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      await deleteLiability(liability.id);\n\n      toast({\n        title: \"Success\",\n        description: \"Liability deleted successfully\",\n      });\n\n      // Close the dialog\n      setIsDeleteDialogOpen(false);\n      setSelectedLiability(null);\n\n      // Notify parent to refresh data\n      if (onDataChange) {\n        onDataChange();\n      }\n    } catch (error) {\n      console.error(\"Error deleting liability:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete liability. Please try again.\",\n        variant: \"destructive\",\n        });\n    }\n  };\n\n  // Apply custom filters and sorting based on URL search params\n  const filteredAndSortedData = useMemo(() => {\n    let filtered = data as Liability[];\n\n    // Name filter\n    if (nameFilter) {\n      filtered = filtered.filter((liability) =>\n        liability.name.toLowerCase().includes(nameFilter.toLowerCase())\n      );\n    }\n\n    // Category filter\n    if (selectedCategory !== \"all\") {\n      filtered = filtered.filter(\n        (liability) => liability.category === selectedCategory\n      );\n    }\n\n    // Status filter\n    if (selectedStatus !== \"all\") {\n      filtered = filtered.filter((liability) => {\n        if (selectedStatus === \"active\") {\n          return liability.isActive === true;\n        } else {\n          return liability.isActive === false;\n        }\n      });\n    }\n\n    // Amount range filter\n    if (minAmount || maxAmount) {\n      filtered = filtered.filter((liability) => {\n        if (minAmount && maxAmount) {\n          return (\n            liability.amount >= Number(minAmount) &&\n            liability.amount <= Number(maxAmount)\n          );\n        } else if (minAmount) {\n          return liability.amount >= Number(minAmount);\n        } else if (maxAmount) {\n          return liability.amount <= Number(maxAmount);\n        }\n        return true;\n      });\n    }\n\n    // Apply custom sorting\n    if (sortStates) {\n      const activeSort = Object.entries(sortStates).find(\n        ([, state]) => state !== false\n      );\n      if (activeSort) {\n        const [columnId, sortDirection] = activeSort;\n\n        filtered = [...filtered].sort((a, b) => {\n          let aValue: unknown = a[columnId as keyof Liability];\n          let bValue: unknown = b[columnId as keyof Liability];\n\n          // Handle dates\n          if (\n            columnId === \"dueDate\" ||\n            columnId === \"createdAt\" ||\n            columnId === \"updatedAt\"\n          ) {\n            aValue = new Date(aValue as string).getTime();\n            bValue = new Date(bValue as string).getTime();\n          }\n\n          // Handle numbers\n          if (\n            columnId === \"amount\" ||\n            columnId === \"interestRate\" ||\n            columnId === \"monthlyPayment\" ||\n            columnId === \"remainingBalance\" ||\n            columnId === \"originalAmount\"\n          ) {\n            aValue = Number(aValue);\n            bValue = Number(bValue);\n          }\n\n          // Handle booleans\n          if (columnId === \"isActive\") {\n            aValue = (aValue as boolean) ? 1 : 0;\n            bValue = (bValue as boolean) ? 1 : 0;\n          }\n\n          // Handle strings\n          if (typeof aValue === \"string\") {\n            aValue = aValue.toLowerCase();\n            bValue = (bValue as string).toLowerCase();\n          }\n\n          if (sortDirection === \"asc\") {\n            return (aValue as number) < (bValue as number)\n              ? -1\n              : (aValue as number) > (bValue as number)\n              ? 1\n              : 0;\n          } else {\n            return (aValue as number) > (bValue as number)\n              ? -1\n              : (aValue as number) < (bValue as number)\n              ? 1\n              : 0;\n          }\n        });\n      }\n    }\n\n    return filtered;\n  }, [\n    data,\n    nameFilter,\n    selectedCategory,\n    selectedStatus,\n    minAmount,\n    maxAmount,\n    sortStates,\n  ]);\n\n  const table = useReactTable({\n    data: filteredAndSortedData as TData[],\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    onColumnFiltersChange: (updater) => {\n      setColumnFilters(updater);\n      // Reset to first page when filtering\n      setCurrentPage(1);\n    },\n    state: {\n      pagination: {\n        pageIndex: currentPage - 1,\n        pageSize: pageSize,\n      },\n      columnVisibility,\n      rowSelection,\n      columnFilters,\n    },\n    // Set initial column visibility\n    initialState: {\n      columnVisibility,\n    },\n    onPaginationChange: (updater) => {\n      if (typeof updater === \"function\") {\n        const newState = updater({\n          pageIndex: currentPage - 1,\n          pageSize: pageSize,\n        });\n        setCurrentPage(newState.pageIndex + 1);\n      }\n    },\n  });\n\n  // Notify parent component when table is ready\n  useEffect(() => {\n    if (onTableReady && table) {\n      onTableReady(table);\n    }\n  }, [table, onTableReady]);\n\n  // Get selected count for display\n  const selectedCount = table.getFilteredSelectedRowModel().rows.length;\n\n  const totalPages = Math.ceil(\n    table.getFilteredRowModel().rows.length / pageSize\n  );\n\n  // Reset to first page when filtered results change\n  useEffect(() => {\n    if (currentPage > totalPages && totalPages > 0) {\n      setCurrentPage(1);\n    }\n  }, [totalPages, currentPage]);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    table.setPageIndex(page - 1);\n  };\n\n  // Handle delete selected liabilities\n  const handleDeleteSelected = () => {\n    const selectedRows = table.getFilteredSelectedRowModel().rows;\n    const selectedLiabilities = selectedRows.map(\n      (row) => row.original as Liability\n    );\n\n    if (selectedLiabilities.length === 0) return;\n\n    // Show confirmation dialog\n    const confirmMessage =\n      selectedLiabilities.length === 1\n        ? `Are you sure you want to delete the liability \"${selectedLiabilities[0].name}\"?`\n        : `Are you sure you want to delete ${selectedLiabilities.length} selected liabilities?`;\n\n    if (window.confirm(confirmMessage)) {\n      // TODO: Implement actual deletion logic here\n      console.log(\"Deleting liabilities:\", selectedLiabilities);\n\n      // Clear selection after deletion\n      setRowSelection({});\n\n      // You would typically call an API endpoint here to delete the liabilities\n      // For now, we'll just log the action\n    }\n  };\n\n  // Show skeleton if loading or no data\n  if (isLoading || !data || data.length === 0) {\n    return <LiabilityTableSkeleton rowCount={8} isMobile={isMobile} />;\n  }\n\n  return (\n    <div className=\"w-full space-y-4 -mt-4\">\n      {/* Liability Filters moved to main page level */}\n\n      {/* Delete Selected Button */}\n      {selectedCount > 0 && (\n        <div className=\"flex items-center justify-between p-4 bg-red-50 dark:bg-red-950/20 border border-red-200 dark:border-red-800 rounded-lg\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-red-700 dark:text-red-300\">\n              {selectedCount} liability{selectedCount === 1 ? \"\" : \"ies\"}{\" \"}\n              selected:\n            </span>\n          </div>\n          <Button\n            variant=\"destructive\"\n            size=\"sm\"\n            onClick={handleDeleteSelected}\n            className=\"bg-red-600 hover:bg-red-700 dark:bg-red-600 dark:hover:bg-red-700\"\n          >\n            <Trash2 className=\"h-4 w-4 mr-2\" />\n            Delete\n          </Button>\n        </div>\n      )}\n\n      <div className=\"overflow-hidden rounded-md border w-full bg-neutral-50 dark:bg-neutral-900 shadow-sm\">\n        <Table className={`w-full ${isMobile ? \"text-sm\" : \"\"}`}>\n          <TableHeader className=\"text-semibold !bg-white hover:!bg-white dark:!bg-neutral-950 dark:hover:!bg-neutral-950 rounded-t-lg\">\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow\n                key={headerGroup.id}\n                className=\"hover:!bg-white dark:hover:!bg-white\"\n              >\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead\n                      key={header.id}\n                      className={`ml-0 ${\n                        header.id === \"select\" ? \"pl-2\" : \"pl-0\"\n                      } ${isMobile ? \"py-1 px-2 text-sm\" : \"py-2 text-base\"}`}\n                    >\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                  className=\"cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors group\"\n                  onClick={(e) => {\n                    // Don't open details if clicking on action buttons or checkboxes\n                    if (\n                      e.target instanceof Element &&\n                      (e.target.closest('[data-action=\"button\"]') ||\n                        e.target.closest('input[type=\"checkbox\"]'))\n                    ) {\n                      return;\n                    }\n                    handleViewLiability(row.original as Liability);\n                  }}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell\n                      key={cell.id}\n                      className={`text-left group-hover:bg-slate-50 dark:group-hover:bg-slate-800/30 ${\n                        isMobile ? \"py-1\" : \"py-2\"\n                      } ${cell.column.id !== \"actions\" ? \"pl-2\" : \"\"}`}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  {filteredAndSortedData.length === 0 && data.length > 0\n                    ? \"No results found for your search criteria.\"\n                    : \"No liabilities available.\"}\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n\n      {/* Mobile columns info */}\n      {isMobile && (\n        <div className=\"text-xs text-muted-foreground text-center py-2\">\n          ð¡ Swipe to see more details â¢ Tap row to view full liability\n        </div>\n      )}\n\n      {/* Pagination and Row Selection Info */}\n      {totalPages > 1 && (\n        <div className=\"flex items-center justify-between space-x-2 py-0\">\n          <div className=\"text-muted-foreground flex-1 text-sm\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"flex items-center space-x-6\">\n            <div className=\"text-sm text-muted-foreground whitespace-nowrap\">\n              Showing {(currentPage - 1) * pageSize + 1} to{\" \"}\n              {Math.min(\n                currentPage * pageSize,\n                table.getFilteredRowModel().rows.length\n              )}{\" \"}\n              of {table.getFilteredRowModel().rows.length} results\n            </div>\n            <div className=\"space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => handlePageChange(Math.max(1, currentPage - 1))}\n                disabled={currentPage === 1}\n                className=\"enabled:cursor-pointer\"\n              >\n                Previous\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"enabled:cursor-pointer\"\n                size=\"sm\"\n                onClick={() =>\n                  handlePageChange(Math.min(totalPages, currentPage + 1))\n                }\n                disabled={currentPage === totalPages}\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Row Selection Info when no pagination */}\n      {totalPages <= 1 && (\n        <div className=\"flex items-center justify-between space-x-2 py-4\">\n          <div className=\"text-muted-foreground flex-1 text-sm\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"text-sm text-muted-foreground whitespace-nowrap\">\n            Found {table.getFilteredRowModel().rows.length} results\n          </div>\n        </div>\n      )}\n\n      {/* Liability Details Dialog */}\n      <LiabilityDetailsDialog\n        liability={selectedLiability}\n        isOpen={isDialogOpen}\n        onClose={handleCloseDialog}\n      />\n\n      {/* Edit Liability Dialog */}\n      <EditLiabilityDialog\n        liability={selectedLiability}\n        isOpen={isEditDialogOpen}\n        onClose={() => setIsEditDialogOpen(false)}\n        onSave={handleSaveLiability}\n      />\n\n      {/* Delete Liability Dialog */}\n      <DeleteLiabilityDialog\n        liability={selectedLiability}\n        isOpen={isDeleteDialogOpen}\n        onClose={() => setIsDeleteDialogOpen(false)}\n        onConfirm={handleConfirmDelete}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8129, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/hooks/use-sorting.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport type SortState = \"asc\" | \"desc\" | false;\n\nexport const useSorting = () => {\n  const [sortStates, setSortStates] = useState<Record<string, SortState>>({});\n\n  const toggleSorting = useCallback((columnId: string) => {\n    setSortStates((prev) => {\n      const currentState = prev[columnId];\n\n      // Three-state cycle: asc -> desc -> false -> asc\n      let newState: SortState;\n      if (currentState === \"asc\") {\n        newState = \"desc\";\n      } else if (currentState === \"desc\") {\n        newState = false;\n      } else {\n        newState = \"asc\";\n      }\n\n      // Clear other columns' sorting when setting a new one\n      const updatedStates: Record<string, SortState> = {};\n      Object.keys(prev).forEach((key) => {\n        if (key !== columnId) {\n          updatedStates[key] = false;\n        }\n      });\n      updatedStates[columnId] = newState;\n\n      return updatedStates;\n    });\n  }, []);\n\n  const getSortState = useCallback(\n    (columnId: string): SortState => {\n      return sortStates[columnId] || false;\n    },\n    [sortStates]\n  );\n\n  const clearAllSorting = useCallback(() => {\n    setSortStates({});\n  }, []);\n\n  return {\n    sortStates,\n    toggleSorting,\n    getSortState,\n    clearAllSorting,\n  };\n};\n"],"names":[],"mappings":";;;AAAA;;;AAIO,MAAM,aAAa;;IACxB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAA6B,CAAC;IAEzE,MAAM,gBAAgB,CAAA,GAAA,4RAAA,CAAA,cAAW,AAAD;iDAAE,CAAC;YACjC;yDAAc,CAAC;oBACb,MAAM,eAAe,IAAI,CAAC,SAAS;oBAEnC,iDAAiD;oBACjD,IAAI;oBACJ,IAAI,iBAAiB,OAAO;wBAC1B,WAAW;oBACb,OAAO,IAAI,iBAAiB,QAAQ;wBAClC,WAAW;oBACb,OAAO;wBACL,WAAW;oBACb;oBAEA,sDAAsD;oBACtD,MAAM,gBAA2C,CAAC;oBAClD,OAAO,IAAI,CAAC,MAAM,OAAO;iEAAC,CAAC;4BACzB,IAAI,QAAQ,UAAU;gCACpB,aAAa,CAAC,IAAI,GAAG;4BACvB;wBACF;;oBACA,aAAa,CAAC,SAAS,GAAG;oBAE1B,OAAO;gBACT;;QACF;gDAAG,EAAE;IAEL,MAAM,eAAe,CAAA,GAAA,4RAAA,CAAA,cAAW,AAAD;gDAC7B,CAAC;YACC,OAAO,UAAU,CAAC,SAAS,IAAI;QACjC;+CACA;QAAC;KAAW;IAGd,MAAM,kBAAkB,CAAA,GAAA,4RAAA,CAAA,cAAW,AAAD;mDAAE;YAClC,cAAc,CAAC;QACjB;kDAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;GA/Ca","debugId":null}},
    {"offset": {"line": 8196, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/components/ui/tabs.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,uXAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,4RAAA,CAAA,aAAgB,MAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,uXAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG,uXAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,4RAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,uXAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,uXAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,4RAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,4TAAC,uXAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,uXAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 8271, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/lib/actions/liability.actions.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { handleError } from \"../utils\";\nimport { connectToDB } from \"@/database/db\";\nimport Liability from \"@/database/models/liability.model\";\nimport { auth } from \"@clerk/nextjs/server\";\n\ndeclare type CreateLiabilityParams = {\n  name: string;\n  category: string;\n  amount: number;\n  currency: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\ndeclare type UpdateLiabilityParams = {\n  name?: string;\n  category?: string;\n  amount?: number;\n  currency?: string;\n  institution?: string;\n  accountNumber?: string;\n  dueDate?: string;\n  interestRate?: number;\n  monthlyPayment?: number;\n  remainingBalance?: number;\n  originalAmount?: number;\n  notes?: string;\n  isActive?: boolean;\n};\n\n// Helper function to get authenticated user ID\nasync function getAuthenticatedUserId(): Promise<string> {\n  const { userId } = await auth();\n  if (!userId) {\n    throw new Error(\"Unauthorized: User not authenticated\");\n  }\n  return userId;\n}\n\nexport async function createLiability(liability: CreateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Create new liability with user ID\n    const newLiability = await Liability.create({\n      ...liability,\n      userId,\n      // Convert string dates to Date objects if provided\n      dueDate: liability.dueDate ? new Date(liability.dueDate) : undefined,\n    });\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(newLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilitiesByUserId() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const liabilities = await Liability.find({ userId })\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityById(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only access their own liability\n    const liability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    }).lean();\n\n    if (!liability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    return JSON.parse(JSON.stringify(liability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function updateLiability(liabilityId: string, updates: UpdateLiabilityParams) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only update their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    // Convert string dates to Date objects if provided\n    const updateData: Record<string, unknown> = { ...updates };\n    if (updates.dueDate) {\n      updateData.dueDate = new Date(updates.dueDate);\n    }\n\n    const updatedLiability = await Liability.findByIdAndUpdate(\n      liabilityId,\n      updateData,\n      { new: true, runValidators: true }\n    );\n\n    if (!updatedLiability) {\n      throw new Error(\"Failed to update liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(updatedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function deleteLiability(liabilityId: string) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    // Ensure user can only delete their own liability\n    const existingLiability = await Liability.findOne({\n      _id: liabilityId,\n      userId\n    });\n\n    if (!existingLiability) {\n      throw new Error(\"Liability not found or access denied\");\n    }\n\n    const deletedLiability = await Liability.findByIdAndDelete(liabilityId);\n\n    if (!deletedLiability) {\n      throw new Error(\"Failed to delete liability\");\n    }\n\n    revalidatePath(\"/liabilities\");\n    return JSON.parse(JSON.stringify(deletedLiability));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function getLiabilityStats() {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const stats = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: null,\n          totalLiabilities: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" },\n          totalMonthlyPayments: { $sum: { $ifNull: [\"$monthlyPayment\", 0] } },\n          averageInterestRate: { $avg: \"$interestRate\" }\n        }\n      }\n    ]);\n\n    const categoryBreakdown = await Liability.aggregate([\n      { $match: { userId, isActive: true } },\n      {\n        $group: {\n          _id: \"$category\",\n          count: { $sum: 1 },\n          totalAmount: { $sum: \"$amount\" },\n          totalRemainingBalance: { $sum: \"$remainingBalance\" }\n        }\n      },\n      { $sort: { totalAmount: -1 } }\n    ]);\n\n    return {\n      summary: stats[0] || {\n        totalLiabilities: 0,\n        totalAmount: 0,\n        totalRemainingBalance: 0,\n        totalMonthlyPayments: 0,\n        averageInterestRate: 0\n      },\n      categoryBreakdown\n    };\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n\nexport async function searchLiabilities(query: string, filters?: {\n  category?: string;\n  status?: string;\n  minAmount?: number;\n  maxAmount?: number;\n}) {\n  try {\n    const userId = await getAuthenticatedUserId();\n    await connectToDB();\n\n    const searchQuery: Record<string, unknown> = { userId };\n\n    // Text search\n    if (query) {\n      searchQuery.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { institution: { $regex: query, $options: 'i' } },\n        { notes: { $regex: query, $options: 'i' } }\n      ];\n    }\n\n    // Apply filters\n    if (filters?.category) {\n      searchQuery.category = filters.category;\n    }\n\n    if (filters?.status === 'active') {\n      searchQuery.isActive = true;\n    } else if (filters?.status === 'inactive') {\n      searchQuery.isActive = false;\n    }\n\n    if (filters?.minAmount !== undefined || filters?.maxAmount !== undefined) {\n      (searchQuery.amount as Record<string, number>) = {};\n      if (filters.minAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$gte = filters.minAmount;\n      }\n      if (filters.maxAmount !== undefined) {\n        (searchQuery.amount as Record<string, number>).$lte = filters.maxAmount;\n      }\n    }\n\n    const liabilities = await Liability.find(searchQuery)\n      .sort({ createdAt: -1 })\n      .lean();\n\n    return JSON.parse(JSON.stringify(liabilities));\n  } catch (error) {\n    handleError(error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;IAsEsB,yBAAA,WAAA,GAAA,CAAA,GAAA,wVAAA,CAAA,wBAAA,EAAA,8CAAA,wVAAA,CAAA,aAAA,EAAA,KAAA,GAAA,wVAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 8287, "column": 0}, "map": {"version":3,"sources":["file:///Users/ryanbakker/Dev/finova/app/%28dashboard%29/liabilities/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { DashboardFooter } from \"@/components/DashboardFooter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Liability } from \"@/lib/types\";\nimport { BarChart3, Table, Filter, ChevronDown } from \"lucide-react\";\nimport { DataTable } from \"./data-table\";\nimport { createColumns } from \"./columns\";\nimport { Suspense, useState, useEffect, useRef, useCallback } from \"react\";\nimport { useReactTable } from \"@tanstack/react-table\";\nimport {\n  LiabilityPageSkeleton,\n  LiabilityInsights,\n  LiabilityFilters,\n  CreateLiabilityDialog,\n} from \"@/components/liabilities\";\nimport { useSorting } from \"@/hooks/use-sorting\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useSearchParams } from \"next/navigation\";\nimport { getLiabilitiesByUserId } from \"@/lib/actions/liability.actions\";\nimport { useToast } from \"@/components/ui/use-toast\";\n\nfunction LiabilitiesPage() {\n  const [liabilities, setLiabilities] = useState<Liability[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState(\"table\");\n  const [showFilters, setShowFilters] = useState(false);\n  const [tableReady, setTableReady] = useState(false);\n  const { sortStates, toggleSorting } = useSorting();\n  const searchParams = useSearchParams();\n  const tableRef = useRef<ReturnType<typeof useReactTable<Liability>> | null>(\n    null\n  );\n  const { toast } = useToast();\n\n  // Create columns\n  const columns = createColumns(sortStates, toggleSorting);\n\n  // Load liabilities from database\n  const loadLiabilities = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const data = await getLiabilitiesByUserId();\n      // Set the liabilities array regardless of whether it's empty or has data\n      setLiabilities(data || []);\n    } catch (error) {\n      console.error(\"Error loading liabilities:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to load liabilities. Please try again.\",\n        variant: \"destructive\",\n      });\n      // Set empty array on error to clear any previous data\n      setLiabilities([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    loadLiabilities();\n  }, [loadLiabilities]);\n\n  // Check if there are active filters to determine initial filter visibility\n  useEffect(() => {\n    const hasActiveFilters = [\n      searchParams.get(\"name\"),\n      searchParams.get(\"category\"),\n      searchParams.get(\"status\"),\n      searchParams.get(\"minAmount\"),\n      searchParams.get(\"maxAmount\"),\n    ].some(Boolean);\n\n    if (hasActiveFilters) {\n      setShowFilters(true);\n    }\n  }, [searchParams]);\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <LiabilityPageSkeleton />\n        <DashboardFooter />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-end justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Liabilities</h1>\n          <p className=\"text-muted-foreground\">\n            Track and manage your financial liabilities, loans, and debt\n            obligations.\n          </p>\n        </div>\n        <CreateLiabilityDialog onLiabilityCreated={loadLiabilities} />\n      </div>\n\n      {/* View Toggle Tabs - Always visible */}\n      <div className=\"w-full\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <Tabs\n            value={activeTab}\n            onValueChange={setActiveTab}\n            className=\"w-auto\"\n          >\n            <TabsList className=\"grid w-auto grid-cols-2\">\n              <TabsTrigger\n                value=\"table\"\n                className=\"flex items-center space-x-2\"\n              >\n                <Table className=\"h-4 w-4\" />\n                <span>Liability List</span>\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"insights\"\n                className=\"flex items-center space-x-2\"\n              >\n                <BarChart3 className=\"h-4 w-4\" />\n                <span>Insights & Analytics</span>\n              </TabsTrigger>\n            </TabsList>\n          </Tabs>\n\n          {/* Filters Toggle and Clear Button - Only show when table tab is active */}\n          {activeTab === \"table\" && (\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                variant={showFilters ? \"outline\" : \"secondary\"}\n                onClick={() => setShowFilters(!showFilters)}\n                className=\"flex items-center space-x-2 shadow-sm transition-all duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                aria-label={`${showFilters ? \"Hide\" : \"Show\"} filters`}\n                title={`${\n                  showFilters ? \"Hide\" : \"Show\"\n                } filters (Click to toggle)`}\n              >\n                <Filter className=\"h-4 w-4\" />\n                <span>Filters</span>\n                {(() => {\n                  const activeFiltersCount = [\n                    searchParams.get(\"name\"),\n                    searchParams.get(\"category\"),\n                    searchParams.get(\"status\"),\n                    searchParams.get(\"minAmount\"),\n                    searchParams.get(\"maxAmount\"),\n                  ].filter(Boolean).length;\n\n                  return activeFiltersCount > 0 ? (\n                    <span className=\"ml-2 rounded-full bg-blue-100 dark:bg-blue-900/30 px-2 py-1 text-xs font-medium text-blue-800 dark:text-blue-200 animate-pulse\">\n                      {activeFiltersCount}\n                    </span>\n                  ) : null;\n                })()}\n                <div\n                  className={`transition-transform duration-200 ${\n                    showFilters ? \"rotate-180\" : \"\"\n                  }`}\n                >\n                  <ChevronDown className=\"h-4 w-4\" />\n                </div>\n              </Button>\n\n              {(() => {\n                const activeFiltersCount = [\n                  searchParams.get(\"name\"),\n                  searchParams.get(\"category\"),\n                  searchParams.get(\"status\"),\n                  searchParams.get(\"minAmount\"),\n                  searchParams.get(\"maxAmount\"),\n                ].filter(Boolean).length;\n\n                return activeFiltersCount > 0 ? (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => {\n                      // Clear all filters by navigating to the base path\n                      window.location.href = window.location.pathname;\n                    }}\n                    className=\"text-muted-foreground hover:text-foreground transition-colors duration-200 hover:bg-neutral-100 dark:hover:bg-neutral-800\"\n                  >\n                    Clear All Filters\n                  </Button>\n                ) : null;\n              })()}\n            </div>\n          )}\n        </div>\n\n        {/* Filters Section - Only show when table tab is active */}\n        {activeTab === \"table\" && (\n          <div\n            className={`transition-all duration-300 ease-in-out ${\n              showFilters\n                ? \"opacity-100 max-h-[1000px]\"\n                : \"opacity-0 max-h-0 overflow-hidden\"\n            }`}\n          >\n            {tableReady ? (\n              <div className=\"w-full p-3 bg-white dark:bg-neutral-950 border border-neutral-200 dark:border-neutral-800 rounded-lg shadow-sm\">\n                <LiabilityFilters table={tableRef.current || undefined} />\n              </div>\n            ) : (\n              <div className=\"w-full p-4 text-center text-muted-foreground bg-neutral-50 dark:bg-neutral-900/50 border border-neutral-200 dark:border-neutral-700 rounded-lg animate-in fade-in duration-300\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-4 bg-neutral-200 dark:bg-neutral-700 rounded w-1/4 mx-auto mb-2\"></div>\n                  <div className=\"h-4 bg-neutral-200 dark:bg-neutral-700 rounded w-1/2 mx-auto\"></div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Tabs Content */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsContent value=\"table\" className=\"space-y-2\">\n          <Suspense fallback={<LiabilityPageSkeleton />}>\n            <DataTable\n              columns={columns}\n              data={liabilities}\n              isLoading={isLoading}\n              sortStates={sortStates}\n              onTableReady={(table) => {\n                tableRef.current = table;\n                setTableReady(true);\n              }}\n              onDataChange={loadLiabilities}\n            />\n          </Suspense>\n        </TabsContent>\n\n        <TabsContent value=\"insights\" className=\"space-y-4\">\n          <LiabilityInsights liabilities={liabilities} isLoading={isLoading} />\n        </TabsContent>\n      </Tabs>\n\n      <DashboardFooter />\n    </div>\n  );\n}\n\nexport default LiabilitiesPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}